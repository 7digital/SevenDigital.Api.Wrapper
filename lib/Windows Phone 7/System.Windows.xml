<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) Microsoft Corporation.  All rights reserved.
-->
<doc>
  <assembly>
    <name>System.Windows</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Internal.IManagedFrameworkInternalHelper">
      <summary>This type is not intended to be used or implemented by your code. </summary>
    </member>
    <member name="M:Microsoft.Internal.IManagedFrameworkInternalHelper.SetContextEx(System.IntPtr)">
      <summary>[SECURITY CRITICAL] This method is not intended to be used or implemented by your code. </summary>
      <param name="context">Do not use.</param>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableCollection`1">
      <summary>Represents a dynamic data collection that provides notifications when items get added, removed, or when the entire list is refreshed.</summary>
      <typeparam name="T">The type of items in the collection.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> class.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> class and populates it with items copied from the specified collection.</summary>
      <param name="collection">The collection from which the items are copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> class and populates it with items copied from the specified list.</summary>
      <param name="list">The list from which the items are copied.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
      <summary>Removes all items from the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> or <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged">
      <summary>Occurs when an item in the collection changes, or the entire collection changes.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserts an item into the collection at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert.</param>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> or <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event handler.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event with the provided event data.</summary>
      <param name="e">The event data to report in the event.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> event with the provided arguments.</summary>
      <param name="e">The event data to report in the event.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged">
      <summary>Occurs when a property on an individual item in the collection changes.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
      <summary>Removes the item at the specified index from the collection.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> or <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event handler.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
      <summary>Replaces the item at the specified index.</summary>
      <param name="index">The zero-based index of the item to replace.</param>
      <param name="item">The new value for the item at the specified index.</param>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> or <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1">
      <summary>Represents a read-only <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</summary>
      <typeparam name="T">The type of objects that the collection holds.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> class that serves as a wrapper for the specified <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</summary>
      <param name="list">The collection to wrap.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged">
      <summary>Occurs when an item is added or removed.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged" /> event. </summary>
      <param name="args">The event data.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged" /> event. </summary>
      <param name="args">The event data.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>For a description of this member, see <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>For a description of this member, see <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="T:System.Collections.Specialized.INotifyCollectionChanged">
      <summary>Notifies listeners of dynamic changes to a collection, such as when items are added and removed, or the entire collection object is reset.</summary>
    </member>
    <member name="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <summary>Occurs when the items list of the collection has changed, or the collection is reset.</summary>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedAction">
      <summary>Describes the action that caused a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event. </summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add">
      <summary>One or more items were added to the collection.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove">
      <summary>One or more items were removed from the collection.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace">
      <summary>One or more items were replaced in the collection.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset">
      <summary>The content of the collection changed dramatically.</summary>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">
      <summary>Provides event data for the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event.</summary>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> class, specifying the <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction" /> value.</summary>
      <param name="action">The action value, as a value of the enumeration. This should always be <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />; see Remarks.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="action" /> is not <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> class that describes an <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> or <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" /> change.</summary>
      <param name="action">The action value, as a value of the enumeration. This should be <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> or <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />; see Remarks.</param>
      <param name="changedItem">The item that is affected by the change.</param>
      <param name="index">The index where the change occurred.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="action" /> is not <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> or <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> class that describes a <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> change.</summary>
      <param name="action">The action value, as a value of the enumeration. This should be <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />; see Remarks.</param>
      <param name="newItem">The new item that is replacing the original item.</param>
      <param name="oldItem">The original item that is replaced.</param>
      <param name="index">The index of the item being replaced.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="action" /> is not <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />.</exception>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action">
      <summary>Gets the description of the action that caused the event. </summary>
      <returns>The description of the action that caused the event, as a value of the enumeration.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems">
      <summary>Gets the items affected by an action.</summary>
      <returns>The list of items affected by an action. The default is null.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex">
      <summary>Gets the index at which the change occurred.</summary>
      <returns>The index at which the change occurred.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems">
      <summary>Gets the item affected by a <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> or <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" /> action.</summary>
      <returns>The list of items affected by a <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> or <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" /> action.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex">
      <summary>Gets the index at which the change occurred for a <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> or <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" /> action.</summary>
      <returns>The index at which the change occurred for a <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> or <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" /> action.</returns>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler">
      <summary>Represents the method that handles events that implement the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.ComponentModel.AlternateContentPropertyAttribute">
      <summary>Indicates whether a non-content property should be displayed in the the object tree.</summary>
    </member>
    <member name="M:System.ComponentModel.AlternateContentPropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.AlternateContentPropertyAttribute" /> class.</summary>
    </member>
    <member name="T:System.ComponentModel.ClosingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Window.Closing" /> event. </summary>
    </member>
    <member name="M:System.ComponentModel.ClosingEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.ClosingEventArgs" /> class. </summary>
      <param name="isCancelable">Initializes the <see cref="P:System.ComponentModel.ClosingEventArgs.IsCancelable" /> property.</param>
    </member>
    <member name="P:System.ComponentModel.ClosingEventArgs.IsCancelable">
      <summary>Gets a value that indicates whether you can cancel the <see cref="E:System.Windows.Window.Closing" /> event.</summary>
      <returns>true if you can cancel the event; otherwise, false.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> class and sets the <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> property to true.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> class and sets the <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> property to the specified value.</summary>
      <param name="isCancelable">true to disable the ability to cancel a <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> change; false to enable cancellation.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> change should be canceled. </summary>
      <returns>true if the event should be canceled; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> property value is false.</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary>Gets a value that indicates whether the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> change can be canceled. </summary>
      <returns>true if the event can be canceled; false if the event cannot be canceled.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary>Represents a method that can handle the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> event of an <see cref="T:System.ComponentModel.ICollectionView" /> implementation. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.ComponentModel.DataErrorsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.DataErrorsChangedEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataErrorsChangedEventArgs" /> class. </summary>
      <param name="propertyName">The name of the property for which the errors changed, or null or <see cref="F:System.String.Empty" /> for entity-level errors.</param>
    </member>
    <member name="P:System.ComponentModel.DataErrorsChangedEventArgs.PropertyName">
      <summary>Gets the name of the property for which the errors changed, or null or <see cref="F:System.String.Empty" /> for entity-level errors.</summary>
      <returns>The name of the affected property, or null or <see cref="F:System.String.Empty" /> for entity-level errors.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerProperties">
      <summary>Provides attached properties that can be used to communicate with a designer.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> attached property for the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> property value for the element.</returns>
      <param name="element">The element from which the property value is read.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignMode">
      <summary>Gets or sets whether a <see cref="T:System.Windows.DependencyObject" /> is running in the context of a designer.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether a <see cref="T:System.Windows.DependencyObject" /> is running in the context of a designer.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
      <summary>Identifies the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> attached property.</summary>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignTool">
      <summary>Gets a value that indicates whether the element is running in the context of a designer. </summary>
      <returns>true if the element is running in the context of a designer; otherwise, false. </returns>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.RefreshOnlyXmlnsDefinitionsOnAssemblyReplace"></member>
    <member name="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> attached property to a specified element. </summary>
      <param name="element">The element to which the attached property is written.</param>
      <param name="value">The needed <see cref="T:System.Boolean" /> value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary>Provides a base class for defining how to divide the items in a collection into groups.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.GroupDescription" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>Returns the group name or names for the specified item.</summary>
      <returns>An object that represents the group name or names.</returns>
      <param name="item">The item to return the group name for.</param>
      <param name="level">The level of the group within the grouping hierarchy.</param>
      <param name="culture">The culture information that affects grouping.</param>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary>Gets the collection of group names.</summary>
      <returns>The collection of group names. </returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>Indicates whether the specified item belongs in the specified group.</summary>
      <returns>true if the item belongs in the group; otherwise, false.</returns>
      <param name="groupName">The name of the group to check.</param>
      <param name="itemName">The name of the item to check.</param>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" /> event. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary>Occurs when a property value has changed.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary>Indicates whether the group names should be serialized.</summary>
      <returns>true if the group names should be serialized; otherwise, false.</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>For a description of this member, see <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary>Enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary>Gets a value that indicates whether this view supports filtering by way of the <see cref="P:System.ComponentModel.ICollectionView.Filter" /> property.</summary>
      <returns>true if this view supports filtering; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary>Gets a value that indicates whether this view supports grouping by way of the <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" /> property.</summary>
      <returns>true if this view supports grouping; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary>Gets a value that indicates whether this view supports sorting by way of the <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" /> property.</summary>
      <returns>true if this view supports sorting; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary>Indicates whether the specified item belongs to this collection view. </summary>
      <returns>true if the item belongs to this collection view; otherwise, false.</returns>
      <param name="item">The object to check. </param>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary>Gets or sets the cultural information for any operations of the view that may differ by culture, such as sorting.</summary>
      <returns>The culture information to use during culture-sensitive operations. </returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary>Occurs after the current item has been changed.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary>Occurs before the current item changes.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary>Gets the current item in the view.</summary>
      <returns>The current item in the view or null if there is no current item.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary>Gets the ordinal position of the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in the view.</summary>
      <returns>The ordinal position of the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in the view.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh. </summary>
      <returns>The typical usage is to create a using scope with an implementation of this method and then include multiple view-changing calls within the scope. The implementation should delay automatic refresh until after the using scope exits. </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary>Gets or sets a callback that is used to determine whether an item is appropriate for inclusion in the view. </summary>
      <returns>A method that is used to determine whether an item is appropriate for inclusion in the view.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view. </summary>
      <returns>A collection of objects that describe how the items in the collection are grouped in the view. </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary>Gets the top-level groups.</summary>
      <returns>A read-only collection of the top-level groups or null if there are no groups.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary>Gets a value that indicates whether the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> of the view is beyond the end of the collection.</summary>
      <returns>true if the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> of the view is beyond the end of the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary>Gets a value that indicates whether the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> of the view is beyond the start of the collection.</summary>
      <returns>true if the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> of the view is beyond the start of the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary>Gets a value that indicates whether the view is empty.</summary>
      <returns>true if the view is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary>Sets the specified item in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
      <param name="item">The item to set as the current item.</param>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary>Sets the first item in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary>Sets the last item in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary>Sets the item after the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in the view.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
      <param name="position">The index to set the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> to.</param>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary>Sets the item before the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in the view to the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary>Recreates the view.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> instances that describe how the items in the collection are sorted in the view.</summary>
      <returns>A collection of values that describe how the items in the collection are sorted in the view.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary>Gets the underlying collection.</summary>
      <returns>The underlying collection.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary>Defines a method that enables a collection to provide a custom view for specialized sorting, filtering, grouping, and currency.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary>Returns a custom view for specialized sorting, filtering, grouping, and currency.</summary>
      <returns>A custom view for specialized sorting, filtering, grouping, and currency.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary>Defines methods and properties that a collection view implements to provide editing capabilities to a collection.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary>Adds a new item to the underlying collection.</summary>
      <returns>The new item that is added to the collection.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary>Gets a value that indicates whether a new item can be added to the collection.</summary>
      <returns>true if a new item can be added to the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary>Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</summary>
      <returns>true if the collection view can discard pending changes and restore the original values of an edited object; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary>Ends the edit transaction and, if possible, restores the original value of the item.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary>Ends the add transaction and discards the pending new item.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary>Gets a value that indicates whether an item can be removed from the collection.</summary>
      <returns>true if an item can be removed from the collection; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary>Ends the edit transaction and saves the pending changes.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary>Ends the add transaction and saves the pending new item.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary>Gets the item that is being added during the current add transaction.</summary>
      <returns>The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> is true; otherwise, null.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary>Gets the item in the collection that is being edited.</summary>
      <returns>The item that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> is true; otherwise, null.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary>Begins an edit transaction on the specified item.</summary>
      <param name="item">The item to edit.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary>Gets a value that indicates whether an add transaction is in progress.</summary>
      <returns>true if an add transaction is in progress; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary>Gets a value that indicates whether an edit transaction is in progress.</summary>
      <returns>true if an edit transaction is in progress; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary>Gets or sets the position of the new item placeholder in the collection view.</summary>
      <returns>An enumeration value that specifies the position of the new item placeholder in the collection view.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="item">The item to remove.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified position from the collection.</summary>
      <param name="index">Index of item to remove.</param>
    </member>
    <member name="T:System.ComponentModel.INotifyDataErrorInfo">
      <summary>Defines members that data entity classes can implement to provide custom synchronous and asynchronous validation support.</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged">
      <summary>Occurs when the validation errors have changed for a property or for the entire entity. </summary>
    </member>
    <member name="M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)">
      <summary>Gets the validation errors for a specified property or for the entire entity.</summary>
      <returns>The validation errors for the property or entity.</returns>
      <param name="propertyName">The name of the property to retrieve validation errors for; or null or <see cref="F:System.String.Empty" />, to retrieve entity-level errors.</param>
    </member>
    <member name="P:System.ComponentModel.INotifyDataErrorInfo.HasErrors">
      <summary>Gets a value that indicates whether the entity has validation errors. </summary>
      <returns>true if the entity currently has validation errors; otherwise, false.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary>Specifies where the placeholder for a new item appears in an <see cref="T:System.ComponentModel.IEditableCollectionView" />.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary>The collection does not use a new item placeholder. The position of items that are added depends on the underlying collection. Usually, they are added at the end of the collection.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary>The placeholder for a new item appears at the end of the collection. New items are added at the end of the collection, before the new item placeholder.</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary>Defines the direction and the property name that will be used as the criteria for sorting a collection.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.SortDescription" /> structure. </summary>
      <param name="propertyName">The name of the property to sort the list by.</param>
      <param name="direction">The sort order.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="propertyName" /> parameter is empty.-or-The <paramref name="direction" /> parameter does not specify a valid value.</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary>Gets or sets a value that indicates whether to sort in ascending or descending order.</summary>
      <returns>A value that indicates the sort direction. </returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.SortDescription.IsSealed" /> is true.</exception>
      <exception cref="T:System.ArgumentException">The specified value is not a valid sort direction.</exception>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary>Compares the specified instance and the current instance of <see cref="T:System.ComponentModel.SortDescription" /> for value equality.</summary>
      <returns>true if <paramref name="obj" /> and this <see cref="T:System.ComponentModel.SortDescription" /> instance have the same <see cref="P:System.ComponentModel.SortDescription.PropertyName" /> and <see cref="P:System.ComponentModel.SortDescription.Direction" /> values; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.ComponentModel.SortDescription" /> instance to compare.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>The hash code for the current instance.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary>Gets a value that indicates whether this structure is in an immutable state. </summary>
      <returns>true if this object is being used; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>Compares two <see cref="T:System.ComponentModel.SortDescription" /> instances for value equality. </summary>
      <returns>true if the two <see cref="T:System.ComponentModel.SortDescription" /> instances have the same <see cref="P:System.ComponentModel.SortDescription.PropertyName" /> and <see cref="P:System.ComponentModel.SortDescription.Direction" /> values; otherwise, false.</returns>
      <param name="sd1">The first <see cref="T:System.ComponentModel.SortDescription" /> instance to compare.</param>
      <param name="sd2">The second <see cref="T:System.ComponentModel.SortDescription" /> instance to compare.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>Compares two <see cref="T:System.ComponentModel.SortDescription" /> instances for value inequality. </summary>
      <returns>true if the two <see cref="T:System.ComponentModel.SortDescription" /> instances do not have the same <see cref="P:System.ComponentModel.SortDescription.PropertyName" /> and <see cref="P:System.ComponentModel.SortDescription.Direction" /> values; otherwise, false.</returns>
      <param name="sd1">The first <see cref="T:System.ComponentModel.SortDescription" /> instance to compare.</param>
      <param name="sd2">The second <see cref="T:System.ComponentModel.SortDescription" /> instance to compare.</param>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary>Gets or sets the property name being used as the sorting criteria.</summary>
      <returns>The name of the property to sort by.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.SortDescription.IsSealed" /> is true.</exception>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary>Represents a collection of <see cref="T:System.ComponentModel.SortDescription" /> instances.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.SortDescriptionCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary>Removes all <see cref="T:System.ComponentModel.SortDescription" /> instances from the collection.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary>Occurs when a <see cref="T:System.ComponentModel.SortDescription" /> is added or removed.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary>Gets an empty and non-modifiable <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>Inserts a <see cref="T:System.ComponentModel.SortDescription" /> into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the <see cref="T:System.ComponentModel.SortDescription" /> is inserted.</param>
      <param name="item">The <see cref="T:System.ComponentModel.SortDescription" /> to insert.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary>Removes the <see cref="T:System.ComponentModel.SortDescription" /> at the specified index in the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.ComponentModel.SortDescription" /> to remove. </param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>Replaces the <see cref="T:System.ComponentModel.SortDescription" /> at the specified index.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.ComponentModel.SortDescription" /> to replace.</param>
      <param name="item">The new value for the <see cref="T:System.ComponentModel.SortDescription" /> at the specified index.</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>For a description of this member, see <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="T:System.IO.IsolatedStorage.IsolatedStorageSettings">
      <summary>Provides a <see cref="T:System.Collections.Generic.Dictionary`2" /> that stores key-value pairs in isolated storage. </summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null. This exception is thrown when you attempt to reference an instance of the class by using an indexer and the variable you pass in for the key value is null.</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Add(System.String,System.Object)">
      <summary>Adds an entry to the dictionary for the key-value pair.</summary>
      <param name="key">The key for the entry to be stored.</param>
      <param name="value">The value to be stored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> already exists in the dictionary.</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.ApplicationSettings">
      <summary>Gets an instance of <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> that contains the contents of the application's <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" />, scoped at the application level, or creates a new instance of <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> if one does not exist.</summary>
      <returns>An <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> object that contains the contents of the application's <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" />, scoped at the application level. If an instance does not already exist, a new instance is created.</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Clear">
      <summary>Resets the count of items stored in <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> to zero and releases all references to elements in the collection.</summary>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Contains(System.String)">
      <summary>Determines if the application settings dictionary contains the specified key.</summary>
      <returns>true if the dictionary contains the specified key; otherwise, false.</returns>
      <param name="key">The key for the entry to be located.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Count">
      <summary>Gets the number of key-value pairs that are stored in the dictionary.</summary>
      <returns>The number of key-value pairs that are stored in the dictionary.</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Item(System.String)">
      <summary>Gets or sets the value associated with the specified key.</summary>
      <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new element that has the specified key.</returns>
      <param name="key">The key of the item to get or set.</param>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Keys">
      <summary>Gets a collection that contains the keys in the dictionary.</summary>
      <returns>A <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> that contains the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Remove(System.String)">
      <summary>Removes the entry with the specified key.</summary>
      <returns>true if the specified key was removed; otherwise, false.</returns>
      <param name="key">The key for the entry to be deleted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Save">
      <summary>Saves data written to the current <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> object.</summary>
      <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> does not have enough available free space.</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.SiteSettings">
      <summary>Gets an instance of <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> that contains the contents of the application's <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" />, scoped at the domain level, or creates a new instance of <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> if one does not exist.</summary>
      <returns>An <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> object that contains the contents of the application's <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" />, scoped at the domain level. If an instance does not already exist, a new instance is created.</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)" />.</summary>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to be added.</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Clear" />.</summary>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)" />.</summary>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
      <param name="item">The key-value pair for the entry to be located.</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only; otherwise, false. In the default implementation of <see cref="T:System.Collections.Generic.Dictionary`2" />, this property always returns false.</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Remove(`0)" />.</summary>
      <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <param name="item">The key for the entry to be deleted.</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#ContainsKey(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified <paramref name="key" />; otherwise, false.</returns>
      <param name="key">The key for the entry to be located.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.IDictionary`2.Keys" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#TryGetValue(System.String,System.Object@)">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" />.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified <paramref name="key" />; otherwise, false.</returns>
      <param name="key">The key of the value to get.</param>
      <param name="value">When this method returns, the value associated with the specified key if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.IDictionary`2.Values" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>The number of elements that are contained in the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false. In the default implementation of <see cref="T:System.Collections.Generic.Dictionary`2" />, this property always returns false.</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />.</summary>
      <param name="key">The object to use as the key of the element to add.</param>
      <param name="value">The object to use as the value of the element to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Clear" />.</summary>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified <paramref name="key" />; otherwise, false. </returns>
      <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, false. In the default implementation of <see cref="T:System.Collections.IDictionary" />, this property always returns false.</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, false. In the default implementation of <see cref="T:System.Collections.IDictionary" />, this property always returns false.</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Item(System.Object)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.Item(System.Object)" />.</summary>
      <returns>The value associated with the specified <paramref name="key" />.</returns>
      <param name="key">The key of the value to get or set.</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Remove(System.Object)" />.</summary>
      <param name="key">The key for the entry to be deleted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.TryGetValue``1(System.String,``0@)">
      <summary>Gets a value for the specified key.</summary>
      <returns>true if the specified key is found; otherwise, false.</returns>
      <param name="key">The key of the value to get.</param>
      <param name="value">When this method returns, the value associated with the specified key if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
      <typeparam name="T">The <see cref="T:System.Type" /> of the <paramref name="value" /> parameter.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Values">
      <summary>Gets a collection that contains the values in the dictionary.</summary>
      <returns>A <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="T:System.Net.HttpUtility">
      <summary>Provides methods for encoding and decoding HTML and URL strings.</summary>
    </member>
    <member name="M:System.Net.HttpUtility.HtmlDecode(System.String)">
      <summary>Converts a string that has been HTML-encoded (for HTTP transmission) into a decoded string.</summary>
      <returns>A decoded string.</returns>
      <param name="html">An HTML-encoded string to decode.</param>
    </member>
    <member name="M:System.Net.HttpUtility.HtmlEncode(System.String)">
      <summary>Converts a text string into an HTML-encoded string.</summary>
      <returns>An HTML-encoded string.</returns>
      <param name="html">The text to HTML-encode.</param>
    </member>
    <member name="M:System.Net.HttpUtility.UrlDecode(System.String)">
      <summary>Converts a string that has been encoded for transmission in a URL into a decoded string.</summary>
      <returns>A decoded string.</returns>
      <param name="url">A URL-encoded string to decode.</param>
    </member>
    <member name="M:System.Net.HttpUtility.UrlEncode(System.String)">
      <summary>Converts a text string into a URL-encoded string.</summary>
      <returns>A URL-encoded string.</returns>
      <param name="url">The text to URL-encode.</param>
    </member>
    <member name="T:System.Net.Browser.WebRequestCreator">
      <summary>Provides objects for specifying whether the browser or the client handles HTTP requests and responses. </summary>
    </member>
    <member name="P:System.Net.Browser.WebRequestCreator.BrowserHttp">
      <summary>Gets an object that specifies browser HTTP handling for Web requests and responses.</summary>
      <returns>An <see cref="T:System.Net.IWebRequestCreate" /> object that specifies browser handling for Web requests and responses.</returns>
    </member>
    <member name="P:System.Net.Browser.WebRequestCreator.ClientHttp">
      <summary>Gets an object that specifies client HTTP handling for Web requests and responses.</summary>
      <returns>An <see cref="T:System.Net.IWebRequestCreate" /> object for use with Silverlight-based application that runs outside of a Web browser. </returns>
    </member>
    <member name="T:System.Runtime.InteropServices.Automation.AutomationEvent">
      <summary>Represents an Automation event. </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationEvent.AddEventHandler(System.Delegate)">
      <summary>Attaches the specified delegate to the Automation event. </summary>
      <param name="handler">The delegate to attach to the event. </param>
    </member>
    <member name="E:System.Runtime.InteropServices.Automation.AutomationEvent.EventRaised">
      <summary>Occurs when the Automation event occurs.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationEvent.RemoveEventHandler(System.Delegate)">
      <summary>Detaches the specified delegate from the Automation event. </summary>
      <param name="handler">The delegate to detach from the event.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.Automation.AutomationEventArgs">
      <summary>Provides data for the <see cref="E:System.Runtime.InteropServices.Automation.AutomationEvent.EventRaised" /> event.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.Automation.AutomationEventArgs.Arguments">
      <summary>Gets the event arguments from the Automation event. </summary>
      <returns>The event arguments from the Automation event.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.Automation.AutomationFactory">
      <summary>Provides access to registered Automation servers. </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject``1">
      <summary>Not yet implemented.</summary>
      <returns>null.</returns>
      <typeparam name="T">The type of object to create. </typeparam>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject(System.String)">
      <summary>Activates and returns a reference to the registered Automation server with the specified programmatic identifier (ProgID).</summary>
      <returns>A late-bound reference to the specified automation server.</returns>
      <param name="progID">The ProgID of the registered automation server to activate.</param>
      <exception cref="T:System.Exception">No object was found registered for the specified <paramref name="progID" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationFactory.GetEvent(System.Object,System.String)">
      <summary>Gets an object that represents the specified event of the specified Automation server.</summary>
      <returns>An object that represents the specified event.</returns>
      <param name="automationObject">A reference to the Automation server to retrieve an event for.</param>
      <param name="eventName">The name of the event to retrieve.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationFactory.GetObject(System.String)">
      <summary>Gets a reference to the previously activated and currently running Automation server with the specified programmatic identifier (ProgID). </summary>
      <returns>A late-bound reference to the specified Automation server. </returns>
      <param name="progID">The ProgID of the registered Automation server to retrieve a reference to.</param>
      <exception cref="T:System.Exception">No object was found registered for the specified <paramref name="progID" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.Automation.AutomationFactory.IsAvailable">
      <summary>Gets a value that indicates whether the Automation feature in Silverlight is available to the application.</summary>
      <returns>true if the Automation feature in Silverlight is available to the application; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Analytics">
      <summary>Exposes read-only data about how an application is performing.</summary>
    </member>
    <member name="M:System.Windows.Analytics.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Analytics" /> class.</summary>
    </member>
    <member name="P:System.Windows.Analytics.AverageProcessLoad">
      <summary>Gets a factor that reports the total load on the CPU that this process is using, determined across all cores averaged together.</summary>
      <returns>A value between 0 and 1 that reports CPU load associated with this process, with the factor determined by examining all cores of a multi-core system averaged together. 0 maps to 0% load while 1 maps to 100% load.</returns>
    </member>
    <member name="P:System.Windows.Analytics.AverageProcessorLoad">
      <summary>Gets a factor that reports the total load on the CPU by all processes, determined across all cores averaged together.</summary>
      <returns>A value between 0 and 1 that reports CPU load by all processes, with the factor determined by examining all cores of a multi-core system averaged together. 0 maps to 0% load while 1 maps to 100% load.</returns>
    </member>
    <member name="P:System.Windows.Analytics.ClientInformation">
      <summary>Gets a collection of hashed pseudo unique Base64 string values on a per domain and machine basis.</summary>
      <returns>Returns a<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> which contains the unique string values..</returns>
    </member>
    <member name="M:System.Windows.Analytics.Finalize">
      <summary>Frees resources used by the <see cref="T:System.Windows.Analytics" /> class.</summary>
    </member>
    <member name="P:System.Windows.Analytics.GpuCollection">
      <summary>Gets a collection of <see cref="T:System.Windows.GpuInformation" /> objects which each include details taken from a video driver. </summary>
      <returns>A collection of <see cref="T:System.Windows.GpuInformation" /> objects which each include details taken from a video driver. </returns>
    </member>
    <member name="T:System.Windows.Application">
      <summary>Encapsulates a Silverlight application.</summary>
    </member>
    <member name="M:System.Windows.Application.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Application" /> class.</summary>
    </member>
    <member name="P:System.Windows.Application.ApplicationLifetimeObjects">
      <summary>Gets the application extension services that have been registered for this application.</summary>
      <returns>The registered services. </returns>
    </member>
    <member name="M:System.Windows.Application.CheckAndDownloadUpdateAsync">
      <summary>Launches an asynchronous process to check for and download an updated version of the application.</summary>
    </member>
    <member name="E:System.Windows.Application.CheckAndDownloadUpdateCompleted">
      <summary>Occurs when the application has finished checking for updates in response to a <see cref="M:System.Windows.Application.CheckAndDownloadUpdateAsync" /> method call.</summary>
    </member>
    <member name="P:System.Windows.Application.Current">
      <summary>Gets the <see cref="T:System.Windows.Application" /> object for the current application.</summary>
      <returns>The <see cref="T:System.Windows.Application" /> object for the current application.</returns>
    </member>
    <member name="E:System.Windows.Application.Exit">
      <summary>Occurs just before an application shuts down and cannot be canceled.</summary>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Uri)">
      <summary>Returns a resource file from a location in the application package.</summary>
      <returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains the stream for the desired resource file.</returns>
      <param name="uriResource">A relative URI that identifies the resource file to be loaded. The URI is relative to the application package and does not need a leading forward slash. </param>
      <exception cref="T:System.ArgumentException">The application class is not initialized.-or-<paramref name="uriResource" /> is an absolute URI.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriResource" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)">
      <summary>Returns a resource file from a location in the specified zip package.</summary>
      <returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains the stream for the desired resource file.</returns>
      <param name="zipPackageStreamResourceInfo">A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains the zip package stream with the desired resource file.</param>
      <param name="uriResource">A relative URI that identifies the resource file to be extracted from the zip package. The URI is relative to the application package and does not need a leading forward slash. </param>
      <exception cref="T:System.ArgumentException">The application class is not initialized.-or-<paramref name="uriResource" /> is an absolute URI.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="zipPackageStreamResourceInfo" /> is null.-or-<paramref name="uriResource" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Application.HasElevatedPermissions">
      <summary>Gets a value that indicates whether the application is running outside the browser with elevated permissions.</summary>
      <returns>true if the application is running outside the browser with elevated permissions; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Application.Host">
      <summary>Gets various details about the Silverlight application's host.</summary>
      <returns>A <see cref="T:System.Windows.Interop.SilverlightHost" /> that provides various details about the Silverlight host application.</returns>
    </member>
    <member name="M:System.Windows.Application.Install">
      <summary>Attempts to install the application so that it can run outside the browser. </summary>
      <returns>true if the user gave consent to install the application or the application requires elevated trust; otherwise, false. See Remarks for more information. </returns>
      <exception cref="T:System.InvalidOperationException">The application is already installed.-or-The application is hosted at a URI with a scheme other than http, https, or file.</exception>
    </member>
    <member name="P:System.Windows.Application.InstallState">
      <summary>Gets the current out-of-browser installation state of the application.</summary>
      <returns>The out-of-browser installation state of the application.</returns>
    </member>
    <member name="E:System.Windows.Application.InstallStateChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Application.InstallState" /> property value changes. </summary>
    </member>
    <member name="P:System.Windows.Application.IsRunningOutOfBrowser">
      <summary>Gets a value that indicates whether the application was launched from the out-of-browser state.</summary>
      <returns>true if the application was launched from the out-of-browser state; false if the application was launched from within its host Web page. </returns>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
      <summary>Loads a XAML file that is located at the specified Uniform Resource Identifier (URI) and converts it to an instance of the object that is specified by the root element of the XAML file.</summary>
      <param name="component">An object of the same type as the root element of the XAML file to be loaded.</param>
      <param name="resourceLocator">A relative URI that identifies the XAML file to be loaded.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceLocator" /> is an absolute URI.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is null.-or-<paramref name="resourceLocator" /> is null.</exception>
      <exception cref="T:System.Windows.Markup.XamlParseException">An error occurred while parsing the XAML file.</exception>
    </member>
    <member name="P:System.Windows.Application.MainWindow">
      <summary>Gets the out-of-browser application window.</summary>
      <returns>The out-of-browser application window.</returns>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
    </member>
    <member name="P:System.Windows.Application.Resources">
      <summary>Gets a collection of application-scoped resources, such as styles, templates, and brushes.</summary>
      <returns>A <see cref="T:System.Windows.ResourceDictionary" /> object that contains zero or more application-scoped resources.</returns>
    </member>
    <member name="P:System.Windows.Application.RootVisual">
      <summary>Gets or sets the main application UI.</summary>
      <returns>A <see cref="T:System.Windows.UIElement" /> that is the main application UI.</returns>
      <exception cref="T:System.InvalidOperationException">When setting this property, the specified value is not an instance of a class that derives from <see cref="T:System.Windows.UIElement" />.</exception>
    </member>
    <member name="E:System.Windows.Application.Startup">
      <summary>Occurs when an application is started.</summary>
    </member>
    <member name="E:System.Windows.Application.UnhandledException">
      <summary>Occurs when an exception that is raised by Silverlight is not handled.</summary>
    </member>
    <member name="T:System.Windows.ApplicationServiceContext">
      <summary>Represents the initial state of a Silverlight application when application extension services are started. </summary>
    </member>
    <member name="P:System.Windows.ApplicationServiceContext.ApplicationInitParams">
      <summary>Gets the initialization parameters specified by the host Web page when embedding the Silverlight plug-in. </summary>
      <returns>The initialization parameters as a dictionary of key/value pairs. </returns>
    </member>
    <member name="T:System.Windows.ApplicationUnhandledExceptionEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Application.UnhandledException" /> event.</summary>
    </member>
    <member name="M:System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor(System.Exception,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ApplicationUnhandledExceptionEventArgs" /> class.</summary>
      <param name="ex">The exception that is being thrown as unhandled.</param>
      <param name="handled">A value that indicates whether the exception has been handled and should not be processed further.</param>
    </member>
    <member name="P:System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject">
      <summary>Gets or sets the unhandled exception.</summary>
      <returns>The unhandled exception.</returns>
    </member>
    <member name="P:System.Windows.ApplicationUnhandledExceptionEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether the exception is handled.</summary>
      <returns>true to mark the exception as handled, which indicates that Silverlight should not process it further; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.AssemblyPart">
      <summary>An assembly part is an assembly that is to be included in a Silverlight-based application package (.xap).</summary>
    </member>
    <member name="M:System.Windows.AssemblyPart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.AssemblyPart" /> class.</summary>
    </member>
    <member name="M:System.Windows.AssemblyPart.Load(System.IO.Stream)">
      <summary>Converts a <see cref="T:System.IO.Stream" /> to an <see cref="T:System.Reflection.Assembly" /> that is subsequently loaded into the current application domain.</summary>
      <returns>The <see cref="T:System.Reflection.Assembly" /> that is subsequently loaded into the current application domain.</returns>
      <param name="assemblyStream">The <see cref="T:System.IO.Stream" /> to load into the current application domain.</param>
    </member>
    <member name="P:System.Windows.AssemblyPart.Source">
      <summary>Gets the <see cref="T:System.Uri" /> that identifies an assembly as an assembly part.</summary>
      <returns>A <see cref="T:System.String" /> that is the assembly, which is identified as an assembly part.</returns>
    </member>
    <member name="F:System.Windows.AssemblyPart.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.AssemblyPart.Source" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.AssemblyPart.Source" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.AssemblyPartCollection">
      <summary>Stores a collection of <see cref="T:System.Windows.AssemblyPart" /> objects. Provides collection support for the <see cref="P:System.Windows.Deployment.Parts" /> property.</summary>
    </member>
    <member name="M:System.Windows.AssemblyPartCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.AssemblyPartCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.CheckAndDownloadUpdateCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Application.CheckAndDownloadUpdateCompleted" /> event. </summary>
    </member>
    <member name="P:System.Windows.CheckAndDownloadUpdateCompletedEventArgs.Error">
      <summary>Gets an exception that represents an error that occurred when attempting to download an update. </summary>
      <returns>An exception that represents the error, or null if no error occurred.</returns>
    </member>
    <member name="P:System.Windows.CheckAndDownloadUpdateCompletedEventArgs.UpdateAvailable">
      <summary>Gets a value that indicates whether a new version of the application was successfully downloaded and will be used on the next application launch. </summary>
      <returns>true if an update is available; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.CheckAndDownloadUpdateCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Application.CheckAndDownloadUpdateCompleted" /> event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Clipboard">
      <summary>Provides static methods that facilitate transferring data to and from the system clipboard. In Silverlight 4, this access is limited to Unicode text strings.</summary>
    </member>
    <member name="M:System.Windows.Clipboard.ContainsText">
      <summary>Queries the clipboard for the presence of data in the UnicodeText format.</summary>
      <returns>true if the system clipboard contains Unicode text data; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Clipboard.GetText">
      <summary>Retrieves Unicode text data from the system clipboard, if Unicode text data exists.</summary>
      <returns>If Unicode text data is present on the system clipboard, returns a string that contains the Unicode text data. Otherwise, returns an empty string.</returns>
      <exception cref="T:System.Security.SecurityException">Invoked this method from outside a user-initiated context.-or-Clipboard access user dialog box was not confirmed.</exception>
    </member>
    <member name="M:System.Windows.Clipboard.SetText(System.String)">
      <summary>Sets Unicode text data to store on the clipboard, for later access with <see cref="M:System.Windows.Clipboard.GetText" />.</summary>
      <param name="text">A string that contains the Unicode text data to store on the clipboard.</param>
      <exception cref="T:System.Security.SecurityException">Invoked this method from outside a user-initiated context.-or-Clipboard access user dialog box was not confirmed.</exception>
    </member>
    <member name="T:System.Windows.CornerRadius">
      <summary>Describes the characteristics of a rounded corner, such as can be applied to a <see cref="T:System.Windows.Controls.Border" />.</summary>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double)">
      <summary>Initializes a new <see cref="T:System.Windows.CornerRadius" /> structure, applying the same uniform radius to all its corners.</summary>
      <param name="uniformRadius">A uniform radius applied to all four <see cref="T:System.Windows.CornerRadius" /> properties (<see cref="P:System.Windows.CornerRadius.TopLeft" />, <see cref="P:System.Windows.CornerRadius.TopRight" />, <see cref="P:System.Windows.CornerRadius.BottomRight" />, <see cref="P:System.Windows.CornerRadius.BottomLeft" />).</param>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.CornerRadius" /> structure, applying specific radius values to its corners.</summary>
      <param name="topLeft">Sets the initial <see cref="P:System.Windows.CornerRadius.TopLeft" />.</param>
      <param name="topRight">Sets the initial <see cref="P:System.Windows.CornerRadius.TopRight" />.</param>
      <param name="bottomRight">Sets the initial <see cref="P:System.Windows.CornerRadius.BottomLeft" />.</param>
      <param name="bottomLeft">Sets the initial <see cref="P:System.Windows.CornerRadius.BottomRight" />.</param>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomLeft">
      <summary>Gets or sets the radius of rounding, in pixels, of the bottom left corner of the object where a <see cref="T:System.Windows.CornerRadius" /> is applied.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the radius of rounding, in pixels, of the bottom left corner of the object where a <see cref="T:System.Windows.CornerRadius" /> is applied. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomRight">
      <summary>Gets or sets the radius of rounding, in pixels, of the bottom right corner of the object where a <see cref="T:System.Windows.CornerRadius" /> is applied.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the radius of rounding, in pixels, of the bottom right corner of the object where a <see cref="T:System.Windows.CornerRadius" /> is applied. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Object)">
      <summary>Compares this <see cref="T:System.Windows.CornerRadius" /> structure to another object for equality.</summary>
      <returns>true if the two objects are equal; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)">
      <summary>Compares this <see cref="T:System.Windows.CornerRadius" /> structure to another <see cref="T:System.Windows.CornerRadius" /> structure for equality.</summary>
      <returns>true if the two instances of <see cref="T:System.Windows.CornerRadius" />  are equal; otherwise, false.</returns>
      <param name="cornerRadius">An instance of <see cref="T:System.Windows.CornerRadius" /> to compare for equality.</param>
    </member>
    <member name="M:System.Windows.CornerRadius.GetHashCode">
      <summary>Returns the hash code of the structure.</summary>
      <returns>A hash code for this <see cref="T:System.Windows.CornerRadius" />.</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>Compares the value of two <see cref="T:System.Windows.CornerRadius" /> structures for equality.</summary>
      <returns>true if the two instances of <see cref="T:System.Windows.CornerRadius" /> are equal; otherwise, false.</returns>
      <param name="cr1">The first structure to compare.</param>
      <param name="cr2">The other structure to compare.</param>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>Compares two <see cref="T:System.Windows.CornerRadius" /> structures for inequality. </summary>
      <returns>true if the two instances of <see cref="T:System.Windows.CornerRadius" /> are not equal; otherwise, false.</returns>
      <param name="cr1">The first structure to compare.</param>
      <param name="cr2">The other structure to compare.</param>
    </member>
    <member name="P:System.Windows.CornerRadius.TopLeft">
      <summary>Gets or sets the radius of rounding, in pixels, of the top left corner of the object where a <see cref="T:System.Windows.CornerRadius" /> is applied.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the radius of rounding, in pixels, of the top left corner of the object where a <see cref="T:System.Windows.CornerRadius" /> is applied. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.TopRight">
      <summary>Gets or sets the radius of rounding, in pixels, of the top right corner of the object where a <see cref="T:System.Windows.CornerRadius" /> is applied.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the radius of rounding, in pixels, of the top right corner of the object where a <see cref="T:System.Windows.CornerRadius" /> is applied. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.ToString">
      <summary>Returns the string representation of the <see cref="T:System.Windows.CornerRadius" /> structure.</summary>
      <returns>A <see cref="T:System.String" /> that represents the <see cref="T:System.Windows.CornerRadius" /> value.</returns>
    </member>
    <member name="T:System.Windows.CrossDomainAccess">
      <summary>Defines values that specify the access that cross-domain callers have to a Silverlight-based application.</summary>
    </member>
    <member name="F:System.Windows.CrossDomainAccess.NoAccess">
      <summary>Cross-domain callers have no access to the Silverlight application.</summary>
    </member>
    <member name="F:System.Windows.CrossDomainAccess.ScriptableOnly">
      <summary>Cross-domain callers have script access to the Silverlight application.</summary>
    </member>
    <member name="T:System.Windows.DataFormats">
      <summary>Provides static, predefined format names for data objects. Use the named constants to identify the format of the data that you request from an <see cref="T:System.Windows.IDataObject" /> object.</summary>
    </member>
    <member name="F:System.Windows.DataFormats.FileDrop">
      <summary>Specifies the Microsoft Windows file drop format.</summary>
      <returns>The string specifying the Microsoft Windows file drop format.</returns>
    </member>
    <member name="T:System.Windows.DataObject">
      <summary>Provides a basic implementation of the <see cref="T:System.Windows.IDataObject" /> interface, which defines a format-independent mechanism for transferring data.</summary>
    </member>
    <member name="M:System.Windows.DataObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DataObject" /> class. </summary>
    </member>
    <member name="M:System.Windows.DataObject.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DataObject" /> class, with specified initial data. </summary>
      <param name="data">An object that represents the data to store in this data object.</param>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetData(System.String)">
      <summary>Retrieves a data object in a specified format; the data format is specified by a string.</summary>
      <returns>A data object that has the data in the specified format, or null if the data is not available in the specified format.</returns>
      <param name="format">A string that specifies what format to retrieve the data as. Use the constant <see cref="F:System.Windows.DataFormats.FileDrop" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="format" /> is not equivalent to <see cref="F:System.Windows.DataFormats.FileDrop" />.</exception>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetData(System.String,System.Boolean)">
      <summary>Retrieves a data object in a specified format, optionally converting the data to the specified format. Always throws an exception.</summary>
      <returns>Always throws an exception.</returns>
      <param name="format">A string that specifies the format in which to retrieve the data. </param>
      <param name="autoConvert">true to attempt to automatically convert the data to the specified format; false for no data format conversion.</param>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetData(System.Type)">
      <summary>Retrieves a data object in a specified format; the data format is specified by a <see cref="T:System.Type" /> object. Always throws an exception.</summary>
      <returns>Always throws an exception.</returns>
      <param name="format">A <see cref="T:System.Type" /> object that specifies the format in which to retrieve the data. </param>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetDataPresent(System.String)">
      <summary>Checks to see whether the data is available in, or can be converted to, a specified format; the data format is specified by a string.</summary>
      <returns>true if the data is in the specified format, and is not null. false if <paramref name="format" /> is not equivalent to <see cref="F:System.Windows.DataFormats.FileDrop" />, or if the data is null.</returns>
      <param name="format">A string that specifies the format to check for. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)">
      <summary>Checks whether the data is available in, or can be converted to, a specified format. A Boolean flag indicates whether to check if the data can be converted to the specified format, if it is not available in that format. Always throws an exception.</summary>
      <returns>Always throws an exception.</returns>
      <param name="format">A string that specifies the format to check for. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
      <param name="autoConvert">false to only check for the specified format; true to also check whether data stored in this data object can be converted to the specified format.</param>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetDataPresent(System.Type)">
      <summary>Checks whether the data is available in, or can be converted to, a specified format. The data format is specified by a <see cref="T:System.Type" /> object. Always throws an exception.</summary>
      <returns>Always throws an exception.</returns>
      <param name="format">A <see cref="T:System.Type" /> that specifies the format to check for.</param>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetFormats">
      <summary>Returns a list of all formats that the data in this data object is stored in, or can be converted to.</summary>
      <returns>An array of strings, with each string specifying the name of a format supported by this data object.</returns>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetFormats(System.Boolean)">
      <summary>Returns a list of all formats that the data in this data object is stored in. A Boolean flag indicates whether to also include formats that the data can be automatically converted to. Always throws an exception.</summary>
      <returns>Always throws an exception.</returns>
      <param name="autoConvert">true to retrieve all formats that data in this data object is stored in, or converted to; false to retrieve only formats that data stored in this data object is stored in (excluding formats that the data is not stored in, but can be automatically converted to).</param>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.SetData(System.Object)">
      <summary>Stores the specified data in this data object and automatically converts the data format from the source object type. Always throws an exception.</summary>
      <param name="data">The data to store in this data object.</param>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.SetData(System.String,System.Object)">
      <summary>Stores the specified data in this data object, along with one or more specified data formats. The data format is specified by a string. Always throws an exception.</summary>
      <param name="format">A string that specifies what format to store the data in. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
      <param name="data">The data to store in this data object.</param>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)">
      <summary>Stores the specified data in this data object, together with one or more specified data formats. This overload includes a Boolean flag to indicate whether the data may be converted to another format on retrieval. Always throws an exception.</summary>
      <param name="format">A string that specifies the format in which to store the data. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
      <param name="data">The data to store in this data object.</param>
      <param name="autoConvert">true to allow the data to be converted to another format on retrieval; false to prohibit the data from being converted to another format on retrieval.</param>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="M:System.Windows.DataObject.SetData(System.Type,System.Object)">
      <summary>Stores the specified data in this data object, together with one or more specified data formats. The data format is specified by a <see cref="T:System.Type" /> class. Always throws an exception.</summary>
      <param name="format">A <see cref="T:System.Type" /> that specifies the format in which to store the data.</param>
      <param name="data">The data to store in this data object.</param>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
      <exception cref="T:System.Security.SecurityException">Attempted access in a mode other than Drop.</exception>
    </member>
    <member name="T:System.Windows.DataTemplate">
      <summary>Describes the visual structure of a data object.</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class.</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.LoadContent">
      <summary>Creates the <see cref="T:System.Windows.UIElement" /> objects in the <see cref="T:System.Windows.DataTemplate" />. </summary>
      <returns>The root <see cref="T:System.Windows.UIElement" /> of the <see cref="T:System.Windows.DataTemplate" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary>Represents an object that participates in the Silverlight dependency property system. <see cref="T:System.Windows.DependencyObject" /> is the immediate base class of several other important Silverlight classes, such as <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.Media.Geometry" />, <see cref="T:System.Windows.FrameworkTemplate" />, <see cref="T:System.Windows.Style" />, and <see cref="T:System.Windows.ResourceDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DependencyObject" /> class.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.CheckAccess">
      <summary>Determines whether the calling thread has access to this object.</summary>
      <returns>true if the calling thread has access to this object; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary>Clears the local value of a dependency property. </summary>
      <param name="dp">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to clear the value for.</param>
    </member>
    <member name="P:System.Windows.DependencyObject.Dispatcher">
      <summary>Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> this object is associated with. </summary>
      <returns>The <see cref="T:System.Windows.Threading.Dispatcher" /> this object is associated with. </returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)">
      <summary>Returns any base value established for a Silverlight dependency property, which would apply in cases where an animation is not active.</summary>
      <returns>The returned base value.</returns>
      <param name="dp">The identifier for the desired dependency property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dp" /> is null.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary>Returns the current effective value of a dependency property from a <see cref="T:System.Windows.DependencyObject" />. </summary>
      <returns>Returns the current effective value.</returns>
      <param name="dp">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dp" /> is null.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary>Returns the local value of a dependency property, if a local value is set. </summary>
      <returns>Returns the local value, or returns the sentinel value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> if no local value is set.</returns>
      <param name="dp">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the local value for.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Sets the local value of a dependency property on a <see cref="T:System.Windows.DependencyObject" />. </summary>
      <param name="dp">The identifier of the dependency property to set.</param>
      <param name="value">The new local value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> was not the correct type as registered for the <paramref name="dp" /> property.</exception>
    </member>
    <member name="T:System.Windows.DependencyObjectCollection`1">
      <summary>Represents a collection of <see cref="T:System.Windows.DependencyObject" /> instances of a specified type.</summary>
      <typeparam name="T">The type of items in the collection.</typeparam>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DependencyObjectCollection`1" /> class. </summary>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Add(`0)">
      <summary>Adds the specified object to the end of the collection.</summary>
      <param name="item">The object to add to the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Clear">
      <summary>Removes all objects from the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="E:System.Windows.DependencyObjectCollection`1.CollectionChanged">
      <summary>Occurs when items in the collection are added, removed, or replaced.</summary>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Contains(`0)">
      <summary>Gets a value that indicates whether the specified object is in the collection.</summary>
      <returns>true if the object is in the collection; otherwise, false.</returns>
      <param name="item">The object to check for in the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the objects in the collection to the specified array, starting at the specified index.</summary>
      <param name="array">The destination array.</param>
      <param name="arrayIndex">The index of the first object to copy.</param>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.Count">
      <summary>Gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.GetEnumerator">
      <summary>Gets an enumerator that iterates through the collection.</summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.IndexOf(`0)">
      <summary>Gets the index of the specified object within the collection, or -1 if the object is not in the collection.</summary>
      <returns>The index of the first occurrence of <paramref name="item" /> within the collection, or -1 if <paramref name="item" /> is not in the collection.</returns>
      <param name="item">The object to locate in the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Insert(System.Int32,`0)">
      <summary>Adds the specified object to the collection at the specified index.</summary>
      <param name="index">The index at which to add the object.</param>
      <param name="item">The object to add.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.IsReadOnly">
      <summary>Gets a value that indicates whether the collection can be modified.</summary>
      <returns>true if the collection can be modified; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.Item(System.Int32)">
      <summary>Gets or sets the object at the specified index.</summary>
      <returns>The object at the specified index.</returns>
      <param name="index">The index of the object to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">The specified value when setting this property is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Remove(`0)">
      <summary>Removes the specified object from the collection.</summary>
      <returns>true if the object was removed; false if the object was not found in the collection.</returns>
      <param name="item">The object to remove.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the object at the specified index from the collection.</summary>
      <param name="index">The index of the object to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the highest index in the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the objects in the collection to the specified array, starting at the specified index.</summary>
      <param name="array">The destination array.</param>
      <param name="index">The index of the first object to copy.</param>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#Count">
      <summary>Gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread safe). </summary>
      <returns>true if access to the collection is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets an enumerator that iterates through the collection.</summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Adds the specified object to the end of the collection.</summary>
      <returns>The index at which the object was added.</returns>
      <param name="value">The object to add to the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Clear">
      <summary>Removes all objects from the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Gets a value that indicates whether the specified object is in the collection.</summary>
      <returns>true if the object is in the collection; otherwise, false.</returns>
      <param name="value">The object to check for in the collection.</param>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Gets the index of the specified object within the collection, or -1 if the object is not in the collection.</summary>
      <returns>The index of the first occurrence of <paramref name="item" /> within the collection, or -1 if <paramref name="item" /> is not in the collection.</returns>
      <param name="value">The object to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Adds the specified object to the collection at the specified index.</summary>
      <param name="index">The index at which to add the object.</param>
      <param name="value">The object to add.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the collection allows the addition or removal of objects after creation.</summary>
      <returns>true if the collection has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Gets a value that indicates whether the collection can be modified.</summary>
      <returns>true if the collection can be modified; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the object at the specified index.</summary>
      <returns>The object at the specified index.</returns>
      <param name="index">The index of the object to get or set.</param>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the specified object from the collection.</summary>
      <param name="value">The object to remove.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the object at the specified index from the collection.</summary>
      <param name="index">The index of the object to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the highest index in the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The method is being called in a <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> event handler. </exception>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary>Represents a dependency property that is registered with the Silverlight dependency property system. Dependency properties provide support for value expressions, data binding, animation, and property change notification.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary>Retrieves the property metadata value for the dependency property as registered to the specified <see cref="T:System.Type" />.</summary>
      <returns>A property metadata object.</returns>
      <param name="forType">The specific type from which to retrieve the dependency property metadata.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Registers a dependency property with the specified property name, property type, owner type, and property metadata for the property. </summary>
      <returns>A dependency property identifier that should be used to set the value of a public static readonly field in your class. The identifier is then used both by your own code and any third-party user code to reference the dependency property later, for operations such as setting its value programmatically, or attaching a <see cref="T:System.Windows.Data.Binding" /> in code.</returns>
      <param name="name">The name of the dependency property to register.</param>
      <param name="propertyType">The type of the property.</param>
      <param name="ownerType">The owner type that is registering the dependency property.</param>
      <param name="typeMetadata">A property metadata instance. This can contain a <see cref="T:System.Windows.PropertyChangedCallback" /> implementation reference.</param>
      <exception cref="T:System.ArgumentNullException">A required parameter was null (check the exception for the name of the missing parameter).</exception>
      <exception cref="T:System.ArgumentException">A parameter was out of range, for instance <paramref name="name" /> was an empty string.-or-Attempted to register with a <paramref name="propertyType" /> that does not match a default value specified in the <paramref name="typeMetadata" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Registers an attached dependency property with the specified property name, property type, owner type, and property metadata for the property. </summary>
      <returns>A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the attached property later, for operations such as setting its value programmatically, or attaching a  <see cref="T:System.Windows.Data.Binding" />.</returns>
      <param name="name">The name of the dependency property to register.</param>
      <param name="propertyType">The type of the property.</param>
      <param name="ownerType">The owner type that is registering the dependency property.</param>
      <param name="defaultMetadata">A property metadata instance. This can contain a <see cref="T:System.Windows.PropertyChangedCallback" /> implementation reference.</param>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary>Specifies a static value that is used by the property system rather than null to indicate that the property exists, but does not have its value set by the property system.</summary>
      <returns>The sentinel value for an unset value.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary>Provides data for a <see cref="T:System.Windows.PropertyChangedCallback" /> implementation.</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary>Gets the value of the property after the change.</summary>
      <returns>The property value after the change.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary>Gets the value of the property before the change.</summary>
      <returns>The property value before the change.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary>Gets the identifier for the dependency property where the value change occurred.</summary>
      <returns>The identifier field of the dependency property where the value change occurred.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary>Represents the method that will handle events raised when a <see cref="T:System.Windows.DependencyProperty" /> is changed on a particular <see cref="T:System.Windows.DependencyObject" /> implementation. </summary>
      <param name="sender">The source of the event (typically the object where the property changed).</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Deployment">
      <summary>Provides application part and localization information in the application manifest when deploying a Silverlight-based application.</summary>
    </member>
    <member name="M:System.Windows.Deployment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Deployment" /> class.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Deployment.Current" /> property has already been initialized. </exception>
    </member>
    <member name="P:System.Windows.Deployment.Current">
      <summary>Gets the current <see cref="T:System.Windows.Deployment" /> object. </summary>
      <returns>The current <see cref="T:System.Windows.Deployment" /> object.</returns>
    </member>
    <member name="P:System.Windows.Deployment.EntryPointAssembly">
      <summary>Gets a string name that identifies which part in the <see cref="T:System.Windows.Deployment" /> is the entry point assembly.</summary>
      <returns>A string that names the assembly that should be used as the entry point assembly. This is expected to be the name of one of the assemblies you specified as an <see cref="T:System.Windows.AssemblyPart" />.</returns>
    </member>
    <member name="F:System.Windows.Deployment.EntryPointAssemblyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Deployment.EntryPointAssembly" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Deployment.EntryPointAssembly" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Deployment.EntryPointType">
      <summary>Gets a string that identifies the namespace and type name of the class that contains the <see cref="T:System.Windows.Application" /> entry point for your application.</summary>
      <returns>The namespace and type name of the class that contains the <see cref="T:System.Windows.Application" /> entry point.</returns>
    </member>
    <member name="F:System.Windows.Deployment.EntryPointTypeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Deployment.EntryPointType" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Deployment.EntryPointType" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Deployment.ExternalCallersFromCrossDomain">
      <summary>Gets a value that indicates the level of access that cross-domain callers have to the Silverlight-based application in this deployment.</summary>
      <returns>A value that indicates the access level of cross-domain callers.</returns>
    </member>
    <member name="F:System.Windows.Deployment.ExternalCallersFromCrossDomainProperty">
      <summary>Identifies the <see cref="P:System.Windows.Deployment.ExternalCallersFromCrossDomain" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Deployment.ExternalCallersFromCrossDomain" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Deployment.ExternalParts">
      <summary>Gets a collection of <see cref="T:System.Windows.ExternalPart" /> instances that represent the external assemblies required by the application.</summary>
      <returns>The collection of external assembly parts. The default is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Deployment.ExternalPartsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Deployment.ExternalParts" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Deployment.ExternalParts" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Deployment.GetAppIdForUri(System.Uri,System.String@)">
      <summary>[SECURITY CRITICAL] Gets a value that represents a unique ID for an out-of-browser application.</summary>
      <returns>A unique ID for the out-of-browser application. </returns>
      <param name="AppUri">The absolute URI of the application's .xap file on its host server.</param>
      <param name="xapLocationStr">When this method returns, contains the local path to the .xap file in the offline application cache. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Windows.Deployment.OutOfBrowserSettings">
      <summary>Gets an object that contains information about the application that is used for out-of-browser support. </summary>
      <returns>Information about the application that is used for out-of-browser support. </returns>
    </member>
    <member name="F:System.Windows.Deployment.OutOfBrowserSettingsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Deployment.OutOfBrowserSettings" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Deployment.OutOfBrowserSettings" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Deployment.Parts">
      <summary>Gets a collection of assembly parts that are included in the deployment.</summary>
      <returns>The collection of assembly parts. The default is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Deployment.PartsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Deployment.Parts" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Deployment.Parts" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Deployment.RegisterAssembly(System.Reflection.Assembly)">
      <summary>[SECURITY CRITICAL] Enables a native Silverlight host, such as Expression Blend or Visual Studio, to instruct Silverlight to register an assembly that the Silverlight host has separately loaded into the host-managed application domain in which a Silverlight application is running.</summary>
      <param name="assembly">The assembly that the Silverlight host has separately loaded.</param>
    </member>
    <member name="P:System.Windows.Deployment.RuntimeVersion">
      <summary>Gets the Silverlight runtime version that this deployment supports.</summary>
      <returns>The Silverlight runtime version that this deployment supports.</returns>
    </member>
    <member name="F:System.Windows.Deployment.RuntimeVersionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Deployment.RuntimeVersion" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Deployment.RuntimeVersion" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Deployment.SetCurrentApplication(System.Windows.Application)">
      <summary>[SECURITY CRITICAL] Allows a native host of the Silverlight plug-in to specify the current <see cref="T:System.Windows.Application" /> object of the running Silverlight application.</summary>
      <param name="application">The <see cref="T:System.Windows.Application" /> object that the native host is setting as the current <see cref="T:System.Windows.Application" />.</param>
    </member>
    <member name="T:System.Windows.DragEventArgs">
      <summary>Provides data for drag-and-drop events in Silverlight. </summary>
    </member>
    <member name="P:System.Windows.DragEventArgs.Data">
      <summary>Gets a data object (implements <see cref="T:System.Windows.IDataObject" />) that contains the data associated with the corresponding drag event. This value is not useful in all event cases; see Remarks.</summary>
      <returns>The data object that contains the data that is associated with the corresponding drag event.</returns>
    </member>
    <member name="M:System.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)">
      <summary>Returns a drop point that is relative to a specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>A drop point that is relative to the element specified in <paramref name="relativeTo" />.</returns>
      <param name="relativeTo">The <see cref="T:System.Windows.UIElement" /> for which to get a relative drop point.</param>
    </member>
    <member name="P:System.Windows.DragEventArgs.Handled">
      <summary>Gets or sets a value that indicates the present state of the event handling for a routed event as it travels the route.</summary>
      <returns>true if the event is marked handled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:System.Windows.DragEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.UIElement.DragEnter" />, <see cref="E:System.Windows.UIElement.DragLeave" />, <see cref="E:System.Windows.UIElement.DragOver" />, and <see cref="E:System.Windows.UIElement.Drop" /> events of a <see cref="T:System.Windows.UIElement" />. </summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Duration">
      <summary>Represents the duration of time that a <see cref="T:System.Windows.Media.Animation.Timeline" /> is active.</summary>
    </member>
    <member name="M:System.Windows.Duration.#ctor(System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Duration" /> structure with the supplied <see cref="T:System.TimeSpan" /> value.</summary>
      <param name="timeSpan">Represents the initial time interval of this duration.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="timeSpan" /> evaluates as less than <see cref="F:System.TimeSpan.Zero" />.</exception>
    </member>
    <member name="M:System.Windows.Duration.Add(System.Windows.Duration)">
      <summary>Adds the value of the specified <see cref="T:System.Windows.Duration" /> to this <see cref="T:System.Windows.Duration" />.</summary>
      <returns>If each involved <see cref="T:System.Windows.Duration" /> has values, a <see cref="T:System.Windows.Duration" /> that represents the combined values. Otherwise this method returns null.</returns>
      <param name="duration">An instance of <see cref="T:System.Windows.Duration" /> that represents the value of the current instance plus <paramref name="duration" />.</param>
    </member>
    <member name="P:System.Windows.Duration.Automatic">
      <summary>Gets a <see cref="T:System.Windows.Duration" /> value that is automatically determined.</summary>
      <returns>A <see cref="T:System.Windows.Duration" /> initialized to an automatic value.</returns>
    </member>
    <member name="M:System.Windows.Duration.Compare(System.Windows.Duration,System.Windows.Duration)">
      <summary>Compares one <see cref="T:System.Windows.Duration" /> value to another.</summary>
      <returns>If <paramref name="t1" /> is less than <paramref name="t2" />, a negative value that represents the difference. If <paramref name="t1" /> is equal to <paramref name="t2" />, a value of 0. If <paramref name="t1" /> is greater than <paramref name="t2" />, a positive value that represents the difference.</returns>
      <param name="t1">The first instance of <see cref="T:System.Windows.Duration" /> to compare.</param>
      <param name="t2">The second instance of <see cref="T:System.Windows.Duration" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Duration.Equals(System.Object)">
      <summary>Determines whether a specified object is equal to a <see cref="T:System.Windows.Duration" />.</summary>
      <returns>true if value is equal to this <see cref="T:System.Windows.Duration" />; otherwise, false.</returns>
      <param name="value">Object to check for equality.</param>
    </member>
    <member name="M:System.Windows.Duration.Equals(System.Windows.Duration)">
      <summary>Determines whether a specified <see cref="T:System.Windows.Duration" /> is equal to this <see cref="T:System.Windows.Duration" />.</summary>
      <returns>true if <paramref name="duration" /> is equal to this <see cref="T:System.Windows.Duration" />; otherwise, false.</returns>
      <param name="duration">The <see cref="T:System.Windows.Duration" /> to check for equality.</param>
    </member>
    <member name="M:System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)">
      <summary>Determines whether two <see cref="T:System.Windows.Duration" /> values are equal.</summary>
      <returns>true if <paramref name="t1" /> is equal to <paramref name="t2" />; otherwise, false.</returns>
      <param name="t1">First <see cref="T:System.Windows.Duration" /> to compare.</param>
      <param name="t2">Second <see cref="T:System.Windows.Duration" /> to compare.</param>
    </member>
    <member name="P:System.Windows.Duration.Forever">
      <summary>Gets a <see cref="T:System.Windows.Duration" /> value that represents an infinite interval.</summary>
      <returns>A <see cref="T:System.Windows.Duration" /> initialized to a forever value.</returns>
    </member>
    <member name="M:System.Windows.Duration.GetHashCode">
      <summary>Gets a hash code for this object.</summary>
      <returns>The hash code identifier.</returns>
    </member>
    <member name="P:System.Windows.Duration.HasTimeSpan">
      <summary>Gets a value that indicates if this <see cref="T:System.Windows.Duration" /> represents a <see cref="T:System.TimeSpan" /> value.</summary>
      <returns>true if this <see cref="T:System.Windows.Duration" /> is a <see cref="T:System.TimeSpan" /> value; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Duration.op_Addition(System.Windows.Duration,System.Windows.Duration)">
      <summary>Adds two <see cref="T:System.Windows.Duration" /> values together.</summary>
      <returns>If both <see cref="T:System.Windows.Duration" /> values have <see cref="T:System.TimeSpan" /> values, this method returns the sum of those two values. If either value is set to <see cref="P:System.Windows.Duration.Automatic" />, the method returns <see cref="P:System.Windows.Duration.Automatic" />. If either value is set to <see cref="P:System.Windows.Duration.Forever" />, the method returns <see cref="P:System.Windows.Duration.Forever" />.If either <paramref name="t1" /> or <paramref name="t2" /> has no value, this method returns null.</returns>
      <param name="t1">The first <see cref="T:System.Windows.Duration" /> to add.</param>
      <param name="t2">The second <see cref="T:System.Windows.Duration" /> to add.</param>
    </member>
    <member name="M:System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)">
      <summary>Determines whether two <see cref="T:System.Windows.Duration" /> cases are equal.</summary>
      <returns>true if both <see cref="T:System.Windows.Duration" /> values have equal property values, or if all <see cref="T:System.Windows.Duration" /> values are null. Otherwise, this method returns false.</returns>
      <param name="t1">The first <see cref="T:System.Windows.Duration" /> to compare.</param>
      <param name="t2">The second <see cref="T:System.Windows.Duration" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Duration.op_GreaterThan(System.Windows.Duration,System.Windows.Duration)">
      <summary>Determines if one <see cref="T:System.Windows.Duration" /> is greater than another.</summary>
      <returns>true if both <paramref name="t1" /> and <paramref name="t2" /> have values and <paramref name="t1" /> is greater than <paramref name="t2" />; otherwise, false.</returns>
      <param name="t1">The <see cref="T:System.Windows.Duration" /> value to compare.</param>
      <param name="t2">The second <see cref="T:System.Windows.Duration" /> value to compare.</param>
    </member>
    <member name="M:System.Windows.Duration.op_GreaterThanOrEqual(System.Windows.Duration,System.Windows.Duration)">
      <summary>Determines whether a <see cref="T:System.Windows.Duration" /> is greater than or equal to another.</summary>
      <returns>true if both <paramref name="t1" /> and <paramref name="t2" /> have values and <paramref name="t1" /> is greater than or equal to <paramref name="t2" />; otherwise, false.</returns>
      <param name="t1">The first instance of <see cref="T:System.Windows.Duration" /> to compare.</param>
      <param name="t2">The second instance of <see cref="T:System.Windows.Duration" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Duration.op_Implicit(System.TimeSpan)~System.Windows.Duration">
      <summary>Implicitly creates a <see cref="T:System.Windows.Duration" /> from a given <see cref="T:System.TimeSpan" />.</summary>
      <returns>A created <see cref="T:System.Windows.Duration" />.</returns>
      <param name="timeSpan">
        <see cref="T:System.TimeSpan" /> from which a <see cref="T:System.Windows.Duration" /> is implicitly created.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="timeSpan" /> evaluates as less than <see cref="F:System.TimeSpan.Zero" />.</exception>
    </member>
    <member name="M:System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)">
      <summary>Determines if two <see cref="T:System.Windows.Duration" /> cases are not equal.</summary>
      <returns>true if exactly one of <paramref name="t1" /> or <paramref name="t2" /> represent a value, or if they both represent values that are not equal; otherwise, false.</returns>
      <param name="t1">The first <see cref="T:System.Windows.Duration" /> to compare.</param>
      <param name="t2">The second <see cref="T:System.Windows.Duration" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Duration.op_LessThan(System.Windows.Duration,System.Windows.Duration)">
      <summary>Determines if a <see cref="T:System.Windows.Duration" /> is less than the value of another instance.</summary>
      <returns>true if both <paramref name="t1" /> and <paramref name="t2" /> have values and <paramref name="t1" /> is less than <paramref name="t2" />; otherwise, false.</returns>
      <param name="t1">The first <see cref="T:System.Windows.Duration" /> to compare.</param>
      <param name="t2">The second <see cref="T:System.Windows.Duration" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Duration.op_LessThanOrEqual(System.Windows.Duration,System.Windows.Duration)">
      <summary>Determines if a <see cref="T:System.Windows.Duration" /> is less than or equal to another.</summary>
      <returns>true if both <paramref name="t1" /> and <paramref name="t2" /> have values and <paramref name="t1" /> is less than or equal to <paramref name="t2" />; otherwise, false.</returns>
      <param name="t1">The <see cref="T:System.Windows.Duration" /> to compare.</param>
      <param name="t2">The <see cref="T:System.Windows.Duration" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)">
      <summary>Subtracts the value of one <see cref="T:System.Windows.Duration" /> from another.</summary>
      <returns>If each <see cref="T:System.Windows.Duration" /> has values, a <see cref="T:System.Windows.Duration" /> that represents the value of <paramref name="t1" /> minus <paramref name="t2" />. If <paramref name="t1" /> has a value of <see cref="P:System.Windows.Duration.Forever" /> and <paramref name="t2" /> has a value of <see cref="P:System.Windows.Duration.TimeSpan" />, this method returns <see cref="P:System.Windows.Duration.Forever" />. Otherwise this method returns null.</returns>
      <param name="t1">The first <see cref="T:System.Windows.Duration" />.</param>
      <param name="t2">The <see cref="T:System.Windows.Duration" /> to subtract.</param>
    </member>
    <member name="M:System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)">
      <summary>Returns the specified <see cref="T:System.Windows.Duration" />.</summary>
      <returns>A <see cref="T:System.Windows.Duration" />.</returns>
      <param name="duration">The <see cref="T:System.Windows.Duration" /> to get.</param>
    </member>
    <member name="M:System.Windows.Duration.Plus(System.Windows.Duration)">
      <summary>Adds one <see cref="T:System.Windows.Duration" /> to this <see cref="T:System.Windows.Duration" />.</summary>
      <returns>The summed <see cref="T:System.Windows.Duration" />.</returns>
      <param name="duration">The <see cref="T:System.Windows.Duration" /> to add.</param>
    </member>
    <member name="M:System.Windows.Duration.Subtract(System.Windows.Duration)">
      <summary>Subtracts the specified <see cref="T:System.Windows.Duration" /> from this <see cref="T:System.Windows.Duration" />.</summary>
      <returns>The subtracted <see cref="T:System.Windows.Duration" />.</returns>
      <param name="duration">The <see cref="T:System.Windows.Duration" /> to subtract from this <see cref="T:System.Windows.Duration" />.</param>
    </member>
    <member name="P:System.Windows.Duration.TimeSpan">
      <summary>Gets the <see cref="T:System.TimeSpan" /> value that this <see cref="T:System.Windows.Duration" /> represents.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> value that this <see cref="T:System.Windows.Duration" /> represents.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Duration" /> does not represent a <see cref="T:System.TimeSpan" />.</exception>
    </member>
    <member name="M:System.Windows.Duration.ToString">
      <summary>Converts a <see cref="T:System.Windows.Duration" /> to a <see cref="T:System.String" /> representation.</summary>
      <returns>A <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Duration" />.</returns>
    </member>
    <member name="T:System.Windows.DurationConverter">
      <summary>Provides type conversion support for the <see cref="T:System.Windows.Duration" /> structure. </summary>
    </member>
    <member name="M:System.Windows.DurationConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DurationConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.DurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of one type to the <see cref="T:System.Windows.Duration" /> type.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
    </member>
    <member name="M:System.Windows.DurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given value to the <see cref="T:System.Windows.Duration" /> type.</summary>
      <returns>The returned <see cref="T:System.Windows.Duration" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The object to convert.</param>
    </member>
    <member name="T:System.Windows.ElevatedPermissions">
      <summary>Defines constants that indicate whether elevated permissions are required for an out-of-browser application. </summary>
    </member>
    <member name="F:System.Windows.ElevatedPermissions.NotRequired">
      <summary>Elevated permissions are not required to run the application outside the browser.</summary>
    </member>
    <member name="F:System.Windows.ElevatedPermissions.Required">
      <summary>Elevated permissions are required to run the application outside the browser.</summary>
    </member>
    <member name="T:System.Windows.EventTrigger">
      <summary>Represents a trigger that applies a set of actions (animation storyboards) in response to an event.</summary>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.EventTrigger" /> class.</summary>
    </member>
    <member name="P:System.Windows.EventTrigger.Actions">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> objects that this <see cref="T:System.Windows.EventTrigger" /> maintains.</summary>
      <returns>The existing <see cref="T:System.Windows.TriggerActionCollection" />.</returns>
    </member>
    <member name="P:System.Windows.EventTrigger.RoutedEvent">
      <summary>Gets or sets the name of the event that initiates the trigger.</summary>
      <returns>The name or identifier of the event. See Remarks.</returns>
    </member>
    <member name="T:System.Windows.ExceptionRoutedEventArgs">
      <summary>Provides event data for exceptions that are raised as events by asynchronous operations, such as <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" /> or <see cref="E:System.Windows.Controls.MultiScaleImage.ImageFailed" />.</summary>
    </member>
    <member name="P:System.Windows.ExceptionRoutedEventArgs.ErrorException">
      <summary>Gets the underlying exception or native-level error reported by the event.</summary>
      <returns>The exception being reported.</returns>
    </member>
    <member name="T:System.Windows.ExceptionRoutedEventHandler">
      <summary>Represents the method that will handle certain events that report exceptions. These exceptions generally come from asynchronous operations where holding up the UI thread for exception checking is not an option.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Expression">
      <summary>This type is not intended to be used from your code or to be derived from.</summary>
    </member>
    <member name="T:System.Windows.ExtensionPart">
      <summary>Represents a zip file containing assemblies used by application library caching.</summary>
    </member>
    <member name="M:System.Windows.ExtensionPart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ExtensionPart" /> class. </summary>
    </member>
    <member name="P:System.Windows.ExtensionPart.Source">
      <summary>Gets or sets the file name or URI of the external library package.</summary>
      <returns>The file name or URI of the external library package.</returns>
    </member>
    <member name="F:System.Windows.ExtensionPart.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.ExtensionPart.Source" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.ExtensionPart.Source" /> dependency property. </returns>
    </member>
    <member name="T:System.Windows.ExternalPart">
      <summary>Defines a base class for specifying parts of a Silverlight application that are external to the application package (.xap file). </summary>
    </member>
    <member name="M:System.Windows.ExternalPart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ExternalPart" /> class. </summary>
    </member>
    <member name="P:System.Windows.ExternalPart.Source">
      <summary>Gets or sets the URI of the external part.</summary>
      <returns>The URI of the external part. </returns>
    </member>
    <member name="T:System.Windows.ExternalPartCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.ExternalPart" /> instances that indicate parts of a Silverlight application that are external to the application package (.xap file). </summary>
    </member>
    <member name="M:System.Windows.ExternalPartCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ExternalPartCollection" /> class. </summary>
    </member>
    <member name="T:System.Windows.FlowDirection">
      <summary>Defines constants that specify the content flow direction for text and UI elements.</summary>
    </member>
    <member name="F:System.Windows.FlowDirection.LeftToRight">
      <summary>Indicates that content should flow from left to right.</summary>
    </member>
    <member name="F:System.Windows.FlowDirection.RightToLeft">
      <summary>Indicates that content should flow from right to left.</summary>
    </member>
    <member name="T:System.Windows.FontStretch">
      <summary>Describes the degree to which a font has been stretched, compared to the normal aspect ratio of that font.</summary>
    </member>
    <member name="M:System.Windows.FontStretch.Equals(System.Object)">
      <summary>Compares an object with the current <see cref="T:System.Windows.FontStretch" /> object.</summary>
      <returns>true if two instances are equal; otherwise, false.</returns>
      <param name="obj">The instance of the object to compare for equality.</param>
    </member>
    <member name="M:System.Windows.FontStretch.GetHashCode">
      <summary>Retrieves the hash code for this object.</summary>
      <returns>An integer hash value.</returns>
    </member>
    <member name="M:System.Windows.FontStretch.op_Equality(System.Windows.FontStretch,System.Windows.FontStretch)">
      <summary>Compares two instances of <see cref="T:System.Windows.FontStretch" /> for equality.</summary>
      <returns>true when the specified <see cref="T:System.Windows.FontStretch" /> objects are equal; otherwise, false.</returns>
      <param name="left">First instance of <see cref="T:System.Windows.FontStretch" /> to compare.</param>
      <param name="right">Second instance of <see cref="T:System.Windows.FontStretch" /> to compare.</param>
    </member>
    <member name="M:System.Windows.FontStretch.op_Inequality(System.Windows.FontStretch,System.Windows.FontStretch)">
      <summary>Evaluates two instances of <see cref="T:System.Windows.FontStretch" /> to determine inequality.</summary>
      <returns>false if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, true.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.FontStretch" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.FontStretch" /> to compare.</param>
    </member>
    <member name="M:System.Windows.FontStretch.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the current <see cref="T:System.Windows.FontStretch" /> object.</summary>
      <returns>A <see cref="T:System.String" /> value representation of the object.</returns>
    </member>
    <member name="T:System.Windows.FontStretches">
      <summary>Provides a set of predefined font stretches as static property values.</summary>
    </member>
    <member name="P:System.Windows.FontStretches.Condensed">
      <summary>Specifies a condensed font stretch.</summary>
      <returns>A value that represents a condensed font stretch.</returns>
    </member>
    <member name="P:System.Windows.FontStretches.Expanded">
      <summary>Specifies an expanded font stretch.</summary>
      <returns>A value that represents an expanded font stretch.</returns>
    </member>
    <member name="P:System.Windows.FontStretches.ExtraCondensed">
      <summary>Specifies an extra-condensed font stretch.</summary>
      <returns>A value that represents an extra-condensed font stretch.</returns>
    </member>
    <member name="P:System.Windows.FontStretches.ExtraExpanded">
      <summary>Specifies an extra-expanded font stretch.</summary>
      <returns>A value that represents an extra-expanded font stretch.</returns>
    </member>
    <member name="P:System.Windows.FontStretches.Normal">
      <summary>Specifies a normal font stretch.</summary>
      <returns>A value that represents a normal font stretch.</returns>
    </member>
    <member name="P:System.Windows.FontStretches.SemiCondensed">
      <summary>Specifies a semi-condensed font stretch.</summary>
      <returns>A value that represents a semi-condensed font stretch.</returns>
    </member>
    <member name="P:System.Windows.FontStretches.SemiExpanded">
      <summary>Specifies a semi-expanded font stretch.</summary>
      <returns>A value that represents a semi-expanded font stretch.</returns>
    </member>
    <member name="P:System.Windows.FontStretches.UltraCondensed">
      <summary>Specifies an ultra-condensed font stretch.</summary>
      <returns>A value that represents an ultra-condensed font stretch.</returns>
    </member>
    <member name="P:System.Windows.FontStretches.UltraExpanded">
      <summary>Specifies an ultra-expanded font stretch.</summary>
      <returns>A value that represents an ultra-expanded font stretch.</returns>
    </member>
    <member name="T:System.Windows.FontStyle">
      <summary>Represents the style of a font face (for instance, as normal or italic).</summary>
    </member>
    <member name="M:System.Windows.FontStyle.Equals(System.Object)">
      <summary>Compares an object with the current <see cref="T:System.Windows.FontStyle" /> instance for equality.</summary>
      <returns>true to show the two instances are equal; otherwise, false.</returns>
      <param name="obj">An object that represents the <see cref="T:System.Windows.FontStyle" /> to compare for equality.</param>
    </member>
    <member name="M:System.Windows.FontStyle.GetHashCode">
      <summary>Retrieves the hash code for this object. </summary>
      <returns>An integer hash value.</returns>
    </member>
    <member name="M:System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)">
      <summary>Compares two instances of <see cref="T:System.Windows.FontStyle" /> for equality.</summary>
      <returns>true if the specified <see cref="T:System.Windows.FontStyle" /> objects are equal; otherwise, false.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.FontStyle" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.FontStyle" /> to compare.</param>
    </member>
    <member name="M:System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)">
      <summary>Evaluates two instances of <see cref="T:System.Windows.FontStyle" /> to determine inequality.</summary>
      <returns>false to show <paramref name="left" /> is equal to <paramref name="right" />; otherwise, true.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.FontStyle" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.FontStyle" /> to compare.</param>
    </member>
    <member name="M:System.Windows.FontStyle.ToString">
      <summary>Creates a string that represents the current <see cref="T:System.Windows.FontStyle" /> object.</summary>
      <returns>A string that represents the value of the <see cref="T:System.Windows.FontStyle" /> object.</returns>
    </member>
    <member name="T:System.Windows.FontStyles">
      <summary>Provides a set of predefined font styles as static property values.</summary>
    </member>
    <member name="P:System.Windows.FontStyles.Italic">
      <summary>Specifies an italic font style.</summary>
      <returns>A font style that represents an italic font style.</returns>
    </member>
    <member name="P:System.Windows.FontStyles.Normal">
      <summary>Specifies a normal, or roman, font style.</summary>
      <returns>A font style that represents a normal, or roman, font style.</returns>
    </member>
    <member name="T:System.Windows.FontWeight">
      <summary>Refers to the density of a typeface, in terms of the lightness or heaviness of the strokes.</summary>
    </member>
    <member name="M:System.Windows.FontWeight.Equals(System.Object)">
      <summary>Determines whether the current <see cref="T:System.Windows.FontWeight" /> object is equal to a specified object.</summary>
      <returns>true if the values are equal; otherwise, false.</returns>
      <param name="obj">The object to compare for equality.</param>
    </member>
    <member name="M:System.Windows.FontWeight.GetHashCode">
      <summary>Retrieves the hash code for this object.</summary>
      <returns>An integer hash value.</returns>
    </member>
    <member name="M:System.Windows.FontWeight.op_Equality(System.Windows.FontWeight,System.Windows.FontWeight)">
      <summary>Compares two instances of <see cref="T:System.Windows.FontWeight" /> for equality.</summary>
      <returns>true if the values of <see cref="T:System.Windows.FontWeight" /> are equal; otherwise, false.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.FontWeight" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.FontWeight" /> to compare.</param>
    </member>
    <member name="M:System.Windows.FontWeight.op_Inequality(System.Windows.FontWeight,System.Windows.FontWeight)">
      <summary>Evaluates two instances of <see cref="T:System.Windows.FontWeight" /> to determine inequality.</summary>
      <returns>false if values of <paramref name="left" /> are equal to <paramref name="right" />; otherwise, true.</returns>
      <param name="left">The first instance of <see cref="T:System.Windows.FontWeight" /> to compare.</param>
      <param name="right">The second instance of <see cref="T:System.Windows.FontWeight" /> to compare.</param>
    </member>
    <member name="M:System.Windows.FontWeight.ToString">
      <summary>Returns a text string that represents the value of the <see cref="T:System.Windows.FontWeight" /> object.</summary>
      <returns>A string that represents the value of the <see cref="T:System.Windows.FontWeight" /> object, such as "Light" or "Normal".</returns>
    </member>
    <member name="T:System.Windows.FontWeights">
      <summary>Provides a set of predefined font weights as static property values.</summary>
    </member>
    <member name="P:System.Windows.FontWeights.Black">
      <summary>Specifies a "Black" font weight.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents a "Black" font weight.</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Bold">
      <summary>Specifies a "Bold" font weight.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents a "Bold" font weight.</returns>
    </member>
    <member name="P:System.Windows.FontWeights.ExtraBlack">
      <summary>Specifies an "ExtraBlack" font weight.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents an "ExtraBlack" font weight.</returns>
    </member>
    <member name="P:System.Windows.FontWeights.ExtraBold">
      <summary>Specifies an "ExtraBold" font weight.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents an "ExtraBlack" font weight.</returns>
    </member>
    <member name="P:System.Windows.FontWeights.ExtraLight">
      <summary>Specifies an "ExtraLight" font weight.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents an "ExtraLight" font weight.</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Light">
      <summary>Specifies a "Light" font weight.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents a "Light" font weight.</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Medium">
      <summary>Specifies a "Medium" font weight.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents a "Medium" font weight.</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Normal">
      <summary>Specifies a "Normal" font weight.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents a "Normal" font weight.</returns>
    </member>
    <member name="P:System.Windows.FontWeights.SemiBold">
      <summary>Specifies a "SemiBold" font weight.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents a "SemiBold" font weight.</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Thin">
      <summary>Specifies a "Thin" font weight.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents a "Thin" font weight.</returns>
    </member>
    <member name="T:System.Windows.FrameworkElement">
      <summary>Provides a framework of common APIs for objects that participate in Silverlight layout. <see cref="T:System.Windows.FrameworkElement" /> also defines APIs related to data binding, object tree, and object lifetime feature areas in Silverlight.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElement" /> class.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualHeight">
      <summary>Gets the rendered height of a <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The height, in pixels, of the object. The default is 0. The default might be encountered if the object has not been loaded and undergone a layout pass.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualWidth">
      <summary>Gets the rendered width of a <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The width, in pixels, of the object. The default is 0. The default might be encountered if the object has not been loaded and undergone a layout pass.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
      <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
      <returns>The actual size that is used after the element is arranged in layout.</returns>
      <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
    </member>
    <member name="E:System.Windows.FrameworkElement.BindingValidationError">
      <summary>Occurs when a data validation error is reported by a binding source.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Cursor">
      <summary>Gets or sets the cursor that displays while the mouse pointer is over a <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The cursor to display. The default is defined as null for code access. However, the appearance of the cursor in UI at run time will come from a variety of factors.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.CursorProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Cursor" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Cursor" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.DataContext">
      <summary>Gets or sets the data context for a <see cref="T:System.Windows.FrameworkElement" /> when it participates in data binding.</summary>
      <returns>The object to use as data context.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.DataContextProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.DataContext" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.FrameworkElement.DataContext" /> dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindName(System.String)">
      <summary>Retrieves an object that has the specified identifier name. </summary>
      <returns>The requested object. This can be null if no matching object was found in the current XAML namescope.</returns>
      <param name="name">The name of the requested object.</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.FlowDirection">
      <summary>Gets or sets the direction that text and other user interface elements flow within any parent element that controls their layout.</summary>
      <returns>The direction that text and other UI elements flow within their parent element, as a value of the enumeration. The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.BindingExpression" /> for a dependency property where a binding is established.</summary>
      <returns>A <see cref="T:System.Windows.Data.BindingExpression" /> for the binding, if the local value represented a data-bound value. May return null if the property is not a data-bound value.</returns>
      <param name="dp">The dependency property identifier for the specific property on this <see cref="T:System.Windows.FrameworkElement" /> where you want to obtain the <see cref="T:System.Windows.Data.BindingExpression" />.</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.Height">
      <summary>Gets or sets the suggested height of a <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The height, in pixels, of the object. The default is <see cref="F:System.Double.NaN" />. Except for the special <see cref="F:System.Double.NaN" /> value, this value must be equal to or greater than 0. See Remarks for upper-bound information.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Height" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Height" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment characteristics that are applied to a <see cref="T:System.Windows.FrameworkElement" /> when it is composed in a layout parent, such as a panel or items control.</summary>
      <returns>A horizontal alignment setting, as a value of the enumeration. The default is <see cref="F:System.Windows.HorizontalAlignment.Stretch" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Language">
      <summary>Gets or sets localization/globalization language information that applies to a <see cref="T:System.Windows.FrameworkElement" />. </summary>
      <returns>The language information for this object. The default is an <see cref="T:System.Windows.Markup.XmlLanguage" /> object that has its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value set to the string "en-US".</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LanguageProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Language" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.FrameworkElement.Language" /> dependency property identifier.</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.LayoutUpdated">
      <summary>Occurs when the layout of the Silverlight visual tree changes. </summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.Loaded">
      <summary>Occurs when a <see cref="T:System.Windows.FrameworkElement" /> has been constructed and added to the object tree. </summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.LoadedEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkElement.Loaded" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.FrameworkElement.Loaded" /> routed event.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Margin">
      <summary>Gets or sets the outer margin of a <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>Provides margin values for the object. The default value is a default <see cref="T:System.Windows.Thickness" /> with all properties (dimensions) equal to 0.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Margin" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.FrameworkElement.Margin" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxHeight">
      <summary>Gets or sets the maximum height constraint of a <see cref="T:System.Windows.FrameworkElement" />. </summary>
      <returns>The maximum height of the object, in pixels. The default value is <see cref="F:System.Double.PositiveInfinity" />. This value can be any value equal to or greater than 0. <see cref="F:System.Double.PositiveInfinity" /> is also valid.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxWidth">
      <summary>Gets or sets the maximum width constraint of a <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The maximum width of the object, in pixels. The default is <see cref="F:System.Double.PositiveInfinity" />. This value can be any value equal to or greater than 0. <see cref="F:System.Double.PositiveInfinity" /> is also valid.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
      <summary>Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.</summary>
      <returns>The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.</returns>
      <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinHeight">
      <summary>Gets or sets the minimum height constraint of a <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The minimum height of the object, in pixels. The default is 0. This value can be any value equal to or greater than 0. However, <see cref="F:System.Double.PositiveInfinity" /> is not valid.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.MinHeight" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.MinHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinWidth">
      <summary>Gets or sets the minimum width constraint of a <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The minimum width of the object, in pixels. The default is 0. This value can be any value equal to or greater than 0. However, <see cref="F:System.Double.PositiveInfinity" /> is not valid.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.MinWidth" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.MinWidth" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Name">
      <summary>Gets or sets the identifying name of the object. When a XAML processor creates the object tree from XAML markup, run-time code can refer to the XAML-declared object by this name.</summary>
      <returns>The name of the object, which must be a string that is valid in the XamlName Grammar. The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.NameProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Name" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Name" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnApplyTemplate">
      <summary>When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate" />. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Parent">
      <summary>Gets the parent object of this <see cref="T:System.Windows.FrameworkElement" /> in the object tree. </summary>
      <returns>The parent object of this object in the object tree.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Resources">
      <summary>Gets the locally defined resource dictionary. In XAML, you can establish resource items as child object elements of a frameworkElement.Resources property element, through XAML implicit collection syntax.</summary>
      <returns>The current locally defined dictionary of resources, where each resource can be accessed by its key.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.Binding)">
      <summary>Attaches a binding to a <see cref="T:System.Windows.FrameworkElement" />, using the provided binding object, and returns a <see cref="T:System.Windows.Data.BindingExpressionBase" /> for possible later use.</summary>
      <returns>A <see cref="T:System.Windows.Data.BindingExpressionBase" /> object. See Remarks.</returns>
      <param name="dp">The dependency property identifier of the property that is data bound.</param>
      <param name="binding">The binding to use for the property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="binding" /> is specified as <see cref="F:System.Windows.Data.BindingMode.TwoWay" />, but has an empty <see cref="P:System.Windows.Data.Binding.Path" />.-or-<paramref name="dp" /> or <paramref name="binding" /> parameters are null.</exception>
    </member>
    <member name="E:System.Windows.FrameworkElement.SizeChanged">
      <summary>Occurs when either the <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> or the <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> properties change value on a <see cref="T:System.Windows.FrameworkElement" />. </summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Style">
      <summary>Gets or sets an instance <see cref="T:System.Windows.Style" /> that is applied for this object during rendering.</summary>
      <returns>The applied style for the object, if present; otherwise, null. The default for a default-constructed <see cref="T:System.Windows.FrameworkElement" /> is null.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.StyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Style" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Style" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Tag">
      <summary>Gets or sets an arbitrary object value that can be used to store custom information about this object.</summary>
      <returns>The intended value. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.TagProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Tag" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Tag" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Triggers">
      <summary>Gets the collection of triggers for animations that are defined for a <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The collection of triggers for animations that are defined for this object.</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.Unloaded">
      <summary>Occurs when this object is no longer connected to the main object tree.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.VerticalAlignment">
      <summary>Gets or sets the vertical alignment characteristics that are applied to a <see cref="T:System.Windows.FrameworkElement" /> when it is composed in a parent object such as a panel or items control.</summary>
      <returns>A vertical alignment setting. The default is <see cref="F:System.Windows.VerticalAlignment.Stretch" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.VerticalAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Width">
      <summary>Gets or sets the width of a <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The width of the object, in pixels. The default is <see cref="F:System.Double.NaN" />. Except for the special <see cref="F:System.Double.NaN" /> value, this value must be equal to or greater than 0. See Remarks for upper bound information.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Width" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Width" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.FrameworkTemplate">
      <summary>Creates an element tree of elements.</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkTemplate" /> class.</summary>
    </member>
    <member name="T:System.Windows.GpuInformation">
      <summary>Represents details for graphics processor unit (GPU) information as reported by the system of the local computer.</summary>
    </member>
    <member name="P:System.Windows.GpuInformation.DeviceId">
      <summary>Gets the device ID of the GPU.</summary>
      <returns>The device ID for the GPU.</returns>
    </member>
    <member name="P:System.Windows.GpuInformation.DriverVersion">
      <summary>Gets the driver version of the GPU.</summary>
      <returns>The driver version of the GPU.</returns>
    </member>
    <member name="P:System.Windows.GpuInformation.VendorId">
      <summary>Gets the vendor ID of the GPU.</summary>
      <returns>The vendor ID of the GPU.</returns>
    </member>
    <member name="T:System.Windows.GridLength">
      <summary>Represents the length of elements that explicitly support <see cref="F:System.Windows.GridUnitType.Star" /> unit types. </summary>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.GridLength" /> structure using the specified absolute value in pixels. </summary>
      <param name="pixels">The absolute count of pixels to establish as the value.</param>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.GridLength" /> structure and specifies what kind of value it holds. </summary>
      <param name="value">The initial value of this instance of <see cref="T:System.Windows.GridLength" />.</param>
      <param name="type">The <see cref="T:System.Windows.GridUnitType" /> held by this instance of <see cref="T:System.Windows.GridLength" />.</param>
      <exception cref="T:System.ArgumentException">value is less than 0 or is not a number.- or -type is not a valid <see cref="T:System.Windows.GridUnitType" />.</exception>
    </member>
    <member name="P:System.Windows.GridLength.Auto">
      <summary>Gets an instance of <see cref="T:System.Windows.GridLength" /> that holds a value whose size is determined by the size properties of the content object.</summary>
      <returns>A instance of <see cref="T:System.Windows.GridLength" /> whose <see cref="P:System.Windows.GridLength.GridUnitType" /> property is set to <see cref="F:System.Windows.GridUnitType.Auto" />. </returns>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.GridLength" /> instance. </summary>
      <returns>true if the specified object has the same value and <see cref="T:System.Windows.GridUnitType" /> as the current instance; otherwise, false.</returns>
      <param name="oCompare">The object to compare with the current instance.</param>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Windows.GridLength)">
      <summary>Determines whether the specified <see cref="T:System.Windows.GridLength" /> is equal to the current <see cref="T:System.Windows.GridLength" />.</summary>
      <returns>true if the specified <see cref="T:System.Windows.GridLength" /> has the same value and <see cref="P:System.Windows.GridLength.GridUnitType" /> as the current instance; otherwise, false.</returns>
      <param name="gridLength">The <see cref="T:System.Windows.GridLength" /> structure to compare with the current instance.</param>
    </member>
    <member name="M:System.Windows.GridLength.GetHashCode">
      <summary>Gets a hash code for the <see cref="T:System.Windows.GridLength" />. </summary>
      <returns>A hash code for the <see cref="T:System.Windows.GridLength" />. </returns>
    </member>
    <member name="P:System.Windows.GridLength.GridUnitType">
      <summary>Gets the associated <see cref="T:System.Windows.GridUnitType" /> for the <see cref="T:System.Windows.GridLength" />. </summary>
      <returns>One of the <see cref="T:System.Windows.GridUnitType" /> values. The default is <see cref="F:System.Windows.GridUnitType.Auto" />.</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAbsolute">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.GridLength" /> holds a value that is expressed in pixels. </summary>
      <returns>true if the <see cref="P:System.Windows.GridLength.GridUnitType" /> property is <see cref="F:System.Windows.GridUnitType.Pixel" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAuto">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.GridLength" /> holds a value whose size is determined by the size properties of the content object. </summary>
      <returns>true if the <see cref="P:System.Windows.GridLength.GridUnitType" /> property is <see cref="F:System.Windows.GridUnitType.Auto" />; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.GridLength.IsStar">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.GridLength" /> holds a value that is expressed as a weighted proportion of available space. </summary>
      <returns>true if the <see cref="P:System.Windows.GridLength.GridUnitType" /> property is <see cref="F:System.Windows.GridUnitType.Star" />; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>Compares two <see cref="T:System.Windows.GridLength" /> structures for equality.</summary>
      <returns>true if the two instances of <see cref="T:System.Windows.GridLength" /> have the same value and <see cref="T:System.Windows.GridUnitType" />; otherwise, false.</returns>
      <param name="gl1">The first instance of <see cref="T:System.Windows.GridLength" /> to compare.</param>
      <param name="gl2">The second instance of <see cref="T:System.Windows.GridLength" /> to compare.</param>
    </member>
    <member name="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>Compares two <see cref="T:System.Windows.GridLength" /> structures to determine if they are not equal.</summary>
      <returns>true if the two instances of <see cref="T:System.Windows.GridLength" /> do not have the same value and <see cref="T:System.Windows.GridUnitType" />; otherwise, false.</returns>
      <param name="gl1">The first instance of <see cref="T:System.Windows.GridLength" /> to compare.</param>
      <param name="gl2">The second instance of <see cref="T:System.Windows.GridLength" /> to compare.</param>
    </member>
    <member name="M:System.Windows.GridLength.ToString">
      <summary>Returns a <see cref="T:System.String" /> representation of the <see cref="T:System.Windows.GridLength" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the current <see cref="T:System.Windows.GridLength" /> structure.</returns>
    </member>
    <member name="P:System.Windows.GridLength.Value">
      <summary>Gets a <see cref="T:System.Double" /> that represents the value of the <see cref="T:System.Windows.GridLength" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the value of the current instance. </returns>
    </member>
    <member name="T:System.Windows.GridUnitType">
      <summary>Describes the kind of value that a <see cref="T:System.Windows.GridLength" /> object is holding. </summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Auto">
      <summary>The size is determined by the size properties of the content object. </summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Pixel">
      <summary>The value is expressed in pixels. </summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Star">
      <summary>The value is expressed as a weighted proportion of available space. </summary>
    </member>
    <member name="T:System.Windows.HorizontalAlignment">
      <summary>Indicates where an element should be displayed on the horizontal axis relative to the allocated layout slot of the parent element. </summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Left">
      <summary>An element aligned to the left of the layout slot for the parent element. </summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Center">
      <summary>An element aligned to the center of the layout slot for the parent element. </summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Right">
      <summary>An element aligned to the right of the layout slot for the parent element.</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Stretch">
      <summary>An element stretched to fill the entire layout slot of the parent element.</summary>
    </member>
    <member name="T:System.Windows.IApplicationLifetimeAware">
      <summary>Defines methods that application extension services can optionally implement in order to respond to application lifetime events. </summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Exited">
      <summary>Called by an application immediately after the <see cref="E:System.Windows.Application.Exit" /> event occurs. </summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Exiting">
      <summary>Called by an application immediately before the <see cref="E:System.Windows.Application.Exit" /> event occurs. </summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Started">
      <summary>Called by an application immediately after the <see cref="E:System.Windows.Application.Startup" /> event occurs.</summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Starting">
      <summary>Called by an application immediately before the <see cref="E:System.Windows.Application.Startup" /> event occurs.</summary>
    </member>
    <member name="T:System.Windows.IApplicationService">
      <summary>Defines methods that application extension services must implement in order to enable an application to start and stop the service. </summary>
    </member>
    <member name="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)">
      <summary>Called by an application in order to initialize the application extension service.</summary>
      <param name="context">Provides information about the application state. </param>
    </member>
    <member name="M:System.Windows.IApplicationService.StopService">
      <summary>Called by an application in order to stop the application extension service. </summary>
    </member>
    <member name="T:System.Windows.Icon">
      <summary>Represents an icon that is used to identify an offline application.</summary>
    </member>
    <member name="M:System.Windows.Icon.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Icon" /> class. </summary>
    </member>
    <member name="P:System.Windows.Icon.Size">
      <summary>Gets the icon size. </summary>
      <returns>The icon size.</returns>
    </member>
    <member name="F:System.Windows.Icon.SizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Icon.Size" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Icon.Size" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Icon.Source">
      <summary>Gets the path and file name to the PNG source file of the icon. </summary>
      <returns>The path to the PNG source file of the icon. </returns>
    </member>
    <member name="F:System.Windows.Icon.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Icon.Source" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Icon.Source" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.IconCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Icon" /> instances.</summary>
    </member>
    <member name="M:System.Windows.IconCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.IconCollection" /> class. </summary>
    </member>
    <member name="T:System.Windows.IDataObject">
      <summary>Provides a format-independent mechanism for transferring data.</summary>
    </member>
    <member name="M:System.Windows.IDataObject.GetData(System.String)">
      <summary>Retrieves a data object in a specified format; the data format is specified by a string.</summary>
      <returns>A data object that has the data in the specified format; or null, if the data is not available in the specified format.</returns>
      <param name="format">A string that specifies the format in which to retrieve the data. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)">
      <summary>Retrieves a data object in a specified format, and optionally, converts the data to the specified format.</summary>
      <returns>A data object that has the data in the specified format; or null, if the data is not available in the specified format.</returns>
      <param name="format">A string that specifies the format in which to retrieve the data. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
      <param name="autoConvert">true to attempt to automatically convert the data to the specified format; false to perform no data format conversion.If this parameter is false, the method returns data in the specified format if it is available; or returns null if the data is not available in the specified format.</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetData(System.Type)">
      <summary>Retrieves a data object in a specified format; the data format is specified by a <see cref="T:System.Type" /> object.</summary>
      <returns>A data object that has the data in the specified format; or null, if the data is not available in the specified format.</returns>
      <param name="format">A <see cref="T:System.Type" /> object that specifies the format in which to retrieve the data. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetDataPresent(System.String)">
      <summary>Checks whether the data is available in, or can be converted to, a specified format; the data format is specified by a string.</summary>
      <returns>true if the data is in, or can be converted to, the specified format; otherwise, false.</returns>
      <param name="format">A string that specifies the format to check for. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)">
      <summary>Checks whether the data is available in, or can be converted to, a specified format. If the data is not already available in the specified format, a Boolean flag indicates whether to check if the data can be converted to the specified format.</summary>
      <returns>true if the data is in, or can be converted to, the specified format; otherwise, false.</returns>
      <param name="format">A string that specifies the format to check for. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
      <param name="autoConvert">false to only check for the specified format; true to also check whether the data that is stored in this data object can be converted to the specified format.</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetDataPresent(System.Type)">
      <summary>Checks to see whether the data is available in, or can be converted to, a specified format. The data format is specified by a <see cref="T:System.Type" /> object.</summary>
      <returns>true if the data is in, or can be converted to, the specified format; otherwise, false.</returns>
      <param name="format">A <see cref="T:System.Type" /> that specifies the format to check for.</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetFormats">
      <summary>Returns a list of all formats that the data in this data object is stored in, or can be converted to.</summary>
      <returns>An array of strings, with each string specifying the name of a format that is supported by this data object.</returns>
    </member>
    <member name="M:System.Windows.IDataObject.GetFormats(System.Boolean)">
      <summary>Returns a list of all formats that the data in this data object is stored in. A Boolean flag indicates whether to also include formats that the data can be automatically converted to.</summary>
      <returns>An array of strings, with each string specifying the name of a format that is supported by this data object.</returns>
      <param name="autoConvert">true to retrieve all formats that the data in this data object is stored in, or can be converted to; false to retrieve only the formats in which the data in this data object is stored (excludes formats that the data is not stored in, but can be automatically converted to).</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.Object)">
      <summary>Stores the specified data in this data object, and automatically converts the data format from the source object type.</summary>
      <param name="data">The data to store in this data object.</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.String,System.Object)">
      <summary>Stores the specified data in this data object, using one or more specified data formats. The data format is specified by a string.</summary>
      <param name="format">A string that specifies the format in which to store the data. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
      <param name="data">The data to store in this data object.</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)">
      <summary>Stores the specified data in this data object, using one or more specified data formats. This overload includes a Boolean flag to indicate whether the data may be converted to another format on retrieval.</summary>
      <param name="format">A string that specifies the format in which to store the data. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
      <param name="data">The data to store in this data object.</param>
      <param name="autoConvert">true to allow the data to be converted to another format on retrieval; false to prohibit the data from being converted to another format on retrieval.</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.Type,System.Object)">
      <summary>Stores the specified data in this data object, using one or more specified data formats. The data format is specified by a <see cref="T:System.Type" /> class.</summary>
      <param name="format">A <see cref="T:System.Type" /> that specifies the format in which to store the data.</param>
      <param name="data">The data to store in this data object.</param>
    </member>
    <member name="T:System.Windows.InstallState">
      <summary>Defines constants that indicate the installation state of an application that is configured to run outside the browser.</summary>
    </member>
    <member name="F:System.Windows.InstallState.NotInstalled">
      <summary>The application has not been installed to run outside the browser.</summary>
    </member>
    <member name="F:System.Windows.InstallState.Installing">
      <summary>The application is in the process of being installed to run outside the browser. </summary>
    </member>
    <member name="F:System.Windows.InstallState.Installed">
      <summary>The application has been installed to run outside the browser.</summary>
    </member>
    <member name="F:System.Windows.InstallState.InstallFailed">
      <summary>The application could not be installed to run outside the browser. </summary>
    </member>
    <member name="T:System.Windows.LayoutCycleException">
      <summary>An exception that is thrown by the layout cycle.</summary>
    </member>
    <member name="T:System.Windows.LineStackingStrategy">
      <summary>Describes the mechanism by which a line box is determined for each line. </summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.MaxHeight">
      <summary>The stack height is the smallest value that contains the extended block progression dimension of all the inline elements on that line when those elements are properly aligned. This is the default.</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.BlockLineHeight">
      <summary>The stack height is determined by the block element line-height property value.</summary>
    </member>
    <member name="T:System.Windows.MediaFailedRoutedEventArgs"></member>
    <member name="P:System.Windows.MediaFailedRoutedEventArgs.ErrorTrace">
      <summary>Gets the trace information for a media failed event.</summary>
    </member>
    <member name="T:System.Windows.MediaFailedRoutedEventHandler">
      <summary>Represents the method that handles media failed events.</summary>
    </member>
    <member name="T:System.Windows.MessageBox">
      <summary>Displays a message to the user and optionally prompts for a response. </summary>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String)">
      <summary>Displays a message box that contains the specified text and an OK button.</summary>
      <returns>
        <see cref="F:System.Windows.MessageBoxResult.OK" /> in all cases.</returns>
      <param name="messageBoxText">The message to display.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageBoxText" /> is null.</exception>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>Displays a message box that contains the specified text, title bar caption, and response buttons. </summary>
      <returns>A value that indicates the user's response to the message. </returns>
      <param name="messageBoxText">The message to display.</param>
      <param name="caption">The title of the message box. </param>
      <param name="button">A value that indicates the button or buttons to display. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageBoxText" /> is null.-or-<paramref name="caption" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="button" /> is not a valid <see cref="T:System.Windows.MessageBoxButton" /> value.</exception>
    </member>
    <member name="T:System.Windows.MessageBoxButton">
      <summary>Specifies the buttons to include when you display a message box.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OK">
      <summary>Displays only the OK button.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OKCancel">
      <summary>Displays both the OK and Cancel buttons.</summary>
    </member>
    <member name="T:System.Windows.MessageBoxResult">
      <summary>Represents a user's response to a message box.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.None">
      <summary>This value is not currently used. </summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.OK">
      <summary>The user clicked the OK button. </summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Cancel">
      <summary>The user clicked the Cancel button or pressed ESC.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Yes">
      <summary>This value is not currently used. </summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.No">
      <summary>This value is not currently used. </summary>
    </member>
    <member name="T:System.Windows.NotificationWindow">
      <summary>Represents a notification area that is displayed in the system area. Notifications can only be enabled for an out-of-browser application; browser-hosted applications cannot access this notification area.</summary>
    </member>
    <member name="M:System.Windows.NotificationWindow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.NotificationWindow" /> class. </summary>
    </member>
    <member name="M:System.Windows.NotificationWindow.Close">
      <summary>Immediately closes the notification window.</summary>
    </member>
    <member name="E:System.Windows.NotificationWindow.Closed">
      <summary>Occurs when <see cref="M:System.Windows.NotificationWindow.Close" /> is called, or when the notification window times out and has finished its fadeout animation.</summary>
    </member>
    <member name="P:System.Windows.NotificationWindow.Content">
      <summary>Gets or sets the root of visual elements that define the visual look of the notification.</summary>
      <returns>A single <see cref="T:System.Windows.FrameworkElement" /> that includes the root of a visual tree. The visual tree defines the visual look of the notification.</returns>
    </member>
    <member name="F:System.Windows.NotificationWindow.ContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.NotificationWindow.Content" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.NotificationWindow.Content" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.NotificationWindow.Height">
      <summary>Gets or sets the height, in pixels, of this notification window. See Remarks.</summary>
      <returns>The height, in pixels, of this notification window when it is displayed.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Attempted to set value greater than 100, or less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">Attempted to set value while notification window is visible.</exception>
    </member>
    <member name="F:System.Windows.NotificationWindow.HeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.NotificationWindow.Height" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.NotificationWindow.Height" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.NotificationWindow.Show(System.Int32)">
      <summary>Displays the notification window for the specified number of milliseconds before it times out.</summary>
      <param name="durationInMilliseconds">The duration that the notification window should remain displayed in the system area, specified in milliseconds.</param>
      <exception cref="T:System.InvalidOperationException">A different notification window instance is still visible.</exception>
    </member>
    <member name="P:System.Windows.NotificationWindow.Visibility">
      <summary>Gets a value that determines whether this notification is currently being displayed.</summary>
      <returns>true if the notification is currently displayed; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.NotificationWindow.Width">
      <summary>Gets or sets the width, in pixels, of this notification window. See Remarks.</summary>
      <returns>The width, in pixels, of this notification window when it is displayed.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Attempted to set value greater than 400, or less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">Attempted to set value while notification window is visible.</exception>
    </member>
    <member name="F:System.Windows.NotificationWindow.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.NotificationWindow.Width" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.NotificationWindow.Width" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.NullableBoolConverter">
      <summary>Converts <see cref="T:System.Nullable`1" /> types (using the <see cref="T:System.Boolean" /> type constraint on the generic)  from strings.</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.NullableBoolConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether this converter can convert an object of the specified type to the <see cref="T:System.Nullable`1" /> type (using the <see cref="T:System.Boolean" /> type constraint on the generic).</summary>
      <returns>true if <paramref name="sourceType" /> is a <see cref="T:System.String" />, <see cref="T:System.Boolean" />, or a <see cref="T:System.Nullable`1" /> type (using the <see cref="T:System.Boolean" /> type constraint on the generic) that can be assigned from <paramref name="sourceType" />; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">The type that you want to convert from.</param>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.Nullable`1" /> type (using the <see cref="T:System.Boolean" /> type constraint on the generic).</summary>
      <returns>A <see cref="T:System.Nullable`1" /> type (using the <see cref="T:System.Boolean" /> type constraint on the generic) that represents the converted object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The object to convert to a <see cref="T:System.Nullable`1" /> type (using the <see cref="T:System.Boolean" /> type constraint on the generic).</param>
      <exception cref="T:System.NotSupportedException">The conversion attempt failed. <paramref name="value" /> is not a <see cref="T:System.String" />, <see cref="T:System.Boolean" />, or <see cref="T:System.Nullable`1" /> (using the <see cref="T:System.Boolean" /> type constraint on the generic) type.</exception>
    </member>
    <member name="T:System.Windows.OutOfBrowserSettings">
      <summary>Represents information about an application that is configured for out-of-browser support. </summary>
    </member>
    <member name="M:System.Windows.OutOfBrowserSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.OutOfBrowserSettings" /> class. </summary>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.Blurb">
      <summary>Gets a short description of the application.</summary>
      <returns>A short description of the application.</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.BlurbProperty">
      <summary>Identifies the <see cref="P:System.Windows.OutOfBrowserSettings.Blurb" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.OutOfBrowserSettings.Blurb" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.EnableGPUAcceleration">
      <summary>Gets a value that indicates whether to use graphics processor unit hardware acceleration for cached compositions, which potentially results in graphics optimization. </summary>
      <returns>true if GPU acceleration is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.EnableGPUAccelerationProperty">
      <summary>Identifies the <see cref="P:System.Windows.OutOfBrowserSettings.EnableGPUAcceleration" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.OutOfBrowserSettings.EnableGPUAcceleration" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.Icons">
      <summary>Gets a collection of <see cref="T:System.Windows.Icon" /> instances associated with the application.</summary>
      <returns>The icons associated with the application.</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.IconsProperty">
      <summary>Identifies the <see cref="P:System.Windows.OutOfBrowserSettings.Icons" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.OutOfBrowserSettings.Icons" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.SecuritySettings">
      <summary>Gets the security settings applied to the out-of-browser application.</summary>
      <returns>The security settings applied to the out-of-browser application.</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.SecuritySettingsProperty">
      <summary>Identifies the <see cref="P:System.Windows.OutOfBrowserSettings.SecuritySettings" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.OutOfBrowserSettings.SecuritySettings" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.ShortName">
      <summary>Gets the short version of the application title. </summary>
      <returns>The short version of the application title. </returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.ShortNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.OutOfBrowserSettings.ShortName" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.OutOfBrowserSettings.ShortName" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.ShowInstallMenuItem">
      <summary>Gets a value that indicates whether the application right-click menu includes an install option.</summary>
      <returns>true if the right-click menu includes an install option; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.ShowInstallMenuItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.OutOfBrowserSettings.ShowInstallMenuItem" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.OutOfBrowserSettings.ShowInstallMenuItem" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.WindowSettings">
      <summary>Gets the settings applied to the application window.</summary>
      <returns>The settings applied to the application window.</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.WindowSettingsProperty">
      <summary>Identifies the <see cref="P:System.Windows.OutOfBrowserSettings.WindowSettings" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.OutOfBrowserSettings.WindowSettings" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary>Represents an x- and y-coordinate pair in two-dimensional space. Can also represent a logical point for certain property usages.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary>Initializes a <see cref="T:System.Windows.Point" /> structure that contains the specified values. </summary>
      <param name="x">The x-coordinate value of the <see cref="T:System.Windows.Point" /> structure. </param>
      <param name="y">The y-coordinate value of the <see cref="T:System.Windows.Point" /> structure. </param>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary>Determines whether the specified object is a <see cref="T:System.Windows.Point" /> and whether it contains the same values as this <see cref="T:System.Windows.Point" />. </summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.Windows.Point" /> and contains the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values as this <see cref="T:System.Windows.Point" />; otherwise, false.</returns>
      <param name="o">The object to compare.</param>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary>Compares two <see cref="T:System.Windows.Point" /> structures for equality.</summary>
      <returns>true if both <see cref="T:System.Windows.Point" /> structures contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, false.</returns>
      <param name="value">The point to compare to this instance.</param>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Point" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Point" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary>Compares two <see cref="T:System.Windows.Point" /> structures for equality.</summary>
      <returns>true if both the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, false.</returns>
      <param name="point1">The first <see cref="T:System.Windows.Point" /> structure to compare.</param>
      <param name="point2">The second <see cref="T:System.Windows.Point" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary>Compares two <see cref="T:System.Windows.Point" /> structures for inequality</summary>
      <returns>true if <paramref name="point1" /> and <paramref name="point2" /> have different <see cref="P:System.Windows.Point.X" /> or <see cref="P:System.Windows.Point.Y" /> values; false if <paramref name="point1" /> and <paramref name="point2" /> have the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values.</returns>
      <param name="point1">The first point to compare.</param>
      <param name="point2">The second point to compare.</param>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A string containing the value of the current instance in the specified format.</returns>
      <param name="format">The string specifying the format to use. -or- null to use the default format defined for the type of the IFormattable implementation. </param>
      <param name="provider">The IFormatProvider to use to format the value. -or- null to obtain the numeric format information from the current locale setting of the operating system. </param>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />. </summary>
      <returns>A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />. </summary>
      <returns>A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary>Gets or sets the <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure. </summary>
      <returns>The <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary>Gets or sets the <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" />. </summary>
      <returns>The <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.  The default value is 0.</returns>
    </member>
    <member name="T:System.Windows.PresentationFrameworkCollection`1">
      <summary>Provides a common collection class for Silverlight collections.</summary>
      <typeparam name="T">Type constraint for type safety of the constrained collection implementation.</typeparam>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)">
      <summary>Adds an item to the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</summary>
      <param name="value">The object to add.</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Clear">
      <summary>Removes all items from the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</summary>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)">
      <summary>Determines whether the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> contains a specific value.</summary>
      <returns>true if the object is found in the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />; otherwise, false.</returns>
      <param name="value">The object to locate in the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing. </param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing. </param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</returns>
    </member>
    <member name="F:System.Windows.PresentationFrameworkCollection`1.CountProperty">
      <summary>Identifies the <see cref="P:System.Windows.PresentationFrameworkCollection`1.Count" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.PresentationFrameworkCollection`1.Count" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The object to locate in the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />. </param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)">
      <summary>Inserts an item to the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted. </param>
      <param name="value">The object to insert into the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />. </param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> has a fixed size.</summary>
      <returns>true if the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</summary>
      <returns>true if an object was removed; otherwise, false.</returns>
      <param name="value">The object to remove from the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove. </param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> .</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</summary>
      <returns>The position into which the new element was inserted. </returns>
      <param name="value">The object to add.</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> contains a specific value.</summary>
      <returns>true if the object is found in the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />; otherwise, false.</returns>
      <param name="value">The object to locate in the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The object to locate in the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />. </param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted. </param>
      <param name="value">The object to insert into the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />. </param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</summary>
      <param name="value">The object to remove from the <see cref="T:System.Windows.PresentationFrameworkCollection`1" />.</param>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary>Represents the callback that is invoked when the effective property value of a dependency property changes.</summary>
      <param name="d">The <see cref="T:System.Windows.DependencyObject" /> on which the property has changed value.</param>
      <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary>Defines certain behavior aspects of a dependency property, including conditions it was registered with. </summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyMetadata" /> class, using a property default value.</summary>
      <param name="defaultValue">A default value for the property where this <see cref="T:System.Windows.PropertyMetadata" /> is applied.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyMetadata" /> class, using a property default value and callback reference.</summary>
      <param name="defaultValue">A default value for the property where this <see cref="T:System.Windows.PropertyMetadata" /> is applied.</param>
      <param name="propertyChangedCallback">A reference to the callback to call for property changed behavior.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyMetadata" /> class, using a callback reference.</summary>
      <param name="propertyChangedCallback">A reference to the callback to call for property changed behavior.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary>Gets the default value for the dependency property. </summary>
      <returns>The default value for the dependency property.</returns>
    </member>
    <member name="T:System.Windows.PropertyPath">
      <summary>Implements a data structure for describing a property as a path below another property, or below an owning type. Property paths are used in data binding to objects, and in storyboards and timelines for animations.</summary>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</summary>
      <param name="parameter">A dependency property identifier, or a property path string.</param>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</summary>
      <param name="path">The path string for this <see cref="T:System.Windows.PropertyPath" />.</param>
      <param name="pathParameters">Do not use. See Remarks.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Provided an array of length greater than zero for <paramref name="pathParameters" />.</exception>
    </member>
    <member name="P:System.Windows.PropertyPath.Path">
      <summary>Gets the path value held by this <see cref="T:System.Windows.PropertyPath" />.</summary>
      <returns>The path value held by this <see cref="T:System.Windows.PropertyPath" />.</returns>
    </member>
    <member name="T:System.Windows.PropertyPathConverter">
      <summary>Provides type conversion support for the <see cref="T:System.Windows.PropertyPath" /> type. </summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyPathConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of one type to the <see cref="T:System.Windows.PropertyPath" /> type.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given value to the <see cref="T:System.Windows.PropertyPath" /> type.</summary>
      <returns>The returned <see cref="T:System.Windows.PropertyPath" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is not a string and is not an existing <see cref="T:System.Windows.PropertyPath" />.</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary>Describes the width, height, and point origin of a rectangle. </summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height. </summary>
      <param name="x">The x-coordinate of the top-left corner of the rectangle.</param>
      <param name="y">The y-coordinate of the top-left corner of the rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
      <exception cref="T:System.ArgumentException">width or height are less than 0.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>Initializes a <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points. </summary>
      <param name="point1">The first point that the new rectangle must contain.</param>
      <param name="point2">The second point that the new rectangle must contain.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary>Initializes a <see cref="T:System.Windows.Rect" /> structure based on an origin and size. </summary>
      <param name="location">The origin of the new <see cref="T:System.Windows.Rect" />.</param>
      <param name="size">The size of the new <see cref="T:System.Windows.Rect" />.</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary>Gets the y-axis value of the bottom of the rectangle. </summary>
      <returns>The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is <see cref="F:System.Double.NegativeInfinity" /> .</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary>Indicates whether the rectangle described by the <see cref="T:System.Windows.Rect" /> contains the specified point.</summary>
      <returns>true if the rectangle described by the <see cref="T:System.Windows.Rect" /> contains the specified point; otherwise, false.</returns>
      <param name="point">The point to check.</param>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary>Gets a special value that represents a rectangle with no position or area. </summary>
      <returns>The empty rectangle, which has <see cref="P:System.Windows.Rect.X" /> and <see cref="P:System.Windows.Rect.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" />, and has <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary>Indicates whether the specified object is equal to the current <see cref="T:System.Windows.Rect" />.</summary>
      <returns>true if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same x,y,width,height values as the current <see cref="T:System.Windows.Rect" />; otherwise, false.</returns>
      <param name="o">The object to compare to the current rectangle.</param>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary>Indicates whether the specified <see cref="T:System.Windows.Rect" /> is equal to the current <see cref="T:System.Windows.Rect" />. </summary>
      <returns>true if the specified <see cref="T:System.Windows.Rect" /> has the same x,y,width,height property values as the current <see cref="T:System.Windows.Rect" />; otherwise, false.</returns>
      <param name="value">The rectangle to compare to the current rectangle.</param>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary>Creates a hash code for the <see cref="T:System.Windows.Rect" />. </summary>
      <returns>A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary>Gets or sets the height of the rectangle. </summary>
      <returns>A value that represents the height of the rectangle. The default is 0.</returns>
      <exception cref="T:System.ArgumentException">Specified a value less than 0.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary>Finds the intersection of the rectangle represented by the current <see cref="T:System.Windows.Rect" /> and the rectangle represented by the specified <see cref="T:System.Windows.Rect" />, and stores the result as the current <see cref="T:System.Windows.Rect" />. </summary>
      <param name="rect">The rectangle to intersect with the current rectangle.</param>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary>Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</summary>
      <returns>true if the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary>Gets the x-axis value of the left side of the rectangle. </summary>
      <returns>The x-axis value of the left side of the rectangle.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary>Compares two <see cref="T:System.Windows.Rect" /> structures for equality.</summary>
      <returns>true if the <see cref="T:System.Windows.Rect" /> structures have the same x,y,width,height property values; otherwise, false.</returns>
      <param name="rect1">The first rectangle to compare.</param>
      <param name="rect2">The second rectangle to compare.</param>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary>Compares two <see cref="T:System.Windows.Rect" /> structures for inequality.  </summary>
      <returns>true if the <see cref="T:System.Windows.Rect" /> structures do not have the same x,y,width,height property values; otherwise, false.</returns>
      <param name="rect1">The first rectangle to compare.</param>
      <param name="rect2">The second rectangle to compare.</param>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary>Gets the x-axis value of the right side of the rectangle.  </summary>
      <returns>The x-axis value of the right side of the rectangle.</returns>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A string containing the value of the current instance in the specified format.</returns>
      <param name="format">The string specifying the format to use. -or- null to use the default format defined for the type of the IFormattable implementation. </param>
      <param name="provider">The IFormatProvider to use to format the value. -or- null to obtain the numeric format information from the current locale setting of the operating system. </param>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary>Gets the y-axis position of the top of the rectangle. </summary>
      <returns>The y-axis position of the top of the rectangle.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary>Returns a string representation of the <see cref="T:System.Windows.Rect" /> structure. </summary>
      <returns>A string representation of the current <see cref="T:System.Windows.Rect" /> structure. The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary>Returns a string representation of the rectangle by using the specified format provider. </summary>
      <returns>A string representation of the current rectangle that is determined by the specified format provider.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary>Expands the rectangle represented by the current <see cref="T:System.Windows.Rect" /> exactly enough to contain the specified point. </summary>
      <param name="point">The point to include.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary>Expands the rectangle represented by the current <see cref="T:System.Windows.Rect" /> exactly enough to contain the specified rectangle. </summary>
      <param name="rect">The rectangle to include.</param>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary>Gets or sets the width of the rectangle.  </summary>
      <returns>A value that represents the width of the rectangle in pixels. The default is 0.</returns>
      <exception cref="T:System.ArgumentException">Specified a value less than 0.</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary>Gets or sets the x-axis value of the left side of the rectangle. </summary>
      <returns>The x-axis value of the left side of the rectangle. This value is interpreted as pixels within the coordinate space.</returns>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary>Gets or sets the y-axis value of the top side of the rectangle. </summary>
      <returns>The y-axis value of the top side of the rectangle. This value is interpreted as pixels within the coordinate space..</returns>
    </member>
    <member name="T:System.Windows.ResourceDictionary">
      <summary>Provides a dictionary that contains keyed resources used by components of a Silverlight-based application. </summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ResourceDictionary" /> class. </summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
      <summary>Adds an item to the <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <param name="key">The string key of the item to add.</param>
      <param name="value">The item value to add. </param>
      <exception cref="T:System.NotSupportedException">Attempted to add null as a value.</exception>
      <exception cref="T:System.ArgumentException">Attempted to add an item with a <paramref name="key" /> that already exists in this <see cref="T:System.Windows.ResourceDictionary" />.-or-Attempted to use a <paramref name="key" /> that is not a string.</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Add(System.String,System.Object)">
      <summary>Adds an item to the <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <param name="key">The string key of the item to add.</param>
      <param name="value">The item value to add. </param>
      <exception cref="T:System.NotSupportedException">Attempted to add null as a value.</exception>
      <exception cref="T:System.ArgumentException">Attempted to add an item with a <paramref name="key" /> that already exists in this <see cref="T:System.Windows.ResourceDictionary" />.</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Clear">
      <summary>Removes all items from this <see cref="T:System.Windows.ResourceDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Contains(System.Object)">
      <summary>Returns a value that indicates whether a specified key exists in the <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <returns>true if an item with that key exists in the <see cref="T:System.Windows.ResourceDictionary" />; otherwise, false.</returns>
      <param name="key">The key to check for in the <see cref="T:System.Windows.ResourceDictionary" />.</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Windows.ResourceDictionary" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Windows.ResourceDictionary" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.GetEnumerator">
      <summary>Exposes the enumerator, which supports a simple iteration over a non-generic collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.ResourceDictionary" /> has a fixed size.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Item(System.Object)">
      <summary>Gets the element at the specified index.</summary>
      <returns>The object if it exists; otherwise, null.</returns>
      <param name="key">The key of the element to get. </param>
      <exception cref="T:System.NotImplementedException">Attempted to set a value using the indexer. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is not a string.</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <returns>The <see cref="T:System.Collections.ICollection" /> of all keys in this <see cref="T:System.Windows.ResourceDictionary" />.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.MergedDictionaries">
      <summary>Gets a collection of the <see cref="T:System.Windows.ResourceDictionary" /> dictionaries that constitute the various resource dictionaries in the merged dictionaries.</summary>
      <returns>A collection of the <see cref="T:System.Windows.ResourceDictionary" /> dictionaries that constitute the various resource dictionaries in the merged dictionaries. </returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Remove(System.Object)">
      <summary>Removes a specific item from the <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <param name="key">The string key of the item to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Attempted to use a <paramref name="key" /> that is not a string.</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Remove(System.String)">
      <summary>Removes a specific item from the <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <param name="key">The string key of the item to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Source">
      <summary>Gets or sets a URI that provides the source location of a merged resource dictionary.</summary>
      <returns>A URI that provides the source location of a merged resource dictionary. This is typically a path within the XAP for an application, or a relative reference to a loose XAML file.</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)" />.</summary>
      <param name="item">The object to add to the collection.</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Clear" />.</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)" />.</summary>
      <returns>true if <paramref name="item" /> is found in the collection; otherwise, false.</returns>
      <param name="item">The object to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing. </param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins. </param>
      <exception cref="T:System.NotImplementedException">Thrown in all cases by this implementation.</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</summary>
      <returns>The number of elements contained in the collection.</returns>
      <exception cref="T:System.NotImplementedException">Thrown in all cases by this implementation.</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Remove(`0)" />.</summary>
      <returns>true if <paramref name="item" /> was successfully removed from the collection; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original collection. </returns>
      <param name="item">The object to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Add(System.Object,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />.</summary>
      <param name="key">The object to use as the key for the element to add.</param>
      <param name="value">The object to use as the value for the element to add.</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#ContainsKey(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />.</summary>
      <returns>true if the dictionary contains an element with the key; otherwise, false.</returns>
      <param name="key">The key to locate in the dictionary.</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Item(System.Object)">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.IDictionary`2.Item(`0)" />.</summary>
      <returns>The element with the specified key. </returns>
      <param name="key">The key of the element to get or set.</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.IDictionary`2.Keys" />.</summary>
      <returns>A collection that contains the keys of the elements in the dictionary.</returns>
      <exception cref="T:System.NotImplementedException">Thrown in all cases.</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />.</summary>
      <returns>true if the element was successfully removed from the collection; otherwise, false. This method also returns false if <paramref name="key" /> is not found in the original collection. </returns>
      <param name="key">The key of the element to remove. </param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#TryGetValue(System.Object,System.Object@)">
      <summary>For a description of this member, see  <see cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" />.</summary>
      <returns>true if the dictionary contains an object with the specified key; otherwise, false.</returns>
      <param name="key">The key whose value to get.</param>
      <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.IDictionary`2.Values" />.</summary>
      <returns>A collection that contains the values of the elements in the dictionary.</returns>
      <exception cref="T:System.NotImplementedException">Thrown in all cases.</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
      <exception cref="T:System.NotImplementedException">Thrown in all cases.</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Always null. <see cref="T:System.Windows.ResourceDictionary" /> is not synchronized.</returns>
      <exception cref="T:System.NotImplementedException">Thrown in all cases.</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An enumerator that can be used to iterate through the collection. </returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Values">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> object containing the values of the <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <returns>The <see cref="T:System.Collections.ICollection" /> of all values in this <see cref="T:System.Windows.ResourceDictionary" />.</returns>
    </member>
    <member name="T:System.Windows.RoutedEvent">
      <summary>Represents a routed event to the Silverlight event system.</summary>
    </member>
    <member name="M:System.Windows.RoutedEvent.ToString">
      <summary>Returns the string representation of the routed event.</summary>
      <returns>The name of the routed event.</returns>
    </member>
    <member name="T:System.Windows.RoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event. </summary>
    </member>
    <member name="M:System.Windows.RoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class. </summary>
    </member>
    <member name="P:System.Windows.RoutedEventArgs.OriginalSource">
      <summary>Gets a reference to the object that raised the event. </summary>
      <returns>The object that raised the event.</returns>
    </member>
    <member name="T:System.Windows.RoutedEventHandler">
      <summary>Represents the method that will handle routed events.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data. </param>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventArgs`1">
      <summary>Provides data about a change in value to a dependency property as reported by particular routed events, including the previous and current value of the property that changed. </summary>
      <typeparam name="T">The type of the dependency property that has changed.</typeparam>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> class, with provided old and new values.</summary>
      <param name="oldValue">The previous value of the property, before the event was raised.</param>
      <param name="newValue">The current value of the property at the time of the event.</param>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue">
      <summary>Gets the new value of a property as reported by a property-changed event. </summary>
      <returns>The generic value. In a practical implementation of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />, the generic type of this property is replaced with the constrained type of the implementation.</returns>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue">
      <summary>Gets the previous value of the property as reported by a property-changed event. </summary>
      <returns>The generic value. In a practical implementation of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />, the generic type of this property is replaced with the constrained type of the implementation.</returns>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventHandler`1">
      <summary>Represents methods that will handle various routed events that track property value changes.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data. Specific event definitions will constrain <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> to a type, with the type parameter of the constraint matching the type parameter constraint of a delegate implementation.</param>
      <typeparam name="T">The type of the property value where changes in value are reported.</typeparam>
    </member>
    <member name="T:System.Windows.SecuritySettings">
      <summary>Represents the security configuration of an out-of-browser application. </summary>
    </member>
    <member name="M:System.Windows.SecuritySettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.SecuritySettings" /> class. </summary>
    </member>
    <member name="P:System.Windows.SecuritySettings.ElevatedPermissions">
      <summary>Gets a value that indicates whether the out-of-browser application requires elevated permissions. </summary>
      <returns>A value that indicates whether the out-of-browser application requires elevated permissions.</returns>
    </member>
    <member name="F:System.Windows.SecuritySettings.ElevatedPermissionsProperty">
      <summary>Identifies the <see cref="P:System.Windows.SecuritySettings.ElevatedPermissions" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.SecuritySettings.ElevatedPermissions" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Setter">
      <summary>Applies a value to a property in a <see cref="T:System.Windows.Style" />.</summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Setter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Setter" /> class with the specified property and value.</summary>
      <param name="property">The dependency property to apply the value to.</param>
      <param name="value">The value to apply to the property.</param>
    </member>
    <member name="P:System.Windows.Setter.Property">
      <summary>Gets or sets the property to apply the <see cref="P:System.Windows.Setter.Value" /> to.</summary>
      <returns>A <see cref="T:System.Windows.DependencyProperty" /> to which the <see cref="P:System.Windows.Setter.Value" /> will be applied. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Setter.Value">
      <summary>Gets or sets the value to apply to the property that is specified by the <see cref="T:System.Windows.Setter" />.</summary>
      <returns>The value to apply to the property that is specified by the <see cref="T:System.Windows.Setter" />.</returns>
    </member>
    <member name="T:System.Windows.SetterBase">
      <summary>Represents the base class for value setters. </summary>
    </member>
    <member name="P:System.Windows.SetterBase.IsSealed">
      <summary>Gets a value that indicates whether this object is in an immutable state.</summary>
      <returns>true if this object is in an immutable state; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.SetterBaseCollection">
      <summary>Represents a collection of objects that inherit from <see cref="T:System.Windows.SetterBase" />.</summary>
    </member>
    <member name="M:System.Windows.SetterBaseCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.SetterBaseCollection" /> class. </summary>
    </member>
    <member name="P:System.Windows.SetterBaseCollection.IsSealed">
      <summary>Gets a value that indicates whether the collection is in a read-only state.</summary>
      <returns>true if this object is in a read-only state and cannot be changed; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Size">
      <summary>Describes the width and height of an object. </summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Size" /> structure and assigns it an initial <paramref name="width" /> and <paramref name="height" />.</summary>
      <param name="width">The initial width of the instance of <see cref="T:System.Windows.Size" />.</param>
      <param name="height">The initial height of the instance of <see cref="T:System.Windows.Size" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="width" /> or <paramref name="height" /> are less than 0.</exception>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary>Gets a value that represents a static empty <see cref="T:System.Windows.Size" />. </summary>
      <returns>An empty instance of <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary>Compares an object to an instance of <see cref="T:System.Windows.Size" /> for equality. </summary>
      <returns>true if the sizes are equal; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Object" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary>Compares a value to an instance of <see cref="T:System.Windows.Size" /> for equality. </summary>
      <returns>true if the instances of <see cref="T:System.Windows.Size" /> are equal; otherwise, false.</returns>
      <param name="value">The size to compare to this current instance of <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary>Gets the hash code for this instance of <see cref="T:System.Windows.Size" />. </summary>
      <returns>The hash code for this instance of <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary>Gets or sets the height of this instance of <see cref="T:System.Windows.Size" />. </summary>
      <returns>The <see cref="P:System.Windows.Size.Height" /> of this instance of <see cref="T:System.Windows.Size" />, in pixels. The default is 0. The value cannot be negative.</returns>
      <exception cref="T:System.ArgumentException">Specified a value less than 0.</exception>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary>Gets a value that indicates whether this instance of <see cref="T:System.Windows.Size" /> is <see cref="P:System.Windows.Size.Empty" />. </summary>
      <returns>true if this instance of size is <see cref="P:System.Windows.Size.Empty" />; otherwise false.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary>Compares two instances of <see cref="T:System.Windows.Size" /> for equality. </summary>
      <returns>true if the two instances of <see cref="T:System.Windows.Size" /> are equal; otherwise false.</returns>
      <param name="size1">The first instance of <see cref="T:System.Windows.Size" /> to compare.</param>
      <param name="size2">The second instance of <see cref="T:System.Windows.Size" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary>Compares two instances of <see cref="T:System.Windows.Size" /> for inequality. </summary>
      <returns>true if the instances of <see cref="T:System.Windows.Size" /> are not equal; otherwise false.</returns>
      <param name="size1">The first instance of <see cref="T:System.Windows.Size" /> to compare.</param>
      <param name="size2">The second instance of <see cref="T:System.Windows.Size" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary>Returns a string representation of this <see cref="T:System.Windows.Size" />.</summary>
      <returns>A string representation of this <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary>Gets or sets the width of this instance of <see cref="T:System.Windows.Size" />. </summary>
      <returns>The <see cref="P:System.Windows.Size.Width" /> of this instance of <see cref="T:System.Windows.Size" />, in pixels. The default value is 0. The value cannot be negative.</returns>
      <exception cref="T:System.ArgumentException">Specified a value less than 0.</exception>
    </member>
    <member name="T:System.Windows.SizeChangedEventArgs">
      <summary>Provides data related to the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> event. </summary>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.NewSize">
      <summary>Gets the new size of the object reporting the size change.</summary>
      <returns>The new size. The <see cref="T:System.Windows.Size" /> structure contains the new height and width.</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.PreviousSize">
      <summary>Gets the previous size of the object reporting the size change.</summary>
      <returns>The previous size. </returns>
    </member>
    <member name="T:System.Windows.SizeChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.StartupEventArgs">
      <summary>Contains the event data for the <see cref="E:System.Windows.Application.Startup" /> event.</summary>
    </member>
    <member name="P:System.Windows.StartupEventArgs.InitParams">
      <summary>Gets the initialization parameters that were passed as part of HTML initialization of a Silverlight plug-in.</summary>
      <returns>The set of initialization parameters, as a dictionary with key strings and value strings.</returns>
    </member>
    <member name="T:System.Windows.StartupEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Application.Startup" /> event. </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Style">
      <summary>Contains property setters that can be shared between instances of a type.</summary>
    </member>
    <member name="M:System.Windows.Style.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Style" /> class. </summary>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" />. </summary>
      <param name="targetType">The type to which the style will apply.</param>
    </member>
    <member name="P:System.Windows.Style.BasedOn">
      <summary>Gets or sets a defined style that is the basis of the current style.</summary>
      <returns>A defined style that is the basis of the current style. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Style.IsSealed">
      <summary>Gets a value that indicates whether the style is read-only and cannot be changed.</summary>
      <returns>true if the style is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Style.Seal">
      <summary>Locks the style so that the <see cref="P:System.Windows.Style.TargetType" /> property or any <see cref="T:System.Windows.Setter" /> in the <see cref="P:System.Windows.Style.Setters" /> collection cannot be changed.</summary>
    </member>
    <member name="P:System.Windows.Style.Setters">
      <summary>Gets a collection of <see cref="T:System.Windows.Setter" /> objects.</summary>
      <returns>A collection of <see cref="T:System.Windows.Setter" /> objects. The default is an empty collection.</returns>
    </member>
    <member name="P:System.Windows.Style.TargetType">
      <summary>Gets or sets the type for which the style is intended.</summary>
      <returns>The type of object to which the style is applied.</returns>
    </member>
    <member name="T:System.Windows.StyleTypedPropertyAttribute">
      <summary>Represents an attribute that is applied to the class definition and reports the <see cref="P:System.Windows.Style.TargetType" /> of the properties that are of type <see cref="T:System.Windows.Style" />.</summary>
    </member>
    <member name="M:System.Windows.StyleTypedPropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.StyleTypedPropertyAttribute" /> class.</summary>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.Property">
      <summary>Gets or sets the name of the property that is of type <see cref="T:System.Windows.Style" />.</summary>
      <returns>The name of the property.</returns>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType">
      <summary>Gets or sets the <see cref="P:System.Windows.Style.TargetType" /> of the <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> this attribute is specifying. </summary>
      <returns>The <see cref="P:System.Windows.Style.TargetType" /> of the <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> this attribute is specifying.</returns>
    </member>
    <member name="T:System.Windows.SystemColors">
      <summary>Contains system colors, system brushes, and system resource keys that correspond to system display elements.</summary>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the active window's border.</summary>
      <returns>The color of the active window's border.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color of the active window's title bar.</summary>
      <returns>The background color of the active window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the text in the active window's title bar.</summary>
      <returns>The color of the active window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the application workspace.</summary>
      <returns>The color of the application workspace.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the face color of a three-dimensional display element.</summary>
      <returns>The face color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the shadow color of a three-dimensional display element.</summary>
      <returns>The shadow color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the dark shadow color of a three-dimensional display element.</summary>
      <returns>The dark shadow color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the light color of a three-dimensional display element.</summary>
      <returns>The light color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the highlight color of a three-dimensional display element.</summary>
      <returns>The highlight color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of text in a three-dimensional display element.</summary>
      <returns>The color of text in a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the desktop.</summary>
      <returns>The color of the desktop.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of disabled text.</summary>
      <returns>The color of disabled text.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color of selected items.</summary>
      <returns>The background color of selected items.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the text of selected items.</summary>
      <returns>The color of the text of selected items.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of an inactive window's border.</summary>
      <returns>The color of an inactive window's border.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color of an inactive window's title bar.</summary>
      <returns>The background color of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the text of an inactive window's title bar.</summary>
      <returns>The color of the text of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>The background color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the text color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>The text color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of a menu's background.</summary>
      <returns>The color of a menu's background.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of a menu's text.</summary>
      <returns>The color of a menu's text.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color of a scroll bar.</summary>
      <returns>The background color of a scroll bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color in the client area of a window.</summary>
      <returns>The background color in the client area of a window.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of a window frame.</summary>
      <returns>The color of a window frame.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the text in the client area of a window.</summary>
      <returns>The color of the text in the client area of a window.</returns>
    </member>
    <member name="T:System.Windows.SystemParameters">
      <summary>Contains properties that you can use to query system settings.</summary>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrast">
      <summary>Gets a value that indicates whether the client computer is in high-contrast mode.</summary>
      <returns>true if the client computer is in high-contrast mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WheelScrollLines">
      <summary>Gets a value that indicates the number of lines to scroll vertically in response to mouse wheel events.</summary>
      <returns>The number of lines to scroll vertically in response to mouse wheel events.</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExpression">
      <summary>Supports template binding.</summary>
    </member>
    <member name="T:System.Windows.TemplatePartAttribute">
      <summary>Represents an attribute that is applied to the class definition to identify the types of the named parts that are used for control templating.</summary>
    </member>
    <member name="M:System.Windows.TemplatePartAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplatePartAttribute" /> class</summary>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Name">
      <summary>Gets or sets a string that reports the object model name of a template part.</summary>
      <returns>A string that should be used as the name of a template part in a template.</returns>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Type">
      <summary>Gets or sets a string that reports the <see cref="T:System.Type" /> of a template part.</summary>
      <returns>A <see cref="T:System.Type" /> object that reports the type of a template part.</returns>
    </member>
    <member name="T:System.Windows.TemplateVisualStateAttribute">
      <summary>Specifies that a control can be in a certain state and that a <see cref="T:System.Windows.VisualState" /> is expected in the control's <see cref="T:System.Windows.Controls.ControlTemplate" />.</summary>
    </member>
    <member name="M:System.Windows.TemplateVisualStateAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateVisualStateAttribute" /> class. </summary>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.GroupName">
      <summary>Gets or sets the name of the group that the state belongs to.</summary>
      <returns>The name of the group that the state belongs to.</returns>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.Name">
      <summary>Gets or sets the name of the state that the control can be in.</summary>
      <returns>The name of the state that the control can be in.</returns>
    </member>
    <member name="T:System.Windows.TextAlignment">
      <summary>Specifies whether text is centered, left-aligned, or right-aligned.</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Center">
      <summary>Text is centered within the container.</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Left">
      <summary>Text is aligned to the left edge of the container.</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Right">
      <summary>Text is aligned to the right edge of the container.</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Justify">
      <summary>Text is justified within the container.</summary>
    </member>
    <member name="T:System.Windows.TextDecorationCollection">
      <summary>Provides the value for the <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> and <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> properties.</summary>
    </member>
    <member name="T:System.Windows.TextDecorations">
      <summary>Implements a set of predefined text decorations.</summary>
    </member>
    <member name="P:System.Windows.TextDecorations.Underline">
      <summary>Specifies an underlined text decoration.</summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> that represents an underlined text decoration.</returns>
    </member>
    <member name="T:System.Windows.TextTrimming">
      <summary>Describes how text is trimmed when it overflows the edge of its containing box.</summary>
    </member>
    <member name="F:System.Windows.TextTrimming.None">
      <summary>Text is not trimmed.</summary>
    </member>
    <member name="F:System.Windows.TextTrimming.WordEllipsis">
      <summary>Text is trimmed at a word boundary. An ellipsis (...) is drawn in place of remaining text.</summary>
    </member>
    <member name="T:System.Windows.TextWrapping">
      <summary>Specifies whether text wraps when it reaches the edge of its container.</summary>
    </member>
    <member name="F:System.Windows.TextWrapping.Wrap">
      <summary>Line breaking occurs if a line of text overflows beyond the available width of its container. Line breaking occurs even if the standard line-breaking algorithm cannot determine any line break opportunity, such as when a line of text includes a long word that is constrained by a fixed-width container without scrolling.</summary>
    </member>
    <member name="F:System.Windows.TextWrapping.NoWrap">
      <summary>No line wrapping is performed.</summary>
    </member>
    <member name="T:System.Windows.Thickness">
      <summary>Describes the thickness of a frame around a rectangle. Four <see cref="T:System.Double" /> values describe the <see cref="P:System.Windows.Thickness.Left" />, <see cref="P:System.Windows.Thickness.Top" />, <see cref="P:System.Windows.Thickness.Right" />, and <see cref="P:System.Windows.Thickness.Bottom" /> sides of the rectangle, respectively. </summary>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double)">
      <summary>Initializes a <see cref="T:System.Windows.Thickness" /> structure that has the specified uniform length on each side. </summary>
      <param name="uniformLength">The uniform length applied to all four sides of the bounding rectangle.</param>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a <see cref="T:System.Windows.Thickness" /> structure that has specific lengths (supplied as a <see cref="T:System.Double" />) applied to each side of the rectangle. </summary>
      <param name="left">The thickness for the left side of the rectangle.</param>
      <param name="top">The thickness for the upper side of the rectangle.</param>
      <param name="right">The thickness for the right side of the rectangle</param>
      <param name="bottom">The thickness for the lower side of the rectangle.</param>
    </member>
    <member name="P:System.Windows.Thickness.Bottom">
      <summary>Gets or sets the width, in pixels, of the lower side of the bounding rectangle.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness" />. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Object)">
      <summary>Compares this <see cref="T:System.Windows.Thickness" /> structure to another <see cref="T:System.Object" /> for equality.</summary>
      <returns>true if the two objects are equal; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Windows.Thickness)">
      <summary>Compares this <see cref="T:System.Windows.Thickness" /> structure to another <see cref="T:System.Windows.Thickness" /> structure for equality.</summary>
      <returns>true if the two instances of <see cref="T:System.Windows.Thickness" /> are equal; otherwise, false.</returns>
      <param name="thickness">An instance of <see cref="T:System.Windows.Thickness" /> to compare for equality.</param>
    </member>
    <member name="M:System.Windows.Thickness.GetHashCode">
      <summary>Returns the hash code of the structure.</summary>
      <returns>A hash code for this instance of <see cref="T:System.Windows.Thickness" />.</returns>
    </member>
    <member name="P:System.Windows.Thickness.Left">
      <summary>Gets or sets the width, in pixels, of the left side of the bounding rectangle. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness" />. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>Compares the value of two <see cref="T:System.Windows.Thickness" /> structures for equality.</summary>
      <returns>true if the two instances of <see cref="T:System.Windows.Thickness" /> are equal; otherwise, false.</returns>
      <param name="t1">The first structure to compare.</param>
      <param name="t2">The other structure to compare.</param>
    </member>
    <member name="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>Compares two <see cref="T:System.Windows.Thickness" /> structures for inequality. </summary>
      <returns>true if the two instances of <see cref="T:System.Windows.Thickness" /> are not equal; otherwise, false.</returns>
      <param name="t1">The first structure to compare.</param>
      <param name="t2">The other structure to compare.</param>
    </member>
    <member name="P:System.Windows.Thickness.Right">
      <summary>Gets or sets the width, in pixels, of the right side of the bounding rectangle. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness" />. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Thickness.Top">
      <summary>Gets or sets the width, in pixels, of the upper side of the bounding rectangle.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness" />. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.Thickness.ToString">
      <summary>Returns the string representation of the <see cref="T:System.Windows.Thickness" /> structure.</summary>
      <returns>A <see cref="T:System.String" /> that represents the <see cref="T:System.Windows.Thickness" /> value.</returns>
    </member>
    <member name="T:System.Windows.TriggerAction">
      <summary>Serves as the base class for <see cref="T:System.Windows.Media.Animation.BeginStoryboard" />.</summary>
    </member>
    <member name="T:System.Windows.TriggerActionCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> objects.</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TriggerActionCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.TriggerBase">
      <summary>Serves as the base class for <see cref="T:System.Windows.EventTrigger" />.</summary>
    </member>
    <member name="T:System.Windows.TriggerCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.EventTrigger" /> objects. </summary>
    </member>
    <member name="T:System.Windows.UIElement">
      <summary>
        <see cref="T:System.Windows.UIElement" /> is a base class for most of the objects that have visual appearance and can process basic input in Silverlight. </summary>
    </member>
    <member name="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
      <summary>Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element. Specify <paramref name="handledEventsToo" /> as true to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route. </summary>
      <param name="routedEvent">An identifier for the routed event to be handled.</param>
      <param name="handler">A reference to the handler implementation.</param>
      <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. The default is false. Do not routinely ask to rehandle a routed event. For more information, see Remarks.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routedEvent" /> or<paramref name=" handler" /> is null<paramref name="." /></exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="routedEvent" /> does not represent a supported routed event.-or-<paramref name="handler" /> does not implement a supported delegate.</exception>
      <exception cref="T:System.NotImplementedException">Attempted to add handler for an event not supported by the current platform variation.</exception>
    </member>
    <member name="P:System.Windows.UIElement.AllowDrop">
      <summary>Gets or sets a value that determines whether this <see cref="T:System.Windows.UIElement" /> can be a drop target for purposes of Silverlight drag-and-drop operations.</summary>
      <returns>true if this <see cref="T:System.Windows.UIElement" /> can be a drop target for purposes of Silverlight drag-and-drop operations; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.UIElement.AllowDropProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.AllowDrop" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.AllowDrop" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
      <summary>Positions child objects and determines a size for a <see cref="T:System.Windows.UIElement" />. Parent objects that implement custom layout for their child elements should call this method from their layout override implementations to form a recursive layout update.</summary>
      <param name="finalRect">The final size that the parent computes for the child in layout, provided as a <see cref="T:System.Windows.Rect" /> value.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="finalRect" /> contained a <see cref="F:System.Double.NaN" /> or infinite value. See Remarks.</exception>
    </member>
    <member name="P:System.Windows.UIElement.CacheMode">
      <summary>Gets or sets a value that indicates that rendered content should be cached when possible.</summary>
      <returns>A value that indicates that rendered content should be cached when possible. If you specify a value of <see cref="T:System.Windows.Media.CacheMode" />, rendering operations from <see cref="P:System.Windows.UIElement.RenderTransform" /> and <see cref="P:System.Windows.UIElement.Opacity" /> execute on the graphics processing unit (GPU), if available. The default is null, which does not enable a cached composition mode. </returns>
    </member>
    <member name="F:System.Windows.UIElement.CacheModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.CacheMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.CacheMode" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.UIElement.CaptureMouse">
      <summary>Sets mouse capture to a <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>Returns true if the object has mouse capture; otherwise, returns false.</returns>
    </member>
    <member name="P:System.Windows.UIElement.Clip">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Geometry" /> used to define the outline of the contents of a <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The geometry to be used for clipping area sizing. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.UIElement.ClipProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.UIElement.DesiredSize">
      <summary>Gets the size that this <see cref="T:System.Windows.UIElement" /> computed during the measure pass of the layout process. </summary>
      <returns>The size that this <see cref="T:System.Windows.UIElement" /> computed during the measure pass of the layout process.</returns>
    </member>
    <member name="E:System.Windows.UIElement.DragEnter">
      <summary>Occurs when the input system reports an underlying drag event with this element as the target. </summary>
    </member>
    <member name="E:System.Windows.UIElement.DragLeave">
      <summary>Occurs when the input system reports an underlying drag event with this element as the origin. </summary>
    </member>
    <member name="E:System.Windows.UIElement.DragOver">
      <summary>Occurs when the input system reports an underlying drag event with this element as the potential drop target. </summary>
    </member>
    <member name="E:System.Windows.UIElement.Drop">
      <summary>Occurs when the input system reports an underlying drop event with this element as the drop target.</summary>
    </member>
    <member name="P:System.Windows.UIElement.Effect">
      <summary>Gets or sets the pixel shader effect to use for rendering this <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The pixel shader effect to use for rendering this <see cref="T:System.Windows.UIElement" />. The default is null (no effects).</returns>
    </member>
    <member name="F:System.Windows.UIElement.EffectProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.Effect" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.Effect" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.UIElement.GotFocus">
      <summary>Occurs when a <see cref="T:System.Windows.UIElement" /> receives focus.</summary>
    </member>
    <member name="M:System.Windows.UIElement.InvalidateArrange">
      <summary>Invalidates the arrange state (layout) for a <see cref="T:System.Windows.UIElement" />. After the invalidation, the <see cref="T:System.Windows.UIElement" /> will have its layout updated, which will occur asynchronously. </summary>
    </member>
    <member name="M:System.Windows.UIElement.InvalidateMeasure">
      <summary>Invalidates the measurement state (layout) for a <see cref="T:System.Windows.UIElement" />. </summary>
    </member>
    <member name="P:System.Windows.UIElement.IsHitTestVisible">
      <summary>Gets or sets whether the contained area of this <see cref="T:System.Windows.UIElement" /> can return true values for hit testing. </summary>
      <returns>true if the contained area of this <see cref="T:System.Windows.UIElement" /> can be used for hit-testing; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.UIElement.IsHitTestVisibleProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.UIElement.KeyDown">
      <summary>Occurs when a keyboard key is pressed while the <see cref="T:System.Windows.UIElement" /> has focus.</summary>
    </member>
    <member name="F:System.Windows.UIElement.KeyDownEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.UIElement.KeyUp">
      <summary>Occurs when a keyboard key is released while the <see cref="T:System.Windows.UIElement" />  has focus.</summary>
    </member>
    <member name="F:System.Windows.UIElement.KeyUpEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.UIElement.LostFocus">
      <summary>Occurs when a <see cref="T:System.Windows.UIElement" /> loses focus.</summary>
    </member>
    <member name="E:System.Windows.UIElement.LostMouseCapture">
      <summary>Occurs when the <see cref="T:System.Windows.UIElement" /> loses mouse capture.</summary>
    </member>
    <member name="E:System.Windows.UIElement.ManipulationCompleted">
      <summary>Occurs when a manipulation and inertia on the <see cref="T:System.Windows.UIElement" /> is complete.</summary>
    </member>
    <member name="F:System.Windows.UIElement.ManipulationCompletedEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.UIElement.ManipulationDelta">
      <summary>Occurs when the input device changes position during a manipulation.</summary>
    </member>
    <member name="F:System.Windows.UIElement.ManipulationDeltaEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.UIElement.ManipulationStarted">
      <summary>Occurs when an input device begins a manipulation on the <see cref="T:System.Windows.UIElement" />.</summary>
    </member>
    <member name="F:System.Windows.UIElement.ManipulationStartedEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> routed event.</returns>
    </member>
    <member name="M:System.Windows.UIElement.Measure(System.Windows.Size)">
      <summary>Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of a <see cref="T:System.Windows.UIElement" />. Typically, objects that implement custom layout for their layout children call this method from their own <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> implementations to form a recursive layout update.</summary>
      <param name="availableSize">The available space that a parent can allocate a child object. A child object can request a larger space than what is available; the provided size might be accommodated if scrolling or other resize behavior is possible in that particular container.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="availableSize" /> contained a <see cref="F:System.Double.NaN" /> value. See Remarks.</exception>
    </member>
    <member name="E:System.Windows.UIElement.MouseEnter">
      <summary>Occurs when the mouse (or a stylus) enters the bounding area of a <see cref="T:System.Windows.UIElement" />.</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseLeave">
      <summary>Occurs when the mouse (or the stylus) leaves the bounding area of a <see cref="T:System.Windows.UIElement" />.</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseLeftButtonDown">
      <summary>Occurs when the left mouse button is pressed (or when the tip of the stylus touches the tablet) while the mouse pointer is over a <see cref="T:System.Windows.UIElement" />.</summary>
    </member>
    <member name="F:System.Windows.UIElement.MouseLeftButtonDownEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.UIElement.MouseLeftButtonUp">
      <summary>Occurs when the left mouse button is released (or the tip of the stylus is removed from the tablet) while the mouse (or the stylus) is over a <see cref="T:System.Windows.UIElement" /> (or while a <see cref="T:System.Windows.UIElement" /> holds mouse capture).</summary>
    </member>
    <member name="F:System.Windows.UIElement.MouseLeftButtonUpEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.UIElement.MouseMove">
      <summary>Occurs when the coordinate position of the mouse (or stylus) changes while over a <see cref="T:System.Windows.UIElement" /> (or while a <see cref="T:System.Windows.UIElement" /> holds mouse capture).</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseRightButtonDown">
      <summary>Occurs when the right mouse button is pressed while the mouse pointer is over a <see cref="T:System.Windows.UIElement" />.</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseRightButtonUp">
      <summary>Occurs when the right mouse button is released while the mouse pointer is over a <see cref="T:System.Windows.UIElement" />. However, this event will only be raised if a caller marks the preceding <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> event as handled; see Remarks.</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseWheel">
      <summary>Occurs when the user rotates the mouse wheel while the mouse pointer is over a <see cref="T:System.Windows.UIElement" />, or the <see cref="T:System.Windows.UIElement" /> has focus.</summary>
    </member>
    <member name="F:System.Windows.UIElement.MouseWheelEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</returns>
    </member>
    <member name="M:System.Windows.UIElement.OnCreateAutomationPeer">
      <summary>When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Silverlight automation infrastructure.</summary>
      <returns>The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> subclass to return.</returns>
    </member>
    <member name="P:System.Windows.UIElement.Opacity">
      <summary>Gets or sets the degree of the object's opacity.</summary>
      <returns>A value between 0 and 1.0 that declares the opacity factor, with 1.0 meaning full opacity and 0 meaning transparent. The default value is 1.0.</returns>
    </member>
    <member name="P:System.Windows.UIElement.OpacityMask">
      <summary>Gets or sets the brush used to alter the opacity of regions of this object.</summary>
      <returns>A brush that describes the opacity applied to this object. The default is null.</returns>
    </member>
    <member name="F:System.Windows.UIElement.OpacityMaskProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.UIElement.OpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.UIElement.Projection">
      <summary>Gets or sets the perspective projection (3-D effect) to apply when rendering this <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The perspective projection to apply when rendering this <see cref="T:System.Windows.UIElement" />. The default is null (no perspective applied).</returns>
    </member>
    <member name="F:System.Windows.UIElement.ProjectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.Projection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.Projection" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.UIElement.ReleaseMouseCapture">
      <summary>Removes mouse capture from a <see cref="T:System.Windows.UIElement" />. After this call, typically no object holds mouse capture.</summary>
    </member>
    <member name="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
      <summary>Removes the specified routed event handler from this <see cref="T:System.Windows.UIElement" />. </summary>
      <param name="routedEvent">The identifier of the routed event for which the handler is attached.</param>
      <param name="handler">The specific handler implementation to remove from the event handler collection on this <see cref="T:System.Windows.UIElement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routedEvent" /> or<paramref name=" handler" /> is null<paramref name="." /></exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="routedEvent" /> does not represent a supported routed event.-or-<paramref name="handler" /> does not implement a supported delegate.</exception>
      <exception cref="T:System.NotImplementedException">Attempted to remove handler for an event not supported by the current platform variation.</exception>
    </member>
    <member name="P:System.Windows.UIElement.RenderSize">
      <summary>Gets the final render size of a <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The rendered size for this object. There is no default value.</returns>
    </member>
    <member name="P:System.Windows.UIElement.RenderTransform">
      <summary>Gets or sets transform information that affects the rendering position of a <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>Describes the specifics of the desired render transform. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.UIElement.RenderTransformOrigin">
      <summary>Gets or sets the origin point of any possible render transform declared by <see cref="P:System.Windows.UIElement.RenderTransform" />, relative to the bounds of the <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The origin point of the render transform. The default value is a point with value 0,0.</returns>
    </member>
    <member name="F:System.Windows.UIElement.RenderTransformOriginProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.UIElement.RenderTransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.RenderTransform" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.RenderTransform" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.UIElement.TextInput">
      <summary>Occurs when a UI element gets text in a device-independent manner. </summary>
    </member>
    <member name="F:System.Windows.UIElement.TextInputEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.UIElement.TextInputStart">
      <summary>Occurs when a UI element initially gets text in a device-independent manner. </summary>
    </member>
    <member name="F:System.Windows.UIElement.TextInputStartEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.TextInputStart" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.TextInputStart" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.UIElement.TextInputUpdate">
      <summary>Occurs when text continues to be composed via an input method editor (IME).</summary>
    </member>
    <member name="F:System.Windows.UIElement.TextInputUpdateEvent">
      <summary>Identifies the <see cref="E:System.Windows.UIElement.TextInputUpdate" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.UIElement.TextInputUpdate" /> routed event.</returns>
    </member>
    <member name="M:System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)">
      <summary>Returns a transform object that can be used to transform coordinates from the <see cref="T:System.Windows.UIElement" /> to the specified object.</summary>
      <returns>The transform information as an object. Call <see cref="M:System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)" /> on this object to get a practical transform.</returns>
      <param name="visual">The object to compare to the current object for purposes of obtaining the transform.</param>
    </member>
    <member name="M:System.Windows.UIElement.UpdateLayout">
      <summary>Ensures that all positions of child objects of a <see cref="T:System.Windows.UIElement" /> are properly updated for layout. </summary>
    </member>
    <member name="P:System.Windows.UIElement.UseLayoutRounding">
      <summary>Gets or sets a value that determines whether rendering for the object and its visual subtree should use rounding behavior that aligns rendering to whole pixels.</summary>
      <returns>true if rendering and layout should use layout rounding to whole pixels; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.UIElement.UseLayoutRoundingProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.UseLayoutRounding" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.UseLayoutRounding" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.UIElement.Visibility">
      <summary>Gets or sets the visibility of a <see cref="T:System.Windows.UIElement" />. A <see cref="T:System.Windows.UIElement" /> that is not visible does not render and does not communicate its desired size to layout.</summary>
      <returns>A value of the enumeration. The default value is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.UIElement.VisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.UIElement.Visibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.UIElement.Visibility" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.VerticalAlignment">
      <summary>Describes how a child element is vertically positioned or stretched within a parent's layout slot. </summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Top">
      <summary>The element is aligned to the top of the parent's layout slot.</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Center">
      <summary>The element is aligned to the center of the parent's layout slot.</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Bottom">
      <summary>The element is aligned to the bottom of the parent's layout slot. </summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Stretch">
      <summary>The element is stretched to fill the entire layout slot of the parent element.</summary>
    </member>
    <member name="T:System.Windows.Visibility">
      <summary>Specifies the display state of an element. </summary>
    </member>
    <member name="F:System.Windows.Visibility.Visible">
      <summary>Display the element.</summary>
    </member>
    <member name="F:System.Windows.Visibility.Collapsed">
      <summary>Do not display the element, and do not reserve space for it in layout.</summary>
    </member>
    <member name="T:System.Windows.VisualState">
      <summary>Represents the visual appearance of the control when it is in a specific state.</summary>
    </member>
    <member name="M:System.Windows.VisualState.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.VisualState" /> class. </summary>
    </member>
    <member name="P:System.Windows.VisualState.Name">
      <summary>Gets the name of the <see cref="T:System.Windows.VisualState" />.</summary>
      <returns>The name of the <see cref="T:System.Windows.VisualState" />.</returns>
    </member>
    <member name="P:System.Windows.VisualState.Storyboard">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Animation.Storyboard" /> that defines the appearance of the control when it is the state that is represented by the <see cref="T:System.Windows.VisualState" />. </summary>
      <returns>A Storyboard that defines the appearance of the control when it is the state that is represented by the <see cref="T:System.Windows.VisualState" />.</returns>
    </member>
    <member name="T:System.Windows.VisualStateChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> and <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanged" /> events. </summary>
    </member>
    <member name="M:System.Windows.VisualStateChangedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.VisualStateChangedEventArgs" /> class. </summary>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.Control">
      <summary>Gets the <see cref="T:System.Windows.Controls.Control" /> that is transitioning states.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Control" /> that is transitioning states.</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.NewState">
      <summary>Gets the state the <see cref="T:System.Windows.Controls.Control" /> is transitioning to or has transitioned to.</summary>
      <returns>The state the <see cref="T:System.Windows.Controls.Control" /> is transitioning to or has transitioned to.</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.OldState">
      <summary>Gets the state the <see cref="T:System.Windows.Controls.Control" /> is transitioning from or has transitioned from.</summary>
      <returns>The state the <see cref="T:System.Windows.Controls.Control" /> is transitioning from or has transitioned from.</returns>
    </member>
    <member name="T:System.Windows.VisualStateGroup">
      <summary>Contains mutually exclusive <see cref="T:System.Windows.VisualState" /> objects and <see cref="T:System.Windows.VisualTransition" /> objects that are used to go from one state to another.</summary>
    </member>
    <member name="M:System.Windows.VisualStateGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.VisualStateGroup" /> class. </summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.CurrentState">
      <summary>Gets the most recently set <see cref="T:System.Windows.VisualState" /> from a successful call to the <see cref="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)" /> method.</summary>
      <returns>The most recently set <see cref="T:System.Windows.VisualState" /> from a successful call to the <see cref="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)" /> method.</returns>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanged">
      <summary>Occurs after a control transitions into a different state.</summary>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanging">
      <summary>Occurs when a control begins transitioning into a different state.</summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Name">
      <summary>Gets the name of the <see cref="T:System.Windows.VisualStateGroup" />.</summary>
      <returns>The name of the <see cref="T:System.Windows.VisualStateGroup" />.</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.States">
      <summary>Gets the collection of mutually exclusive <see cref="T:System.Windows.VisualState" /> objects.</summary>
      <returns>The collection of mutually exclusive <see cref="T:System.Windows.VisualState" /> objects.</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Transitions">
      <summary>Gets the collection of <see cref="T:System.Windows.VisualTransition" /> objects.</summary>
      <returns>The collection of <see cref="T:System.Windows.VisualTransition" /> objects.</returns>
    </member>
    <member name="T:System.Windows.VisualStateManager">
      <summary>Manages states and the logic for transitioning between states for controls.</summary>
    </member>
    <member name="M:System.Windows.VisualStateManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.VisualStateManager" /> class. </summary>
    </member>
    <member name="P:System.Windows.VisualStateManager.CustomVisualStateManager">
      <summary>Gets or sets the <see cref="T:System.Windows.VisualStateManager" /> that transitions between the states of a control. </summary>
      <returns>The <see cref="T:System.Windows.VisualStateManager" /> that transitions between the states of a control. The default is null.</returns>
    </member>
    <member name="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
      <summary>Identifies the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</summary>
      <returns>The <see cref="T:System.Windows.VisualStateManager" /> that transitions between the states of a control. </returns>
      <param name="obj">The element from which to get the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null.</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
      <summary>Gets the value of the VisualStateManager.VisualStateGroups attached property.</summary>
      <returns>The collection of <see cref="T:System.Windows.VisualStateGroup" /> objects that is associated with the specified object.</returns>
      <param name="obj">The element from which to get the VisualStateManager.VisualStateGroups.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null.</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)">
      <summary>Transitions the control between two states.</summary>
      <returns>true if the control successfully transitioned to the new state; otherwise, false.</returns>
      <param name="control">The control to transition between states. </param>
      <param name="stateName">The state to transition to.</param>
      <param name="useTransitions">true to use a <see cref="T:System.Windows.VisualTransition" /> to transition between states; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateName" /> is null.</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
      <summary>Transitions a control between states.</summary>
      <returns>true if the control successfully transitioned to the new state; otherwise, false.</returns>
      <param name="control">The control to transition between states. </param>
      <param name="templateRoot">The root element of the control's <see cref="T:System.Windows.Controls.ControlTemplate" />.</param>
      <param name="stateName">The name of the state to transition to.</param>
      <param name="group">The <see cref="T:System.Windows.VisualStateGroup" /> that the state belongs to.</param>
      <param name="state">The representation of the state to transition to.</param>
      <param name="useTransitions">true to use a <see cref="T:System.Windows.VisualTransition" /> to transition between states; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)">
      <summary>Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanged" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" />.</summary>
      <param name="stateGroup">The object on which the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event</param>
      <param name="oldState">The state that the control transitioned from.</param>
      <param name="newState">The state that the control transitioned to.</param>
      <param name="control">The control that transitioned states.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroup" /> is null.-or-<paramref name="newState" /> is null.-or-<paramref name="control" /> is null.</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)">
      <summary>Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" />.</summary>
      <param name="stateGroup">The object on which the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event</param>
      <param name="oldState">The state that the control is transitioning from.</param>
      <param name="newState">The state that the control is transitioning to.</param>
      <param name="control">The control that is transitioning states.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroup" /> is null.-or-<paramref name="newState" /> is null.-or-<paramref name="control" /> is null.</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
      <summary>Sets the value of the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</summary>
      <param name="obj">The object on which to set the property.</param>
      <param name="value">The <see cref="T:System.Windows.VisualStateManager" /> that transitions between the states of a control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null.</exception>
    </member>
    <member name="T:System.Windows.VisualTransition">
      <summary>Represents the visual behavior that occurs when the control transitions from one state to another.</summary>
    </member>
    <member name="M:System.Windows.VisualTransition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.VisualTransition" /> class. </summary>
    </member>
    <member name="P:System.Windows.VisualTransition.From">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.VisualState" /> to transition from.</summary>
      <returns>The name of the <see cref="T:System.Windows.VisualState" /> to transition from.</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedDuration">
      <summary>Gets or sets the amount of time it takes to move from one state to another.</summary>
      <returns>The amount of time it takes to move from one state to another.</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedEasingFunction">
      <summary>Gets or sets the easing function applied to the generated animations.</summary>
      <returns>An <see cref="T:System.Windows.Media.Animation.IEasingFunction" /> that is applied to the generated animations.</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.Storyboard">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Storyboard" /> that occurs when the transition occurs.</summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Storyboard" /> that occurs when the transition occurs.</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.To">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.VisualState" /> to transition to.</summary>
      <returns>The name of the <see cref="T:System.Windows.VisualState" /> to transition to.</returns>
    </member>
    <member name="T:System.Windows.Window">
      <summary>Represents an out-of-browser application window.</summary>
    </member>
    <member name="M:System.Windows.Window.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Window" /> class. </summary>
    </member>
    <member name="M:System.Windows.Window.Activate">
      <summary>Attempts to activate the application window by bringing it to the foreground and setting the input focus to it. </summary>
      <returns>true if the window was successfully activated; otherwise, false.</returns>
      <exception cref="T:System.NotSupportedException">The application is not running outside the browser. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
    </member>
    <member name="M:System.Windows.Window.Close">
      <summary>Closes the application window unless the <see cref="E:System.Windows.Window.Closing" /> event is canceled. </summary>
      <exception cref="T:System.NotSupportedException">The application is not running outside the browser. </exception>
      <exception cref="T:System.Security.SecurityException">When calling this method, except in response to a user-initiated action, the <see cref="E:System.Windows.Application.Startup" /> event has already occurred and <see cref="P:System.Windows.Application.HasElevatedPermissions" /> is false.</exception>
    </member>
    <member name="E:System.Windows.Window.Closing">
      <summary>Occurs when the window is about to close.</summary>
      <exception cref="T:System.NotSupportedException">When adding or removing an event handler, the application is not running outside the browser. </exception>
    </member>
    <member name="M:System.Windows.Window.DragMove">
      <summary>In trusted applications, begins a mouse drag operation to move the window. </summary>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Windows.Application.HasElevatedPermissions" /> is false.</exception>
    </member>
    <member name="M:System.Windows.Window.DragResize(System.Windows.WindowResizeEdge)">
      <summary>In trusted applications, begins a mouse drag operation to move the specified window edge or corner.</summary>
      <param name="resizeEdge">The edge or corner that the user is dragging.</param>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Windows.Application.HasElevatedPermissions" /> is false.</exception>
    </member>
    <member name="P:System.Windows.Window.Height">
      <summary>Gets or sets the height of the application window in pixels. </summary>
      <returns>The height of the application window in pixels. The default is the <see cref="P:System.Windows.WindowSettings.Height" /> setting in the application manifest.</returns>
      <exception cref="T:System.NotSupportedException">The application is not running outside the browser. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
      <exception cref="T:System.Security.SecurityException">When setting this property, except in response to a user-initiated action, the <see cref="E:System.Windows.Application.Startup" /> event has already occurred and <see cref="P:System.Windows.Application.HasElevatedPermissions" /> is false.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property is greater than the available screen height.</exception>
    </member>
    <member name="P:System.Windows.Window.IsActive">
      <summary>Gets a value that indicates whether the window is active.</summary>
      <returns>true if the window is active; otherwise, false.</returns>
      <exception cref="T:System.NotSupportedException">The application is not running outside the browser. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
    </member>
    <member name="P:System.Windows.Window.Left">
      <summary>Gets or sets the position of the left edge of the application window; see Remarks for restrictions on setting this property at run time.</summary>
      <returns>The position of the left edge of the application window. The default is the <see cref="P:System.Windows.WindowSettings.Left" /> setting in the application manifest.</returns>
      <exception cref="T:System.NotSupportedException">The application is not running outside the browser. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
    </member>
    <member name="P:System.Windows.Window.Top">
      <summary>Gets or sets the position of the top edge of the application window; see Remarks for restrictions on setting this property at run time.</summary>
      <returns>The position of the top edge of the application window. The default is the <see cref="P:System.Windows.WindowSettings.Top" /> setting in the application manifest.</returns>
      <exception cref="T:System.NotSupportedException">The application is not running outside the browser. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
    </member>
    <member name="P:System.Windows.Window.TopMost">
      <summary>Gets or sets a value that indicates whether the application window is always displayed in front of other windows.</summary>
      <returns>true if the application window is topmost; otherwise, false. The default is false.</returns>
      <exception cref="T:System.NotSupportedException">The application is not running outside the browser. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
      <exception cref="T:System.Security.SecurityException">When setting this property, except in response to a user-initiated action, the <see cref="E:System.Windows.Application.Startup" /> event has already occurred and <see cref="P:System.Windows.Application.HasElevatedPermissions" /> is false.</exception>
    </member>
    <member name="P:System.Windows.Window.Width">
      <summary>Gets or sets the width of the application window in pixels. </summary>
      <returns>The width of the application window in pixels. The default is the <see cref="P:System.Windows.WindowSettings.Width" /> setting in the application manifest.</returns>
      <exception cref="T:System.NotSupportedException">The application is not running outside the browser. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
      <exception cref="T:System.Security.SecurityException">When setting this property, except in response to a user-initiated action, the <see cref="E:System.Windows.Application.Startup" /> event has already occurred and <see cref="P:System.Windows.Application.HasElevatedPermissions" /> is false.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property is greater than the available screen width.</exception>
    </member>
    <member name="P:System.Windows.Window.WindowState">
      <summary>Gets or sets a value that indicates whether the window is maximized, minimized, or in the normal state.</summary>
      <returns>A value that indicates the current state of the window. The default is <see cref="F:System.Windows.WindowState.Normal" />.</returns>
      <exception cref="T:System.NotSupportedException">The application is not running outside the browser. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current thread is not the UI thread.</exception>
      <exception cref="T:System.Security.SecurityException">When setting this property, except in response to a user-initiated action, the <see cref="E:System.Windows.Application.Startup" /> event has already occurred and <see cref="P:System.Windows.Application.HasElevatedPermissions" /> is false.</exception>
    </member>
    <member name="T:System.Windows.WindowResizeEdge">
      <summary>Defines constants that represent the edges and corners of a Silverlight out-of-browser application window.</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.Left">
      <summary>The left edge of the window.</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.Right">
      <summary>The right edge of the window.</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.Top">
      <summary>The upper edge of the window.</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.TopLeft">
      <summary>The upper-left corner of the window.</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.TopRight">
      <summary>The upper-right corner of the window.</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.Bottom">
      <summary>The lower edge of the window.</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.BottomLeft">
      <summary>The lower-left corner of the window.</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.BottomRight">
      <summary>The lower-right corner of the window.</summary>
    </member>
    <member name="T:System.Windows.WindowSettings">
      <summary>Represents information about an out-of-browser application window.</summary>
    </member>
    <member name="M:System.Windows.WindowSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.WindowSettings" /> class. </summary>
    </member>
    <member name="P:System.Windows.WindowSettings.Height">
      <summary>Gets the initial window height of the application.</summary>
      <returns>The initial window height of the application.</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.HeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.WindowSettings.Height" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.WindowSettings.Height" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.Left">
      <summary>Gets the initial position of the left edge of the out-of-browser application window when <see cref="P:System.Windows.WindowSettings.WindowStartupLocation" /> is <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</summary>
      <returns>The initial position of the left edge of the application window.</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.LeftProperty">
      <summary>Identifies the <see cref="P:System.Windows.WindowSettings.Left" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.WindowSettings.Left" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.Title">
      <summary>Gets the full title of the out-of-browser application for display in the title bar of the application window.</summary>
      <returns>The full title of the application.</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.TitleProperty">
      <summary>Identifies the <see cref="P:System.Windows.WindowSettings.Title" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.WindowSettings.Title" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.Top">
      <summary>Gets the initial position of the top edge of the out-of-browser application window when <see cref="P:System.Windows.WindowSettings.WindowStartupLocation" /> is <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</summary>
      <returns>The initial position of the top edge of the application window.</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.TopProperty">
      <summary>Identifies the <see cref="P:System.Windows.WindowSettings.Top" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.WindowSettings.Top" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.Width">
      <summary>Gets the initial window width of the application.</summary>
      <returns>The initial window width of the application.</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.WindowSettings.Width" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.WindowSettings.Width" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.WindowStartupLocation">
      <summary>Gets a value that indicates how the out-of-browser application window is positioned at startup. </summary>
      <returns>A value that indicates how the application window is positioned at startup.</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.WindowStartupLocationProperty">
      <summary>Identifies the <see cref="P:System.Windows.WindowSettings.WindowStartupLocation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.WindowSettings.WindowStartupLocation" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.WindowStyle">
      <summary>Gets a value that indicates the appearance of the title bar and border for the out-of-browser application window.</summary>
      <returns>A value that indicates how the title bar and border should appear. </returns>
    </member>
    <member name="F:System.Windows.WindowSettings.WindowStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.WindowSettings.WindowStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.WindowSettings.WindowStyle" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.WindowStartupLocation">
      <summary>Defines constants that indicate how an out-of-browser application window is positioned at startup.</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.CenterScreen">
      <summary>The application window is centered in the screen, and the <see cref="P:System.Windows.WindowSettings.Top" /> and <see cref="P:System.Windows.WindowSettings.Left" /> settings are ignored. </summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.Manual">
      <summary>The application window is positioned according to the <see cref="P:System.Windows.WindowSettings.Top" /> and <see cref="P:System.Windows.WindowSettings.Left" /> settings.</summary>
    </member>
    <member name="T:System.Windows.WindowState">
      <summary>Defines constants that indicate the state of an out-of-browser application window.</summary>
    </member>
    <member name="F:System.Windows.WindowState.Normal">
      <summary>The application window is in its normal state, occupying screen space based on its <see cref="P:System.Windows.Window.Height" /> and <see cref="P:System.Windows.Window.Width" /> values.</summary>
    </member>
    <member name="F:System.Windows.WindowState.Minimized">
      <summary>The application window is minimized to the taskbar.</summary>
    </member>
    <member name="F:System.Windows.WindowState.Maximized">
      <summary>The application window is maximized to occupy the entire client area of the screen.</summary>
    </member>
    <member name="T:System.Windows.WindowStyle">
      <summary>Defines constants that indicate the appearance of the title bar and border of an out-of-browser application window.</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.SingleBorderWindow">
      <summary>The window displays a title bar and border. </summary>
    </member>
    <member name="F:System.Windows.WindowStyle.None">
      <summary>The window does not display a title bar or border. </summary>
    </member>
    <member name="F:System.Windows.WindowStyle.BorderlessRoundCornersWindow">
      <summary>The window does not display a title bar or border, and the window corners are rounded.</summary>
    </member>
    <member name="T:System.Windows.Automation.AutomationElementIdentifiers">
      <summary>Contains values used as automation property identifiers by UI automation providers and UI automation clients.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.AcceleratorKeyProperty">
      <summary>Identifies the accelerator key automation property. The accelerator key property value is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.AccessKeyProperty">
      <summary>Identifies the access key automation property. The access key property value is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.AutomationIdProperty">
      <summary>Identifies the automation element identifier  automation property. The automation element identifier value is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.BoundingRectangleProperty">
      <summary>Identifies the bounding rectangle automation property. The bounding rectangle property value is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ClassNameProperty">
      <summary>Identifies the class name automation property. The class name property value is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> method. </summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ClickablePointProperty">
      <summary>Identifies the clickable point automation property. A valid clickable point property value is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ControlTypeProperty">
      <summary>Identifies the control type  automation property. The control type property value is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> method. </summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.HasKeyboardFocusProperty">
      <summary>Identifies the keyboard focus automation property. The keyboard focus state is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.HelpTextProperty">
      <summary>Identifies the help text automation property. The help text property value is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsContentElementProperty">
      <summary>Identifies the content element determination automation property. The content element status indicates whether the element contains content that is valuable to the end user. The current status is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsControlElementProperty">
      <summary>Identifies the control element determination automation property. The control element status indicates whether the element contains user interface components that can be manipulated. The current status is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsEnabledProperty">
      <summary>Identifies the enabled determination automation property. The enabled status indicates whether the item referenced by the automation peer is enabled. The current status is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsKeyboardFocusableProperty">
      <summary>Identifies the keyboard-focusable determination automation property. The keyboard focusable status is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsOffscreenProperty">
      <summary>Identifies the offscreen determination automation property. The offscreen status indicates whether the item referenced by the automation peer is off the screen. The current status is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /> method. </summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsPasswordProperty">
      <summary>Identifies the password determination automation property. The password status indicates whether the item referenced by the automation peer contains a password. The current status is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsRequiredForFormProperty">
      <summary>Identifies the form requirement determination automation property. The form requirement status indicates whether the element must be completed on a form. The current status is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ItemStatusProperty">
      <summary>Identifies the item status automation property. The current item status is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ItemTypeProperty">
      <summary>Identifies the item type automation property. The item type value is returned by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.LabeledByProperty">
      <summary>Identifies the labeled-by peer automation property. The current label peer is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.LocalizedControlTypeProperty">
      <summary>Identifies the localized control type automation property. The current localized control type is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.NameProperty">
      <summary>Identifies the element name automation property. The current name is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.OrientationProperty">
      <summary>Identifies the orientation automation property. The current orientation value is returned by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationProperties">
      <summary>Provides support for getting or setting the value of instance-level values of automation properties. These property values are set as attached properties (typically in XAML) and supplement or override automation property values from a control's <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />. </summary>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.AcceleratorKey">
      <summary>Gets or sets the accelerator key string for the element.</summary>
      <returns>The accelerator key string for the element.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.AcceleratorKeyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.AccessKey">
      <summary>Gets or sets the access key for the element.</summary>
      <returns>The access key for the element.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.AccessKeyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.AutomationId">
      <summary>Gets or set the string that uniquely identifies the element to UI automation.</summary>
      <returns>The string that uniquely identifies the element to UI automation.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.AutomationIdProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The accelerator key, as a string.</returns>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> to check.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetAccessKey(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The access key, as a string.</returns>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> to check.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetAutomationId(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The UI Automation identifier for the specified element.</returns>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> to check.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetHelpText(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.HelpText" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The help text for the specified element.</returns>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> to check.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>true if the specified element is required for completion of a form; otherwise, false.</returns>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> to check.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetItemStatus(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The item status of the element.</returns>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> to check.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetItemType(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.ItemType" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The item type of the element.</returns>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> to check.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetLabeledBy(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The element that is targeted by the label. </returns>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> to check.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetName(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The name of the specified element.</returns>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> to check.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.HelpText">
      <summary>Gets or sets the help text for the element.</summary>
      <returns>The help text for the specified element.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.HelpTextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationProperties.HelpText" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Automation.AutomationProperties.HelpText" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm">
      <summary>Gets or sets a value that indicates whether the element is required to be filled out on a form.</summary>
      <returns>true if the element is required to be filled out on a form; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.IsRequiredForFormProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.ItemStatus">
      <summary>Gets or sets a description of the status of an item in an element.</summary>
      <returns>The status of an item in an element.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.ItemStatusProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.ItemType">
      <summary>Gets or sets a description of the type of the specified element.</summary>
      <returns>The description of the type of the specified element.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.ItemTypeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationProperties.ItemType" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Automation.AutomationProperties.ItemType" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.LabeledBy">
      <summary>Gets or sets the element that contains the text label for the element.</summary>
      <returns>The element that contains the text label for the element.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.LabeledByProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.Name">
      <summary>Gets or sets the automation name of the element.</summary>
      <returns>The name of the element.</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.NameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> attached property. </returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetAcceleratorKey(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> for which to set the property.</param>
      <param name="value">The accelerator key value to set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetAccessKey(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> for which to set the property.</param>
      <param name="value">The access key value to set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetAutomationId(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> for which to set the property.</param>
      <param name="value">The UI automation identifier value to set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetHelpText(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.HelpText" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> for which to set the property.</param>
      <param name="value">The help text.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetIsRequiredForForm(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> for which to set the property.</param>
      <param name="value">true to specify that the element is required to be filled out on a form; otherwise, false.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetItemStatus(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> for which to set the property.</param>
      <param name="value">The item status.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetItemType(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.ItemType" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> for which to set the property.</param>
      <param name="value">The item type.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetLabeledBy(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>Sets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> for which to set the property.</param>
      <param name="value">The UI element that represents the label for <paramref name="element" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetName(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> for which to set the property.</param>
      <param name="value">The object name.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Automation.AutomationProperty">
      <summary>Identifies a property of <see cref="T:System.Windows.Automation.AutomationElementIdentifiers" />. </summary>
    </member>
    <member name="T:System.Windows.Automation.AutomationTextAttribute">
      <summary>Identifies UI Automation text attributes.</summary>
    </member>
    <member name="T:System.Windows.Automation.DockPatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.IDockProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPatternIdentifiers.DockPositionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IDockProvider.DockPosition" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.DockPosition">
      <summary>Contains values that specify the dock position of an object within a docking container.</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Top">
      <summary>Indicates that the UI automation element is docked along the top edge of the docking container. </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Left">
      <summary>Indicates that the UI automation element is docked along the left edge of the docking container. </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Bottom">
      <summary>Indicates that the UI automation element is docked along the bottom edge of the docking container. </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Right">
      <summary>Indicates that the UI automation element is docked along the right edge of the docking container. </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Fill">
      <summary>Indicates that the UI automation element is docked along all edges of the docking container and fills all available space within the container. </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.None">
      <summary>Indicates that the UI automation element is not docked to any edge of the docking container</summary>
    </member>
    <member name="T:System.Windows.Automation.ElementNotAvailableException">
      <summary>The exception that is thrown when an attempt is made to access a UI automation element corresponding to a part of the user interface that is no longer available.</summary>
    </member>
    <member name="M:System.Windows.Automation.ElementNotAvailableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.ElementNotAvailableException" /> class. </summary>
    </member>
    <member name="T:System.Windows.Automation.ElementNotEnabledException">
      <summary>The exception that is thrown when an attempt is made through UI automation to manipulate a control that is not enabled. </summary>
    </member>
    <member name="M:System.Windows.Automation.ElementNotEnabledException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.ElementNotEnabledException" /> class. </summary>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapsePatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.IExpandCollapseProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapsePatternIdentifiers.ExpandCollapseStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapseState">
      <summary>Contains values that specify the <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" /> automation property value of a UI automation element.</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.Collapsed">
      <summary>No child nodes, controls, or content of the UI automation element are displayed.</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.Expanded">
      <summary>All child nodes, controls or content of the UI automation element are displayed.</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.PartiallyExpanded">
      <summary>Some, but not all, child nodes, controls, or content of the UI automation element are displayed. </summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.LeafNode">
      <summary>The UI automation element has no child nodes, controls, or content to display.</summary>
    </member>
    <member name="T:System.Windows.Automation.GridItemPatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" /> pattern.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.ColumnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Column" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.ColumnSpanProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.ContainingGridProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.RowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Row" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.RowSpanProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan" /> property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.GridPatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> pattern.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridPatternIdentifiers.ColumnCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.GridPatternIdentifiers.RowCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IGridProvider.RowCount" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.MultipleViewPatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.IMultipleViewProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPatternIdentifiers.CurrentViewProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPatternIdentifiers.SupportedViewsProperty">
      <summary>Identifies the automation property that gets the control-specific collection of views.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.RangeValuePatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.IRangeValueProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.LargeChangeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.MaximumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.MinimumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.SmallChangeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.RowOrColumnMajor">
      <summary>Specifies whether data in a table should be read primarily by row or by column.</summary>
    </member>
    <member name="F:System.Windows.Automation.RowOrColumnMajor.RowMajor">
      <summary>Data in the table should be read row by row. </summary>
    </member>
    <member name="F:System.Windows.Automation.RowOrColumnMajor.ColumnMajor">
      <summary>Data in the table should be read column by column. </summary>
    </member>
    <member name="F:System.Windows.Automation.RowOrColumnMajor.Indeterminate">
      <summary>The best way to present the data is indeterminate.</summary>
    </member>
    <member name="T:System.Windows.Automation.ScrollAmount">
      <summary>Contains values that are used by the <see cref="T:System.Windows.Automation.Provider.IScrollProvider" /> pattern to indicate the direction and distance to scroll.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.LargeDecrement">
      <summary>Specifies that scrolling is performed in large decrements, which is equivalent to pressing the PAGE UP key or to clicking a blank part of a scrollbar. If the distance represented by the PAGE UP key is not a relevant amount for the control, or if no scrollbar exists, the value represents an amount equal to the size of the currently visible window.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.SmallDecrement">
      <summary>Specifies that scrolling is performed in small decrements, which is equivalent to pressing an arrow key or to clicking the arrow button on a scrollbar. </summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.NoAmount">
      <summary>Specifies that scrolling should not be performed.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.LargeIncrement">
      <summary>Specifies that scrolling is performed in large increments, which is equivalent to pressing the PAGE DOWN key or to clicking a blank part of a scrollbar. If the distance represented by the PAGE DOWN key is not a relevant amount for the control, or if no scrollbar exists, the value represents an amount equal to the size of the currently visible region.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.SmallIncrement">
      <summary>Specifies that scrolling is performed in small increments, which equivalent to pressing an arrow key or to clicking the arrow button on a scrollbar. </summary>
    </member>
    <member name="T:System.Windows.Automation.ScrollPatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.IScrollProvider" /> pattern, as well as the <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> constant.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.HorizontallyScrollableProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.HorizontalScrollPercentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.HorizontalViewSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll">
      <summary>Specifies that scrolling should not be performed.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.VerticallyScrollableProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.VerticalScrollPercentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.VerticalViewSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionItemPatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPatternIdentifiers.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPatternIdentifiers.SelectionContainerProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionPatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPatternIdentifiers.CanSelectMultipleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionPatternIdentifiers.IsSelectionRequiredProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionPatternIdentifiers.SelectionProperty">
      <summary>Identifies the property that gets the selected items in a container.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.SupportedTextSelection">
      <summary>Contains values that specify whether a text provider supports selection and, if so, whether it supports a single, continuous selection or multiple, disjoint selections.</summary>
    </member>
    <member name="F:System.Windows.Automation.SupportedTextSelection.None">
      <summary>Does not support text selections.</summary>
    </member>
    <member name="F:System.Windows.Automation.SupportedTextSelection.Single">
      <summary>Supports a single, continuous text selection.</summary>
    </member>
    <member name="F:System.Windows.Automation.SupportedTextSelection.Multiple">
      <summary>Supports multiple, disjoint text selections.</summary>
    </member>
    <member name="T:System.Windows.Automation.TableItemPatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.ITableProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.TableItemPatternIdentifiers.ColumnHeaderItemsProperty">
      <summary>Identifies the automation property that retrieves all the column headers associated with a table item or cell.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.TableItemPatternIdentifiers.RowHeaderItemsProperty">
      <summary>Identifies the automation property that retrieves all the row headers associated with a table item or cell.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.TablePatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.ITableProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.TablePatternIdentifiers.ColumnHeadersProperty">
      <summary>Identifies the automation property that is accessed by the  <see cref="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.TablePatternIdentifiers.RowHeadersProperty">
      <summary>Identifies the automation property that is accessed by the <see cref="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders" /> method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.TablePatternIdentifiers.RowOrColumnMajorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.TextPatternIdentifiers">
      <summary>Contains values that are used as identifiers for the <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> class.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.AnimationStyleAttribute">
      <summary>Identifies the AnimationStyle attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.BackgroundColorAttribute">
      <summary>Identifies the BackgroundColor attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.BulletStyleAttribute">
      <summary>Identifies the <see cref="T:System.Windows.Automation.Text.BulletStyle" /> attribute of a text range. </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.CapStyleAttribute">
      <summary>Identifies the CapStyle attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.CultureAttribute">
      <summary>Identifies the Culture (<see cref="T:System.Globalization.CultureInfo" />) attribute of a text range. Includes the sub-language level; for example, specifies French–Switzerland (fr-CH) instead of merely French (fr). </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.FontNameAttribute">
      <summary>Identifies the FontName attribute of a text range. </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.FontSizeAttribute">
      <summary>Identifies the FontSize attribute of a text range. </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.FontWeightAttribute">
      <summary>Identifies the FontWeight attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.ForegroundColorAttribute">
      <summary>Identifies the ForegroundColor attribute of a text range. </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.HorizontalTextAlignmentAttribute">
      <summary>Identifies the HorizontalTextAlignment attribute of a text range. </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IndentationFirstLineAttribute">
      <summary>Identifies the IndentationFirstLine attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IndentationLeadingAttribute">
      <summary>Identifies the IndentationLeadingattribute of a text range. </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IndentationTrailingAttribute">
      <summary>Identifies the IndentationTrailingattribute of a text range. </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsHiddenAttribute">
      <summary>Identifies the IsHidden attribute of a text range. </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsItalicAttribute">
      <summary>Identifies the IsItalic attribute of a text range. </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsReadOnlyAttribute">
      <summary>Identifies the IsReadOnly attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsSubscriptAttribute">
      <summary>Identifies the IsSubscript attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsSuperscriptAttribute">
      <summary>Identifies the IsSuperscript attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginBottomAttribute">
      <summary>Identifies the MarginBottom attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginLeadingAttribute">
      <summary>Identifies the MarginLeading attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginTopAttribute">
      <summary>Identifies the MarginTop attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginTrailingAttribute">
      <summary>Identifies the MarginTrailing attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.OutlineStylesAttribute">
      <summary>Identifies the OutlineStyles attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.OverlineColorAttribute">
      <summary>Identifies the OverlineColor attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.OverlineStyleAttribute">
      <summary>Identifies the OverlineStyle attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.StrikethroughColorAttribute">
      <summary>Identifies the StrikethroughColor attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.StrikethroughStyleAttribute">
      <summary>Identifies the StrikethroughStyle attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.TabsAttribute">
      <summary>Identifies the Tabs attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.TextFlowDirectionsAttribute">
      <summary>Identifies the TextFlowDirections attribute of a text range.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.UnderlineColorAttribute">
      <summary>Identifies the UnderlineColor attribute of a text range. </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.UnderlineStyleAttribute">
      <summary>Identifies the UnderlineStyle attribute of a text range. </summary>
    </member>
    <member name="T:System.Windows.Automation.TogglePatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.IToggleProvider" /> pattern.</summary>
    </member>
    <member name="F:System.Windows.Automation.TogglePatternIdentifiers.ToggleStateProperty">
      <summary>Identifies the <see cref="T:System.Windows.Automation.ToggleState" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.ToggleState">
      <summary>Contains values that specify the <see cref="T:System.Windows.Automation.ToggleState" /> of a UI automation element</summary>
    </member>
    <member name="F:System.Windows.Automation.ToggleState.Off">
      <summary>The UI automation element is not selected, checked, marked, or otherwise activated.</summary>
    </member>
    <member name="F:System.Windows.Automation.ToggleState.On">
      <summary>The UI automation element  is selected, checked, marked, or otherwise activated.</summary>
    </member>
    <member name="F:System.Windows.Automation.ToggleState.Indeterminate">
      <summary>The UI automation element is in an indeterminate state.</summary>
    </member>
    <member name="T:System.Windows.Automation.TransformPatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.ITransformProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPatternIdentifiers.CanMoveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.TransformPatternIdentifiers.CanResizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.TransformPatternIdentifiers.CanRotateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.ValuePatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.IValueProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePatternIdentifiers.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" /> property.</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePatternIdentifiers.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.WindowInteractionState">
      <summary>Defines values that specify the current state of the window for purposes of user or programmatic interaction.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.Running">
      <summary>The window is running. This does not guarantee that the window is responding or ready for user interaction.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.Closing">
      <summary>The window is closing. </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.ReadyForUserInteraction">
      <summary>The window is ready for user interaction.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.BlockedByModalWindow">
      <summary>The window is blocked by a modal window. </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.NotResponding">
      <summary>The window is not responding. </summary>
    </member>
    <member name="T:System.Windows.Automation.WindowPatternIdentifiers">
      <summary>Contains values used as automation property identifiers specifically for properties of the <see cref="T:System.Windows.Automation.Provider.IWindowProvider" /> pattern. </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.CanMaximizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.CanMinimizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.IsModalProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IWindowProvider.IsModal" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.IsTopmostProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.WindowInteractionStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.WindowVisualStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Automation.Provider.IWindowProvider.VisualState" /> automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:System.Windows.Automation.WindowVisualState">
      <summary>Contains values that specify the visual state of a window for the <see cref="T:System.Windows.Automation.Provider.IWindowProvider" /> pattern.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowVisualState.Normal">
      <summary>Specifies that the window is normal (restored). </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowVisualState.Maximized">
      <summary>Specifies that the window is maximized. </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowVisualState.Minimized">
      <summary>Specifies that the window is minimized.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationControlType">
      <summary>Specifies the control type that is exposed to the UI automation client.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Button">
      <summary>A button control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Calendar">
      <summary>A calendar control, such as a date picker.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.CheckBox">
      <summary>A check box control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ComboBox">
      <summary>A combo box control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Edit">
      <summary>An edit control, such as a text box.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Hyperlink">
      <summary>A hyperlink control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Image">
      <summary>An image control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ListItem">
      <summary>A list item control, which is a child item of a list control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.List">
      <summary>A list control, such as a list box.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Menu">
      <summary>A menu control, such as a top-level menu in an application window.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.MenuBar">
      <summary>A menu bar control, which generally contains a set of top-level menus.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.MenuItem">
      <summary>A menu item control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar">
      <summary>A progress bar control, which visually indicates the progress of a lengthy operation.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.RadioButton">
      <summary>A radio button control, which is a selection mechanism allowing exactly one selected item in a group.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ScrollBar">
      <summary>A scroll bar control, such as a scroll bar in an application window.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Slider">
      <summary>A slider control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Spinner">
      <summary>A spinner control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.StatusBar">
      <summary>A status bar control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Tab">
      <summary>A tab control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.TabItem">
      <summary>A tab item control, which represents a page of a tab control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Text">
      <summary>An edit control, such as a text box or rich text box.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ToolBar">
      <summary>A toolbar, such as the control that contains a set of command buttons in an application window.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ToolTip">
      <summary>A tooltip control, an informational window that appears as a result of moving the pointer over a control or sometimes when tabbing to a control using the keyboard.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Tree">
      <summary>A tree control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem">
      <summary>A node in a tree control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Custom">
      <summary>A control that is not one of the defined control types.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Group">
      <summary>A group control, which acts as a container for other controls.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Thumb">
      <summary>The control in a scrollbar that can be dragged to a different position.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.DataGrid">
      <summary>A data grid control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.DataItem">
      <summary>A data item control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Document">
      <summary>A document control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.SplitButton">
      <summary>A split button, which is a button that performs a default action and can also expand to a list of other possible actions.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Window">
      <summary>A window frame, which contains child objects.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Pane">
      <summary>A pane control.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Header">
      <summary>A header control, which is a container for the labels of rows and columns of information.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem">
      <summary>A header item, which is the label for a row or column of information.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Table">
      <summary>A table.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.TitleBar">
      <summary>The caption bar on a window.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Separator">
      <summary>A separator, which creates a visual division in controls such as menus and toolbars.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationEvents">
      <summary>Specifies the event that is raised by the element through the associated <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.ToolTipOpened">
      <summary>The event that is raised when a tooltip is opened.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.ToolTipClosed">
      <summary>The event that is raised when a tooltip is closed.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.MenuOpened">
      <summary>The event that is raised when a menu is opened. .</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.MenuClosed">
      <summary>The event that is raised when a menu is closed. </summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.AutomationFocusChanged">
      <summary>The event that is raised when the focus has changed. See <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.InvokePatternOnInvoked">
      <summary>The event that is raised when a control is activated. See <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementAddedToSelection">
      <summary>The event that is raised when an item is added to a collection of selected items. See <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementRemovedFromSelection">
      <summary>The event that is raised when an item is removed from a collection of selected items. See <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementSelected">
      <summary>The event that is raised when a single item is selected (which clears any previous selection). See <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionPatternOnInvalidated">
      <summary>The event that is raised when a selection in a container has changed significantly.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.TextPatternOnTextSelectionChanged">
      <summary>The event that is raised when the text selection is modified. Note that Silverlight 2 does not specifically expose a TextPattern, and <see cref="T:System.Windows.Controls.TextBox" /> uses <see cref="T:System.Windows.Automation.Provider.IValueProvider" /> instead.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.TextPatternOnTextChanged">
      <summary>The event that is raised when textual content is modified. Note that Silverlight 2 does not specifically expose a TextPattern, and <see cref="T:System.Windows.Controls.TextBox" /> uses <see cref="T:System.Windows.Automation.Provider.IValueProvider" /> instead.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.AsyncContentLoaded">
      <summary>The event that is raised when content is loaded asynchronously.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.PropertyChanged">
      <summary>The event that is raised when a property has changed.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.StructureChanged">
      <summary>The event that is raised when the UI Automation tree structure is changed.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationOrientation">
      <summary>Specifies the orientation direction in which a control can be presented. </summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationOrientation.None">
      <summary>The control does not have an orientation. </summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationOrientation.Horizontal">
      <summary>The control is presented horizontally.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationOrientation.Vertical">
      <summary>The control is presented horizontally.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationPeer">
      <summary>Provides a base class that exposes an automation peer for an associated class to UI automation. </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.#ctor">
      <summary>Provides initialization for base class values when they are called by the constructor of a derived class.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource">
      <summary>Gets or sets an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> that is reported to the automation client as a source for all the events that come from this <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> that is the source of events.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey">
      <summary>Gets the accelerator key combinations for the object that is associated with the UI automation peer. </summary>
      <returns>The accelerator key.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" />.</summary>
      <returns>The accelerator key.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey">
      <summary>Gets the access key for the element that is associated with the automation peer.</summary>
      <returns>The access key.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" />.</summary>
      <returns>The access key.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType">
      <summary>Gets the control type for the element that is associated with the UI automation peer.</summary>
      <returns>The control type.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlTypeCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
      <summary>Gets the <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> of the element that is associated with the automation peer.</summary>
      <returns>The automation identifier.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />.</summary>
      <returns>The automation identifier.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle">
      <summary>Gets the <see cref="T:System.Windows.Rect" /> object that represents the screen coordinates of the element that is associated with the automation peer.</summary>
      <returns>The bounding rectangle.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangleCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />.</summary>
      <returns>The bounding rectangle.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren">
      <summary>Gets the collection of child elements that are represented in the UI automation tree as immediate child elements of the automation peer.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName">
      <summary>Gets a name that is used with <see cref="T:System.Windows.Automation.Peers.AutomationControlType" />, to differentiate the control that is represented by this <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />. </summary>
      <returns>The class name. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClassNameCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint">
      <summary>Gets a <see cref="T:System.Windows.Point" /> on the element that is associated with the automation peer that responds to a mouse click. </summary>
      <returns>A point in the clickable area of the element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePointCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />.</summary>
      <returns>A point within the clickable area of the element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText">
      <summary>Gets text that describes the functionality of the control that is associated with the automation peer. </summary>
      <returns>The help text.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpTextCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />.</summary>
      <returns>The help text.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus">
      <summary>Gets text that conveys the visual status of the element that is associated with this automation peer. </summary>
      <returns>The item status.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatusCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" />.</summary>
      <returns>The item status.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType">
      <summary>Gets a string that describes what kind of item an element represents. </summary>
      <returns>The kind of item.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemTypeCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" />.</summary>
      <returns>The kind of item.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.UIElement" /> that is targeted to the element. </summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the element that is targeted by the <see cref="T:System.Windows.UIElement" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledByCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" />.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the element that is targeted by the <see cref="T:System.Windows.UIElement" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType">
      <summary>Gets a localized string that represents the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> value for the control that is associated with this automation peer.</summary>
      <returns>The type of the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />.</summary>
      <returns>The type of the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetName">
      <summary>Gets text that describes the element that is associated with this automation peer.</summary>
      <returns>The name.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The name.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation">
      <summary>Gets a value that indicates the explicit control orientation, if any.</summary>
      <returns>The orientation of the control as a value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientationCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" />.</summary>
      <returns>The orientation of the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetParent">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> that is the parent of this <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</summary>
      <returns>The parent automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>When overridden in a derived class, gets the control pattern that is associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.</summary>
      <returns>The object that implements the pattern interface; null if this peer does not support this interface.</returns>
      <param name="patternInterface">A value from the <see cref="T:System.Windows.Automation.Peers.PatternInterface" /> enumeration.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer currently has keyboard focus.</summary>
      <returns>true if the element has keyboard focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocusCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" />.</summary>
      <returns>true if the element has keyboard focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
      <summary>Triggers recalculation of the main properties of the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> and raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> notification to the automation client if the properties have changed. </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user.</summary>
      <returns>true if the element is a content element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElementCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</summary>
      <returns>true if the element is a content element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement">
      <summary>Gets a value that indicates whether the element is understood by the user as interactive or as contributing to the logical structure of the control in the GUI.</summary>
      <returns>true if the element is a control; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElementCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</summary>
      <returns>true if the element is a control; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled">
      <summary>Gets a value that indicates whether the element associated with this automation peer supports interaction.</summary>
      <returns>true if the element supports interaction; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabledCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" />.</summary>
      <returns>true if the automation peer can receive and send events; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable">
      <summary>Gets a value that indicates whether the element can accept keyboard focus.</summary>
      <returns>true if the element can accept keyboard focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusableCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" />.</summary>
      <returns>true if the element can accept keyboard focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
      <summary>Gets a value that indicates whether an element is off the screen.</summary>
      <returns>true if the element is not on the screen; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreenCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />.</summary>
      <returns>true if the element is not on the screen; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword">
      <summary>Gets a value that indicates whether the element contains sensitive content.</summary>
      <returns>true if the element contains sensitive content such as a password; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsPasswordCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" />.</summary>
      <returns>true if the element contains sensitive content; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm">
      <summary>Gets a value that indicates whether the element that is associated with this peer must be completed on a form.</summary>
      <returns>true if the element must be completed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForFormCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" />.</summary>
      <returns>true if the element must be completed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
      <summary>Gets a value that indicates whether UI automation is listening for the specified event. </summary>
      <returns>true if UI automation is listening for the specified event; otherwise, false.</returns>
      <param name="eventId">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.PeerFromProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>Gets an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the specified <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> proxy.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</returns>
      <param name="provider">The class that implements <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
      <summary>Gets the <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> proxy for the specified <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</summary>
      <returns>The proxy.</returns>
      <param name="peer">The automation peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAutomationEvent(System.Windows.Automation.Peers.AutomationEvents)">
      <summary>Raises an automation event.</summary>
      <param name="eventId">The event identifier for the event to raise, as a value of the enumeration. See <see cref="T:System.Windows.Automation.Peers.AutomationEvents" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
      <summary>Raises an event to notify the automation client of a changed property value.</summary>
      <param name="property">The property that changed.</param>
      <param name="oldValue">The previous value of the property.</param>
      <param name="newValue">The new value of the property.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus">
      <summary>Sets the keyboard focus on the element that is associated with this automation peer.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.SetFocusCore">
      <summary>When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" />.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Button" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Button" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this UI automation peer.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer">
      <summary>Represents a base class for exposing classes derived from <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.ButtonBase)">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> to associate with this peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the object associated with this <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>A string that contains the class name, minus the accelerator key.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.CheckBox" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.#ctor(System.Windows.Controls.CheckBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.CheckBox" /> to associate with this <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ComboBox" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.#ctor(System.Windows.Controls.ComboBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ComboBox" /> instance to associate with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>Creates an automation peer for an individual item in the <see cref="T:System.Windows.Controls.ComboBox" /> associated with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />.</summary>
      <returns>The new <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> for the specified item in the list.</returns>
      <param name="item">The item to create the automation peer for.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="pattern">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" />.</summary>
      <returns>The state of the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />.</summary>
      <returns>true if the control is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" />.</summary>
      <param name="value">The value of the control.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value" />.</summary>
      <returns>The value of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.FrameworkElement" /> types (including controls) to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.#ctor(System.Windows.FrameworkElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.FrameworkElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.CreatePeerForElement(System.Windows.UIElement)">
      <summary>Creates a <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> for the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />.</returns>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.FromElement(System.Windows.UIElement)">
      <summary>Returns the <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> for the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />, or null if the <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> was not created by the <see cref="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.CreatePeerForElement(System.Windows.UIElement)" /> method.</returns>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAcceleratorKeyCore">
      <summary>Returns the accelerator key for the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" />.</summary>
      <returns>The <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey(System.Windows.DependencyObject)" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAccessKeyCore">
      <summary>Returns the access key for the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" />.</summary>
      <returns>The access key for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationControlTypeCore">
      <summary>Returns the control type for the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationIdCore">
      <summary>Returns the string that uniquely identifies the <see cref="T:System.Windows.FrameworkElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />.</summary>
      <returns>The automation identifier for the element associated with the <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />, or <see cref="F:System.String.Empty" /> if there is no automation identifier.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetBoundingRectangleCore">
      <summary>Returns the <see cref="T:System.Windows.Rect" /> that represents the bounding rectangle of the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />.</summary>
      <returns>The <see cref="T:System.Windows.Rect" /> that contains the coordinates of the element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetChildrenCore">
      <summary>Returns the collection of child elements of the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetClassNameCore">
      <summary>Returns the name of the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. See Remarks.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetClickablePointCore">
      <summary>Returns a <see cref="T:System.Windows.Point" /> that represents the clickable space that is on the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />.</summary>
      <returns>The <see cref="T:System.Windows.Point" /> on the element that allows a click.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetHelpTextCore">
      <summary>Returns the string that describes the functionality of the <see cref="T:System.Windows.FrameworkElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />.</summary>
      <returns>The help text, or <see cref="F:System.String.Empty" /> if there is no help text.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetItemStatusCore">
      <summary>Returns a string that communicates the visual status of the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" />.</summary>
      <returns>The string that contains the <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetItemStatus(System.Windows.DependencyObject)" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetItemTypeCore">
      <summary>Returns a human-readable string that contains the item type that the <see cref="T:System.Windows.UIElement" /> for this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> represents. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" />.</summary>
      <returns>The string that contains the <see cref="P:System.Windows.Automation.AutomationProperties.ItemType" /> that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetItemType(System.Windows.DependencyObject)" />. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetLabeledByCore">
      <summary>Returns the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.UIElement" /> that targets the <see cref="T:System.Windows.FrameworkElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" />.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the element that is targeted by the <see cref="T:System.Windows.UIElement" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Returns the localized version of the control type for the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />.</summary>
      <returns>The string that contains the type of control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetNameCore">
      <summary>Returns the text label of the <see cref="T:System.Windows.FrameworkElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetOrientationCore">
      <summary>Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> is laid out in a specific direction. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.None" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Returns the control pattern for the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />.</summary>
      <returns>See Remarks.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.HasKeyboardFocusCore">
      <summary>Returns a value that indicates whether the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> currently has keyboard input focus. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" />.</summary>
      <returns>true if the element has keyboard input focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsContentElementCore">
      <summary>Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> is an element that contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</summary>
      <returns>true if the element contains data for the user to read; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsControlElementCore">
      <summary>Returns a value that indicates whether the element  that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> is understood by the end user as interactive. Optionally, the user might understand the element as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</summary>
      <returns>true if the element is interactive; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsEnabledCore">
      <summary>Returns a value that indicates whether the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> is enabled. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" />.</summary>
      <returns>true if the element is enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsKeyboardFocusableCore">
      <summary>Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> can accept keyboard focus. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" />.</summary>
      <returns>true if the element is focusable by the keyboard; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsOffscreenCore">
      <summary>Returns a value that indicates whether the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> is off the screen. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />.</summary>
      <returns>true if the element is not on the screen; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsPasswordCore">
      <summary>Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> contains protected content. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" />.</summary>
      <returns>true if the element contains sensitive content; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsRequiredForFormCore">
      <summary>Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> is required to be completed on a form. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" />.</summary>
      <returns>The value that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm(System.Windows.DependencyObject)" />, if the value is set; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.Owner">
      <summary>Gets the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />.</summary>
      <returns>The element that owns this peer class.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.SetFocusCore">
      <summary>Sets the keyboard input focus on the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" />.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.HyperlinkButton" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.#ctor(System.Windows.Controls.HyperlinkButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.HyperlinkButton" /> to associate with the <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.HyperlinkButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.HyperlinkButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Hyperlink".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.HyperlinkButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.IsControlElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer is an element that contains data that is presented to the user.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ImageAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Image" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.#ctor(System.Windows.Controls.Image)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Image" /> to associate with this <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" />.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemAutomationPeer">
      <summary>Exposes a data item in an <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection to UI automation. </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
      <param name="item">The data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</param>
      <param name="itemsControlAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Windows.UIElement)">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
      <param name="item">The data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAcceleratorKeyCore">
      <summary>Returns the accelerator key for the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" />.</summary>
      <returns>The <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey(System.Windows.DependencyObject)" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAccessKeyCore">
      <summary>Returns the access key for the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" />.</summary>
      <returns>The access key for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Returns the control type for the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationIdCore">
      <summary>Returns the string that uniquely identifies the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />.</summary>
      <returns>The automation identifier for the element associated with the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />, or <see cref="F:System.String.Empty" /> if there is no automation identifier.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetBoundingRectangleCore">
      <summary>Returns the <see cref="T:System.Windows.Rect" /> that represents the bounding rectangle of the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />.</summary>
      <returns>The <see cref="T:System.Windows.Rect" /> that contains the coordinates of the element item.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetChildrenCore">
      <summary>Returns the collection of child elements of the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClassNameCore">
      <summary>Returns the class name of the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. See Remarks.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClickablePointCore">
      <summary>Returns a <see cref="T:System.Windows.Point" /> that represents the clickable space that is on the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />.</summary>
      <returns>The <see cref="T:System.Windows.Point" /> on the element that allows a click.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetHelpTextCore">
      <summary>Returns the string that describes the functionality of the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. his method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />.</summary>
      <returns>The help text, or <see cref="F:System.String.Empty" /> if there is no help text.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemStatusCore">
      <summary>Returns a string that communicates the visual status of the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" />.</summary>
      <returns>The string that contains the <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetItemStatus(System.Windows.DependencyObject)" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemTypeCore">
      <summary>Returns a human-readable string that contains the type of item that the item represents. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" />.</summary>
      <returns>The item type string.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLabeledByCore">
      <summary>Returns the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the object that targets the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" />.</summary>
      <returns>An automation peer for the targeting object.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Returns the localized version of the control type for the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />.</summary>
      <returns>The string that contains the type of control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.UIElement" /> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetOrientationCore">
      <summary>Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> is laid out in a specific direction. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Returns the control pattern for the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.HasKeyboardFocusCore">
      <summary>Returns a value that indicates whether the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> currently has keyboard input focus. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" />.</summary>
      <returns>true if the element has keyboard input focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsContentElementCore">
      <summary>Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> is an element that contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</summary>
      <returns>true if the element contains data for the user to read; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsControlElementCore">
      <summary>Returns a value that indicates whether the element  that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> is understood by the end user as interactive. Optionally, the user might understand the element as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</summary>
      <returns>true if the element is interactive; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsEnabledCore">
      <summary>Returns a value that indicates whether the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> is enabled. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" />.</summary>
      <returns>true if the element is enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>Returns a value that indicates whether the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> can accept keyboard focus. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" />.</summary>
      <returns>true if the element is focusable by the keyboard; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsOffscreenCore">
      <summary>Returns a value that indicates whether the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> is off the screen. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />.</summary>
      <returns>true if the element is not on the screen; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsPasswordCore">
      <summary>Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> contains protected content. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" />.</summary>
      <returns>true if the element contains sensitive content; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsRequiredForFormCore">
      <summary>Returns a value that indicates whether the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> is required to be completed on a form. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" />.</summary>
      <returns>The value that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm(System.Windows.DependencyObject)" />, if the value is set; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.Item">
      <summary>Gets the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
      <returns>The data item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.SetFocusCore">
      <summary>Sets the keyboard input focus on the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" />.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ItemsControl" /> types to UI automation. </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.#ctor(System.Windows.Controls.ItemsControl)">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ItemsControl" /> to associate with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>When overridden in a derived class, creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> for a data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection of this <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
      <returns>An object that exposes the data item to UI automation.</returns>
      <param name="item">The data item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.ItemsControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />. </summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets a control pattern for the <see cref="T:System.Windows.Controls.ItemsControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values that indicates the control pattern.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ListBox" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.#ctor(System.Windows.Controls.ListBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ListBox" /> to associate with the <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> for a data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection of this <see cref="T:System.Windows.Controls.ListBox" />.</summary>
      <returns>An object that exposes the data item to UI automation.</returns>
      <param name="item">The data item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ListBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ListBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the string value of ListBox.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer">
      <summary>Exposes the items in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection of a <see cref="T:System.Windows.Controls.ListBox" /> to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> class using the specified selector automation peer. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ListBoxItem" /> instance that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />.</param>
      <param name="selectorAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> that is associated with the <see cref="T:System.Windows.Controls.ListBox" /> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Windows.Controls.ListBoxItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ListBoxItem" /> instance that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the string ListBoxItem.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView" />.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.MediaElementAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.MediaElement" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.#ctor(System.Windows.Controls.MediaElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.MediaElement" /> to associate with the <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.MediaElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.MediaElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string MediaElement.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.MultiScaleImage" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer.#ctor(System.Windows.Controls.MultiScaleImage)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.MultiScaleImage" /> to associate with the <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.MultiScaleImage" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.MultiScaleImage" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string MultiScaleImage.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.PasswordBox" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.#ctor(System.Windows.Controls.PasswordBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.PasswordBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.PasswordBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />.</summary>
      <returns>true if the value is read-only; false if it can be modified. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" />.</summary>
      <param name="value">The value to set.</param>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner of this peer is not enabled.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is passed as null.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value" />. Always throws an exception.</summary>
      <returns>Not applicable; always throws an exception.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown in all cases.</exception>
    </member>
    <member name="T:System.Windows.Automation.Peers.PatternInterface">
      <summary>Specifies the control pattern that the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" /> method returns.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Invoke">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IInvokeProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Selection">
      <summary>The <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Value">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IValueProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.RangeValue">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IRangeValueProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Scroll">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IScrollProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IScrollItemProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IExpandCollapseProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Grid">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.GridItem">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.MultipleView">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IMultipleViewProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Window">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IWindowProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.SelectionItem">
      <summary>The <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Dock">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IDockProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Table">
      <summary>The <see cref="T:System.Windows.Automation.Provider.ITableProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.TableItem">
      <summary>The <see cref="T:System.Windows.Automation.Provider.ITableItemProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Toggle">
      <summary>The <see cref="T:System.Windows.Automation.Provider.IToggleProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Transform">
      <summary>The <see cref="T:System.Windows.Automation.Provider.ITransformProvider" /> control pattern interface.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Text">
      <summary>The <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> control pattern interface.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ProgressBar" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.#ctor(System.Windows.Controls.ProgressBar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ProgressBar" /> to associate with the <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ProgressBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ProgressBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string ProgressBar.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ProgressBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" />.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />.</summary>
      <returns>The large-change value supported by the control, or <see cref="F:System.Double.NaN" /> if this option is not supported. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />. Always throws an exception.</summary>
      <param name="val">The value to set. </param>
      <exception cref="T:System.InvalidOperationException">Thrown in all cases.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />.</summary>
      <returns>The small-change value supported by the control, or <see cref="F:System.Double.NaN" /> if this option is not supported. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.RadioButton" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.#ctor(System.Windows.Controls.RadioButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.RadioButton" /> to associate with the <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.RadioButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.RadioButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string RadioButton.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.RadioButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" />.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.CheckBox" /> for this peer is not checked.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" />.</summary>
      <returns>true if the element is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" />.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.CheckBox" /> for this peer is checked.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" />.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
        <see cref="T:System.Windows.Controls.CheckBox" /> for this peer is not enabled.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" />.</summary>
      <returns>The provider that supports <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.RangeBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> to associate with the <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" />.</summary>
      <returns>true if the value is read-only; false if it can be modified. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />.</summary>
      <returns>The large-change value supported by the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />.</summary>
      <returns>The maximum value supported by the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />.</summary>
      <returns>The minimum value supported by the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />.</summary>
      <param name="val">The value to set. </param>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The owner of this peer is not enabled.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Attempted to set value outside of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> and <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> of the owner control.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />.</summary>
      <returns>The small-change value supported by the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />.</summary>
      <returns>The value of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.RepeatButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> to associate with the <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string RepeatButton.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner control is not enabled.</exception>
    </member>
    <member name="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.RichTextBox" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.#ctor(System.Windows.Controls.RichTextBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.RichTextBox" /> owner of the automation peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.RichTextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetChildrenCore">
      <summary>Returns the collection of child elements of the <see cref="T:System.Windows.Controls.RichTextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.RichTextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string RichTextArea.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface; or null, if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.ScrollBar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to associate with the <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string ScrollBar.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClickablePointCore">
      <summary>Gets a clickable point for this control.</summary>
      <returns>A point that is clickable within the control, or a point with <see cref="F:System.Double.NaN" /> coordinates, if no point is clickable within the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetOrientationCore">
      <summary>Gets the orientation of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control associated with this peer.</summary>
      <returns>The orientation of the scroll bar, as a value of the enumeration.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ScrollViewer" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.#ctor(System.Windows.Controls.ScrollViewer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ScrollViewer" /> object that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />. instance.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ScrollViewer" /> object that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> instance. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetClassNameCore">
      <summary>Gets the text name of the <see cref="T:System.Windows.Controls.ScrollViewer" /> object that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> instance. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string ScrollViewer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.IsControlElementCore">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ScrollViewer" /> object associated with this peer is understood by the user as interactive or as contributing to the logical structure in UI.</summary>
      <returns>true value to indicate that the owner control is interactive; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontallyScrollable">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable" />.</summary>
      <returns>true if the control can scroll horizontally; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalScrollPercent">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent" />.</summary>
      <returns>The horizontal scroll position as a percentage of the total content area in the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalViewSize">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize" />.</summary>
      <returns>The horizontal size of the viewable region as a percentage of the total content area in the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)" />.</summary>
      <param name="horizontalAmount">The horizontal increment specific to the control.</param>
      <param name="verticalAmount">The vertical increment specific to the control.</param>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner control not enabled.</exception>
      <exception cref="T:System.InvalidOperationException">Current scrollable state of a particular scroll axis does not support a scroll action.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#SetScrollPercent(System.Double,System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)" />.</summary>
      <param name="horizontalPercent">The horizontal position as a percentage of the content area's total range.</param>
      <param name="verticalPercent">The vertical position as a percentage of the content area's total range.</param>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner control not enabled.</exception>
      <exception cref="T:System.InvalidOperationException">Current scrollable state of a particular scroll axis does not support a scroll action.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Specified an input parameter that was less than 0 or greater than 100.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticallyScrollable">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable" />.</summary>
      <returns>true if the control can scroll vertically; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalScrollPercent">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent" />.</summary>
      <returns>The vertical scroll position as a percentage of the total content area in the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalViewSize">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize" />.</summary>
      <returns>The vertical size of the viewable region as a percentage of the total content area in the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.Selector" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.#ctor(System.Windows.Controls.Primitives.Selector)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.Selector" /> instance that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.Selector" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.Selector" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />.</summary>
      <returns>true if multiple selection is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />.</summary>
      <returns>A list of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />.</summary>
      <returns>true if selection is required; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer">
      <summary>Exposes the items in a <see cref="T:System.Windows.Controls.Primitives.Selector" /> to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" /> using the specified selector automation peer. </summary>
      <param name="owner">The <see cref="T:System.Windows.UIElement" /> instance to associate with this <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" />.</param>
      <param name="selectorAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> that is associated with the control that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Windows.UIElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.UIElement" /> instance to associate with this <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" />.</summary>
      <exception cref="T:System.NotImplementedException">Owner element is not enabled.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" />.</summary>
      <returns>true if an item is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" />.</summary>
      <exception cref="T:System.NotImplementedException">Owner element is not enabled.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" />.</summary>
      <exception cref="T:System.NotImplementedException">Owner element is not enabled.</exception>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Controls.Primitives.Selector" /> for the item was not found through the relevant <see cref="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer" /> value.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" />.</summary>
      <returns>The UI automation provider.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SliderAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Slider" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.#ctor(System.Windows.Controls.Slider)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Slider" /> to associate with the <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Slider" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Slider" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string Slider.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClickablePointCore">
      <summary>Gets a clickable point on the control.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> structure containing a point on the control that is clickable. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBlockAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TextBlock" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.#ctor(System.Windows.Controls.TextBlock)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TextBlock" /> to associate with the <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.TextBlock" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TextBlock" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string TextBlock.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetNameCore">
      <summary>Gets the label of the <see cref="T:System.Windows.Controls.TextBlock" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The label of the element that is associated with this automation peer. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.IsControlElementCore">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.TextBlock" /> associated with this peer is understood by the user as interactive or as contributing to the logical structure of the UI.</summary>
      <returns>false if the element is part of an applied template; otherwise, true. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TextBox" /> types to  UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.#ctor(System.Windows.Controls.TextBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.TextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />.</summary>
      <returns>true if the value is read-only; false if it can be modified. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" />.</summary>
      <param name="value">The new value.</param>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner control is not enabled.</exception>
      <exception cref="T:System.InvalidOperationException">Owner control is read-only.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> provided as null.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value" />.</summary>
      <returns>The value of the control as a string. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ThumbAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.Thumb" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.#ctor(System.Windows.Controls.Primitives.Thumb)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> to associate with the <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string Thumb.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.ToggleButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> to associate with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the text name of the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string Button.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern implementation for this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values that indicates the control pattern.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IToggleProvider.Toggle" />.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner control is not enabled.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IToggleProvider.ToggleState" />.</summary>
      <returns>The toggle state of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IDockProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to controls that expose their dock properties in a docking container. </summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IDockProvider.DockPosition">
      <summary>Gets the current <see cref="T:System.Windows.Automation.DockPosition" /> of the control in a docking container.</summary>
      <returns>The <see cref="T:System.Windows.Automation.DockPosition" /> of the control, relative to the boundaries of the docking container and to other elements in the container.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IDockProvider.SetDockPosition(System.Windows.Automation.DockPosition)">
      <summary>Docks the control in a docking container.</summary>
      <param name="dockPosition">The dock position, relative to the boundaries of the docking container and to other elements in the container.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IExpandCollapseProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to controls that visually expand to display content and that collapse to hide content.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the control.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
      <summary>Displays all child nodes, controls, or content of the control.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
      <summary>Gets the state (expanded or collapsed) of the control.</summary>
      <returns>The state (expanded or collapsed) of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridItemProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to individual child controls of containers that implement <see cref="T:System.Windows.Automation.Provider.IGridProvider" />. </summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Column">
      <summary>Gets the ordinal number of the column that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the column that contains the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan">
      <summary>Gets the number of columns that are spanned by a cell or item.</summary>
      <returns>The number of columns. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid">
      <summary>Gets a UI automation provider that implements <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> and that represents the container of the cell or item.</summary>
      <returns>A UI automation provider that implements the <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" /> control pattern and that represents the cell or item container. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Row">
      <summary>Gets the ordinal number of the row that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the row that contains the cell or item. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan">
      <summary>Gets the number of rows spanned by a cell or item.</summary>
      <returns>The number of rows. </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to controls that act as containers for a collection of child elements. </summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount">
      <summary>Gets the total number of columns in a grid.</summary>
      <returns>The total number of columns in a grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)">
      <summary>Retrieves the UI automation provider for the specified cell.</summary>
      <returns>The UI automation provider for the specified cell.</returns>
      <param name="row">The ordinal number of the row that contains the cell.</param>
      <param name="column">The ordinal number of the column that contains the cell.</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.RowCount">
      <summary>Gets the total number of rows in a grid.</summary>
      <returns>The total number of rows in a grid.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IInvokeProvider">
      <summary>Exposes a method to support UI automation access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated. </summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
      <summary>Sends a request to activate a control and initiate its single, unambiguous action.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IMultipleViewProvider">
      <summary>Exposes methods and properties to support UI automation client access to controls that provide, and are able to switch between, multiple representations of the same set of information or child controls.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView">
      <summary>Gets the current control-specific view.</summary>
      <returns>The value (<paramref name="viewId" />) for the current view of the UI automation element. </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews">
      <summary>Retrieves a collection of control-specific view identifiers.</summary>
      <returns>A collection of values that identifies the views available for a UI automation element. </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)">
      <summary>Retrieves the name of a control-specific view.</summary>
      <returns>A localized name for the view.</returns>
      <param name="viewId">The view identifier.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)">
      <summary>Sets the current control-specific view. </summary>
      <param name="viewId">A view identifier.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRangeValueProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to controls that can be set to a value within a range.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
      <summary>Gets a value that indicates whether the value of a control is read-only. </summary>
      <returns>true if the value is read-only; false if it can be modified. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
      <summary>Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> property when a large change is made, such as with the PAGE DOWN key.</summary>
      <returns>The large-change value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
      <summary>Gets the maximum range value that is supported by the control.</summary>
      <returns>The maximum value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
      <summary>Gets the minimum range value that is supported by the control.</summary>
      <returns>The minimum value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />. </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
      <summary>Sets the value of the control.</summary>
      <param name="value">The value to set.</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
      <summary>Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> property when a small change is made, such as with an arrow key.</summary>
      <returns>The small-change value supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
      <summary>Gets the value of the control.</summary>
      <returns>The value of the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
      <summary>Provides methods and properties that expose basic information about a UI element.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollItemProvider">
      <summary>Exposes methods and properties to support access by UI automation client to individual child controls of containers that implement <see cref="T:System.Windows.Automation.Provider.IScrollProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView">
      <summary>Scrolls the content area of a container object in order to display the control within the visible region (viewport) of the container.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to a control that acts as a scrollable container for a collection of child objects. The children of this control must implement <see cref="T:System.Windows.Automation.Provider.IScrollItemProvider" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable">
      <summary>Gets a value that indicates whether the control can scroll horizontally.</summary>
      <returns>true if the control can scroll horizontally; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent">
      <summary>Gets the current horizontal scroll position.</summary>
      <returns>The horizontal scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize">
      <summary>Gets the current horizontal view size.</summary>
      <returns>The horizontal size of the viewable region as a percentage of the total content area within the control. </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>Scrolls the visible region of the content area horizontally, vertically, or both.</summary>
      <param name="horizontalAmount">The horizontal increment that is specific to the control. Pass <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> if the control cannot be scrolled in this direction.</param>
      <param name="verticalAmount">The vertical increment that is specific to the control. Pass <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> if the control cannot be scrolled in this direction.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)">
      <summary>Sets the horizontal and vertical scroll position as a percentage of the total content area within the control.</summary>
      <param name="horizontalPercent">The horizontal position as a percentage of the content area's total range. Pass <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> if the control cannot be scrolled in this direction.</param>
      <param name="verticalPercent">The vertical position as a percentage of the content area's total range. Pass <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> if the control cannot be scrolled in this direction.</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable">
      <summary>Gets a value that indicates whether the control can scroll vertically.</summary>
      <returns>true if the control can scroll vertically; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent">
      <summary>Gets the current vertical scroll position.</summary>
      <returns>The vertical scroll position as a percentage of the total content area within the control. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize">
      <summary>Gets the vertical view size.</summary>
      <returns>The vertical size of the viewable region as a percentage of the total content area within the control. </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionItemProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to individual, selectable child controls of containers that implement <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected">
      <summary>Gets a value that indicates whether an item is selected. </summary>
      <returns>true if the element is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select">
      <summary>Clears any existing selection and then selects the current element.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer">
      <summary>Gets the UI automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> and acts as the container for the calling object.</summary>
      <returns>The UI automation provider.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionProvider">
      <summary>Exposes methods and properties to support access by a UI Automation client to controls that act as containers for a collection of individual, selectable child items. The children of this control must implement <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple">
      <summary>Gets a value that indicates whether the UI automation provider allows more than one child element to be selected concurrently.</summary>
      <returns>true if multiple selection is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection">
      <summary>Retrieves a UI automation provider for each child element that is selected.</summary>
      <returns>A generic list of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired">
      <summary>Gets a value that indicates whether the UI automation provider requires at least one child element to be selected.</summary>
      <returns>true if selection is required; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableItemProvider">
      <summary>Exposes methods and properties to support UI automation client access to child controls of containers that implement <see cref="T:System.Windows.Automation.Provider.ITableProvider" />. </summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetColumnHeaderItems">
      <summary>Retrieves an array of UI automation providers representing all the column headers associated with a table item or cell.</summary>
      <returns>An array of UI automation providers. </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetRowHeaderItems">
      <summary>Retrieves an array of UI automation providers representing all the row headers associated with a table item or cell.</summary>
      <returns>An array of UI automation providers. </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to controls that act as containers for a collection of child elements. The children of this element must implement <see cref="T:System.Windows.Automation.Provider.ITableItemProvider" /> and be organized in a two-dimensional logical coordinate system that can be traversed (a UI automation client can move to adjacent controls, which are headers or cells of the table) by using the keyboard.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders">
      <summary>Returns a collection of UI Automation providers that represents all the column headers in a table.</summary>
      <returns>An array of UI automation providers. </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders">
      <summary>Returns a collection of UI Automation providers that represents all row headers in the table.</summary>
      <returns>An array of UI automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor">
      <summary>Gets the primary direction of traversal for the table.</summary>
      <returns>The primary direction of traversal, as a value of the enumeration. </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextProvider">
      <summary>Exposes methods and properties to support UI Automation client access to controls that contain text.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange">
      <summary>Gets a text range that encloses the main text of a document. </summary>
      <returns>A text range that encloses the main text of a document. </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetSelection">
      <summary>Retrieves a collection of disjoint text ranges that are associated with the current text selection or selections. </summary>
      <returns>A collection of disjoint text ranges.</returns>
      <exception cref="T:System.InvalidOperationException">If the UI Automation provider does not support text selection.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetVisibleRanges">
      <summary>Retrieves an array of disjoint text ranges from a text container. Each text range begins with the first partially visible line and ends with the last partially visible line. </summary>
      <returns>The collection of visible text ranges within a container or an empty array. This method never returns null.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromChild(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>Retrieves a text range that encloses a child element, such as an image, hyperlink, or other embedded object. </summary>
      <returns>A range that spans the child element.</returns>
      <param name="childElement">The enclosed object.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint(System.Windows.Point)">
      <summary>Returns the degenerate (empty) text range that is nearest to the specified screen coordinates. </summary>
      <returns>A degenerate range nearest the specified location. This method never returns null.</returns>
      <param name="screenLocation">The location, in screen coordinates. </param>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection">
      <summary>Gets a value that specifies whether a text provider supports selection, and if it does, the type of selection that is supported.</summary>
      <returns>A value of <see cref="T:System.Windows.Automation.SupportedTextSelection" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextRangeProvider">
      <summary>Exposes methods and properties to support UI automation client access to a span of continuous text in a text container that implements <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
      <summary>Adds to the collection of highlighted text in a text container that supports multiple disjoint selections.</summary>
      <exception cref="T:System.InvalidOperationException">The text provider does not support multiple disjoint selections.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
      <summary>Returns a new <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> that is identical to the original <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> and that inherits all the properties of the original. </summary>
      <returns>The new text range. This method never returns null.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
      <summary>Returns a value that indicates whether the span (the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> endpoint through the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint) of a text range is the same as another text range. </summary>
      <returns>true if the span of both text ranges is identical; otherwise, false. </returns>
      <param name="range">A text range to compare.</param>
      <exception cref="T:System.ArgumentException">The range to compare does not come from the same text provider.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>Returns a value that specifies whether two text ranges have identical endpoints.</summary>
      <returns>Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint. Returns zero if the caller's endpoint is at the same location as the target endpoint. Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint. </returns>
      <param name="endpoint">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the caller.</param>
      <param name="targetRange">The target range for comparison.</param>
      <param name="targetEndpoint">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the target.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="targetRange" /> is from a different text provider.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
      <summary>Expands the text range to the specified text unit.</summary>
      <param name="unit">The textual unit.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
      <summary>Returns a text range subset that has the specified attribute ID and attribute value. </summary>
      <returns>A text range that has a matching attribute ID and attribute value; otherwise, null. </returns>
      <param name="attributeId">The attribute ID to search for.</param>
      <param name="value">The attribute value to search for. This value must match the specified attribute type. </param>
      <param name="backward">true if the last occurring text range should be returned instead of the first; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
      <summary>Returns a text range subset that contains the specified text.</summary>
      <returns>A text range that matches the specified text; otherwise, null.</returns>
      <param name="text">The text string to search for.</param>
      <param name="backward">true to return the last occurring text range instead of the first; otherwise, false.</param>
      <param name="ignoreCase">true to ignore case; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
      <summary>Retrieves the value of the specified attribute ID across the text range. </summary>
      <returns>Retrieves an object that represents the value of the specified attribute. See Remarks.</returns>
      <param name="attributeId">The text attribute ID.</param>
      <exception cref="T:System.ArgumentException">The specified attribute ID is not valid.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
      <summary>Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</summary>
      <returns>An array of bounding rectangles for each full or partial line of text in a text range. See Remarks.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
      <summary>Retrieves a collection of all the embedded objects that exist within the text range. </summary>
      <returns>A collection of child objects that exist within the range. Child objects that overlap with the text range but are not completely enclosed by it are also included in the collection. Returns an empty collection if no child objects exist.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
      <summary>Returns the innermost element that encloses the text range. </summary>
      <returns>The enclosing control, typically the text provider that provides the text range. However, if the text provider supports child text elements such as tables or hyperlinks, the enclosing element can be a descendant of the text provider. </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
      <summary>Retrieves the plain text of the range. </summary>
      <returns>The plain text of the text range, which might represent a portion of the full string truncated at the specified <paramref name="maxLength" />. </returns>
      <param name="maxLength">The maximum length of the string to return. Use -1 to specify an unlimited length.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxLength" /> is less than -1.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>Moves the text range the specified number of text units.</summary>
      <returns>The number of units actually moved. This value can be less than the <paramref name="count" /> requested if either of the new text range endpoints is greater than or less than the <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> endpoints. </returns>
      <param name="unit">The text unit boundary.</param>
      <param name="count">The number of text units to move.A positive value moves the text range forward; a negative value moves the text range backward; and a value of 0 has no effect.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>Moves one endpoint of a text range to the specified endpoint of a second text range. </summary>
      <param name="endpoint">The endpoint to move.</param>
      <param name="targetRange">Another range from the same text provider.</param>
      <param name="targetEndpoint">An endpoint on the other range.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>Moves one endpoint of the text range the specified number of text units within the document range. </summary>
      <returns>The number of units actually moved. This value can be less than the <paramref name="count" /> requested if moving the endpoint extends beyond the start or end of the document.</returns>
      <param name="endpoint">The endpoint to move.</param>
      <param name="unit">The textual unit for moving.</param>
      <param name="count">The number of units to move. A positive value moves the endpoint forward; a negative value moves the endpoint backward; and a value of 0 has no effect.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
      <summary>From the collection of highlighted text in a text container that supports multiple disjoint selections, removes a highlighted section of text that corresponds to the caller's <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints.</summary>
      <exception cref="T:System.InvalidOperationException">The text provider does not support multiple disjoint .</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
      <summary>Causes the text control to scroll vertically until the text range is visible in the viewport. </summary>
      <param name="alignToTop">true if the text control should be scrolled so that the text range is flush with the top of the viewport; false if the text range is flush with the bottom of the viewport. </param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
      <summary>Highlights text in the text control that corresponds to the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints of the text range. </summary>
      <exception cref="T:System.InvalidOperationException">Text selection is not supported by the text control.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IToggleProvider">
      <summary>Exposes methods and properties to support UI automation client access to controls that can cycle through a set of states and maintain a particular state.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IToggleProvider.Toggle">
      <summary>Cycles through the toggle states of a control.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IToggleProvider.ToggleState">
      <summary>Gets the toggle state of the control.</summary>
      <returns>The toggle state of the control, as a value of the enumeration. </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITransformProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to controls or elements that can be moved, resized, or rotated within a two-dimensional space.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanMove">
      <summary>Gets a value that indicates whether the element can be moved.</summary>
      <returns>true if the element can be moved; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanResize">
      <summary>Gets a value that indicates whether the element can be resized.</summary>
      <returns>true if the element can be resized; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate">
      <summary>Gets a value that indicates whether the element can be rotated.</summary>
      <returns>true if the element can be rotated; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)">
      <summary>Moves the control.</summary>
      <param name="x">The absolute screen coordinates of the left side of the control.</param>
      <param name="y">The absolute screen coordinates of the top of the control.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)">
      <summary>Resizes the control. </summary>
      <param name="width">The new width of the window, in pixels.</param>
      <param name="height">The new height of the window, in pixels.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)">
      <summary>Rotates the control.</summary>
      <param name="degrees">The number of degrees to rotate the control. A positive number rotates the control clockwise. A negative number rotates the control counterclockwise.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IValueProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to controls that have an intrinsic value that does not span a range and that can be represented as a string. </summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
      <summary>Gets a value that indicates whether the value of a control is read-only. </summary>
      <returns>true if the value is read-only; false if it can be modified. </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
      <summary>Sets the value of a control.</summary>
      <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.Value">
      <summary>Gets the value of the control.</summary>
      <returns>The value of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IWindowProvider">
      <summary>Exposes methods and properties to support access by a UI automation client to controls that provide fundamental window-based functionality within a traditional graphical user interface (GUI). </summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.Close">
      <summary>Closes the window.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState">
      <summary>Gets the interaction state of the window. </summary>
      <returns>The interaction state of the control, as a value of the enumeration. </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsModal">
      <summary>Gets a value that specifies whether the window is modal.</summary>
      <returns>true if the window is modal; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost">
      <summary>Gets a value that specifies whether the window is the topmost element in the z-order of layout.</summary>
      <returns>true if the window is topmost; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable">
      <summary>Gets a value that specifies whether the window can be maximized.</summary>
      <returns>true if the window can be maximized; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable">
      <summary>Gets a value that specifies whether the window can be minimized. </summary>
      <returns>true if the window can be minimized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>Changes the visual state of the window (such as minimizing or maximizing it).</summary>
      <param name="state">The visual state of the window to change to, as a value of the enumeration.</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.VisualState">
      <summary>Gets the visual state of the window. </summary>
      <returns>The visual state of the window, as a value of the enumeration. </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
      <summary>Blocks the calling code for the specified time or until the associated process enters an idle state, whichever completes first. </summary>
      <returns>true if the window has entered the idle state; false if the timeout occurred.</returns>
      <param name="milliseconds">The amount of time, in milliseconds, to wait for the associated process to become idle.</param>
    </member>
    <member name="T:System.Windows.Automation.Text.TextPatternRangeEndpoint">
      <summary>Identifies text range endpoints for methods of  <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start">
      <summary>The start point of the range.</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End">
      <summary>The endpoint of the range. </summary>
    </member>
    <member name="T:System.Windows.Automation.Text.TextUnit">
      <summary>Represents pre-defined units of text for the purposes of navigation within a document. </summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Character">
      <summary>Specifies that the text unit is one character in length.</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Format">
      <summary>Specifies that the text unit is the length of a single, common format specification, such as bold, italic, or similar.</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Word">
      <summary>Specifies that the text unit is one word in length.</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Line">
      <summary>Specifies that the text unit is one line in length.</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Paragraph">
      <summary>Specifies that the text unit is one paragraph in length.</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Page">
      <summary>Specifies that the text unit is one document-specific page in length.</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Document">
      <summary>Specifies that the text unit is an entire document in length.</summary>
    </member>
    <member name="T:System.Windows.Controls.Border">
      <summary>Draws a border, background, or both around another object.</summary>
    </member>
    <member name="M:System.Windows.Controls.Border.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Border" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Border.Background">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that fills the background of the border.</summary>
      <returns>The brush that fills the background.</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Border.Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Border.Background" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to create the border.</summary>
      <returns>The brush that fills the border.  </returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Border.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Border.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderThickness">
      <summary>Gets or sets the thickness of the border.</summary>
      <returns>The thickness of the border in pixels.  The default is 0 on all four sides.</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Border.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Border.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.Child">
      <summary>Gets or sets the child element to draw the border around.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> to apply the border to.</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.CornerRadius">
      <summary>Gets or sets the radius for the corners of the border.</summary>
      <returns>The degree to which the corners are rounded.</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.CornerRadiusProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Border.CornerRadius" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Border.CornerRadius" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.Padding">
      <summary>Gets or sets the distance between the border and its child object.</summary>
      <returns>The dimensions of the space between the border and its child as a <see cref="T:System.Windows.Thickness" /> value. The <see cref="T:System.Windows.Thickness" /> values are in pixels.</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Border.Padding" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Border.Padding" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Button">
      <summary>Represents a button control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Button" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Button" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnClick">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event. </summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Button" /> object.</returns>
    </member>
    <member name="T:System.Windows.Controls.Canvas">
      <summary>Defines an area within which you can explicitly position child objects by using coordinates that are relative to the area. </summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Canvas" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)">
      <summary>Provides the behavior for the "arrange" pass of Silverlight layout.</summary>
      <returns>The actual size used.</returns>
      <param name="arrangeSize">The size that this object should use to arrange its child objects.</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLeft(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Canvas.Left" /> attached property for a given object. </summary>
      <returns>The <see cref="P:System.Windows.Controls.Canvas.Left" /> value of the specified object.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetTop(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Canvas.Top" /> attached property for a given object. </summary>
      <returns>The <see cref="P:System.Windows.Controls.Canvas.Top" /> value of the specified object.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetZIndex(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> attached property for a given object. </summary>
      <returns>The <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> value of the requested object. The maximum allowed value for <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> is Int16.MaxValue – 1 = 32766.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Left">
      <summary>Gets or sets the distance between the left side of an object and the left side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <returns>The offset position from the left side of a parent <see cref="T:System.Windows.Controls.Canvas" />, in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.LeftProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.Left" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Canvas.Left" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.MeasureOverride(System.Windows.Size)">
      <summary>Provides the behavior for the "measure" pass of Silverlight layout. </summary>
      <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.</returns>
      <param name="constraint">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.Left" /> attached property for a given object. </summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="length">The <see cref="P:System.Windows.Controls.Canvas.Left" /> value of the specified element.</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetTop(System.Windows.UIElement,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.Top" /> attached property for a given object. </summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="length">The <see cref="P:System.Windows.Controls.Canvas.Top" /> value of the specified object.</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetZIndex(System.Windows.UIElement,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> attached property for a given object. </summary>
      <param name="element">The object to which the property value is written. The maximum allowed value for <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> is Int16.MaxValue – 1 = 32766.</param>
      <param name="value">The <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> value of the specified object.</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Top">
      <summary>Gets or sets the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.Canvas" />. </summary>
      <returns>The offset position from the top of a parent <see cref="T:System.Windows.Controls.Canvas" />, in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.TopProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.Top" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Canvas.Top" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.ZIndex">
      <summary>Gets or sets the z-order rendering behavior of objects in a <see cref="T:System.Windows.Controls.Canvas" />. </summary>
      <returns>The z-order of the object within the <see cref="T:System.Windows.Controls.Canvas" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.ZIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Controls.CheckBox">
      <summary>Represents a control that a user can select (check) or clear (uncheck).</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CheckBox" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> for the check box object.</returns>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether this item should not be re-virtualized.</summary>
      <returns>true if you want to prevent revirtualization of this item; otherwise false.</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement">
      <summary>Gets an instance of the visual element that represents the data value.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> that represents the data value.</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value">
      <summary>Gets an <see cref="T:System.Object" /> that represents the original data value.</summary>
      <returns>The <see cref="T:System.Object" /> that represents the original data value.</returns>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent" /> attached events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.ClickMode">
      <summary>Specifies when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event should be raised for a control. </summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Release">
      <summary>Specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event should be raised when the left mouse button is pressed and released, and the mouse pointer is over the control. If you are using the keyboard, specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event should be raised when the SPACEBAR or ENTER key is pressed and released, and the control has keyboard focus.</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Press">
      <summary>Specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event should be raised when the mouse button is pressed and the mouse pointer is over the control. If you are using the keyboard, specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event should be raised when the SPACEBAR or ENTER is pressed and the control has keyboard focus.</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Hover">
      <summary>Specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event should be raised when the mouse pointer moves over the control. </summary>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinition">
      <summary>Defines column-specific properties that apply to <see cref="T:System.Windows.Controls.Grid" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ColumnDefinition" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.ActualWidth">
      <summary>Gets a value that represents the actual calculated width of a <see cref="T:System.Windows.Controls.ColumnDefinition" />. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the actual calculated width in pixels. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MaxWidth">
      <summary>Gets or sets a value that represents the maximum width of a <see cref="T:System.Windows.Controls.ColumnDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the maximum width in pixels. The default is <see cref="F:System.Double.PositiveInfinity" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MaxWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MinWidth">
      <summary>Gets or sets a value that represents the minimum width of a <see cref="T:System.Windows.Controls.ColumnDefinition" />. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the minimum width in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MinWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Width">
      <summary>Gets the calculated width of a <see cref="T:System.Windows.Controls.ColumnDefinition" /> element, or sets the <see cref="T:System.Windows.GridLength" /> value of a column that is defined by the <see cref="T:System.Windows.Controls.ColumnDefinition" />. </summary>
      <returns>The <see cref="T:System.Windows.GridLength" /> that represents the width of the column. The default value is 1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ColumnDefinition.Width" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ColumnDefinition.Width" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinitionCollection">
      <summary>Provides access to an ordered, strongly typed collection of <see cref="T:System.Windows.Controls.ColumnDefinition" /> objects.</summary>
    </member>
    <member name="T:System.Windows.Controls.ComboBox">
      <summary>Represents a selection control that combines a non-editable text box and a drop-down containing a list box that allows users to select an item from a list. </summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBox" /> class. . </summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the combo box control and its contents.</summary>
      <returns>The actual size of the combo box.</returns>
      <param name="arrangeBounds">The size allowed for the combo box control.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Removes all templates, styles, and bindings for the object displayed as a <see cref="T:System.Windows.Controls.ComboBoxItem" />.</summary>
      <param name="element">The container element to clear.</param>
      <param name="item">The item that is contained in the <see cref="T:System.Windows.Controls.ComboBoxItem" />.</param>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownClosed">
      <summary>Occurs when the drop-down portion of the combo box closes.</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownOpened">
      <summary>Occurs when the drop-down portion of the combo box opens.</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride">
      <summary>Retrieves an empty combo box item.</summary>
      <returns>An empty combo box item.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsDropDownOpen">
      <summary>Gets or sets a value that indicates whether the drop-down portion of the combo box is currently open.</summary>
      <returns>true if the drop-down portion is open; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsEditable">
      <summary>Gets a value that indicates whether the user can edit text in the text box portion of a combo box. This property always returns false.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether the specified item is (or is eligible to be) its own item container. </summary>
      <returns>true if the item is a <see cref="T:System.Windows.Controls.ComboBoxItem" />; otherwise, false. The default is false.</returns>
      <param name="item">The item to evaluate.</param>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsSelectionActiveProperty">
      <summary>Identifies the IsSelectionActive attached property.</summary>
      <returns>The identifier for the IsSelectionActive attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> is highlighted.</summary>
      <returns>true if the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> is highlighted; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.ItemContainerStyle">
      <summary>Gets or sets the style applied to the container generated for each item in the combo box.</summary>
      <returns>The style applied to the container generated for each item in the combo box.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.ItemContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.ItemContainerStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.ItemContainerStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.MaxDropDownHeight">
      <summary>Gets or sets the maximum height of the drop-down that lists combo box items.</summary>
      <returns>The maximum height of the drop-down that lists combo box items. The default is infinity.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ComboBox" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> for the <see cref="T:System.Windows.Controls.ComboBox" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</summary>
      <param name="e">The event data</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseEnter" /> event that occurs when the mouse pointer enters this control.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event that occurs when the mouse pointer leaves the combo box.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event that occurs when the left mouse button is pressed while the mouse pointer is over the combo box.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseWheel" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs" />that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">The container element used to display the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItem">
      <summary>Gets the item displayed in the selection box.</summary>
      <returns>The item displayed in the selection box.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate">
      <summary>Gets the template applied to the selection box content. </summary>
      <returns>The template applied to the selection box content.</returns>
    </member>
    <member name="T:System.Windows.Controls.ComboBoxItem">
      <summary>Represents a selectable item contained in a <see cref="T:System.Windows.Controls.ComboBox" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBoxItem" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.ContentChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.RichTextBox.ContentChanged" /> event. </summary>
    </member>
    <member name="T:System.Windows.Controls.ContentChangedEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Controls.RichTextBox.ContentChanged" /> event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.ContentControl">
      <summary>Represents a control with a single piece of content. Controls such as <see cref="T:System.Windows.Controls.Button" />, <see cref="T:System.Windows.Controls.CheckBox" />, and <see cref="T:System.Windows.Controls.ScrollViewer" /> directly or indirectly inherit from this class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ContentControl" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.Content">
      <summary>Gets or sets the value of the <see cref="T:System.Windows.Controls.ContentControl" /> dependency property.</summary>
      <returns>An object that contains the control's content. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentControl.Content" /> dependency property </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ContentControl.Content" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplate">
      <summary>Gets or sets the data template that is used to display the content of the <see cref="T:System.Windows.Controls.ContentControl" />.</summary>
      <returns>The data template that is used to display the content of the <see cref="T:System.Windows.Controls.ContentControl" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> dependency property </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes. </summary>
      <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
      <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
    </member>
    <member name="T:System.Windows.Controls.ContentPresenter">
      <summary>Displays the content of a <see cref="T:System.Windows.Controls.ContentPresenter" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ContentPresenter" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.Content">
      <summary>Gets or sets the data that is used to generate the child elements of a <see cref="T:System.Windows.Controls.ContentPresenter" />.</summary>
      <returns>The data that is used to generate the child elements. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> dependency property </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplate">
      <summary>Gets or sets the template that is used to display the content of the control.</summary>
      <returns>A <see cref="T:System.Windows.DataTemplate" /> that defines the visualization of the content. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Control">
      <summary>Represents the base class for UI elements that use a <see cref="T:System.Windows.Controls.ControlTemplate" /> to define their appearance. </summary>
    </member>
    <member name="M:System.Windows.Controls.Control.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Control" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Control.ApplyTemplate">
      <summary>Loads the relevant control template so that its parts can be referenced.</summary>
      <returns>Returns whether the visual tree was rebuilt by this call. true indicates the tree was rebuilt; false indicates that the previous visual tree was retained.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Background">
      <summary>Gets or sets a brush that provides the background of the control.</summary>
      <returns>The brush that provides the background of the control. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.Background" /> dependency property </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.Background" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderBrush">
      <summary>Gets or sets a brush that describes the border background of a control.</summary>
      <returns>The brush that is used to fill the control's border; the default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderThickness">
      <summary>Gets or sets the border thickness of a control. </summary>
      <returns>A thickness value; the default is a thickness of 0 on all four sides.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.DefaultStyleKey">
      <summary>Gets or sets the key that references the default style for the control.</summary>
      <returns>The key that references the default style for the control. To work correctly as part of theme style lookup, this value is expected to be the <see cref="T:System.Type" /> of the control being styled.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.DefaultStyleKeyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.DefaultStyleKey" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.DefaultStyleKey" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.Focus">
      <summary>Attempts to set the focus on the control.</summary>
      <returns>true if focus was set to the control, or focus was already on the control. false if the control is not focusable.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontFamily">
      <summary>Gets or sets the font used to display text in the control.</summary>
      <returns>The font used to display text in the control. The default is the "Portable User Interface".</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontFamily" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.FontFamily" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontSize">
      <summary>Gets or sets the size of the text in this control.</summary>
      <returns>The size of the text in the <see cref="T:System.Windows.Controls.Control" />. The default is 11 (in pixels).</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.FontStyle" /> dependency property.f</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStretch">
      <summary>Gets or sets the degree to which a font is condensed or expanded on the screen.</summary>
      <returns>One of the values that specifies the degree to which a font is condensed or expanded on the screen. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontStretch" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.FontStretch" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStyle">
      <summary>Gets or sets the style in which the text is rendered.</summary>
      <returns>One of the values that specifies the style in which the text is rendered.  The default is <see cref="P:System.Windows.FontStyles.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.FontStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontWeight">
      <summary>Gets or sets the thickness of the specified font.</summary>
      <returns>One of the values that specifies the thickness of the specified font. The default is <see cref="P:System.Windows.FontWeights.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontWeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.FontWeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Foreground">
      <summary>Gets or sets a brush that describes the foreground color.</summary>
      <returns>The brush that paints the foreground of the control. The default value is <see cref="P:System.Windows.Media.Colors.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.Foreground" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.Foreground" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.GetTemplateChild(System.String)">
      <summary>Retrieves the named element in the instantiated <see cref="T:System.Windows.Controls.ControlTemplate" /> visual tree.</summary>
      <returns>The named element from the template, if found. Can return null if no element with name <paramref name="childName" /> was found in the template.</returns>
      <param name="childName">The name of element to find.</param>
    </member>
    <member name="P:System.Windows.Controls.Control.HorizontalContentAlignment">
      <summary>Gets or sets the horizontal alignment of the control's content. </summary>
      <returns>One of the <see cref="T:System.Windows.HorizontalAlignment" /> values. The default is <see cref="F:System.Windows.HorizontalAlignment.Center" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.HorizontalContentAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.IsEnabled">
      <summary>Gets or sets a value indicating whether the user can interact with the control. </summary>
      <returns>true if the user can interact with the control; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Controls.Control.IsEnabledChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Control.IsEnabled" /> property changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.Control.IsEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.IsEnabled" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.IsEnabled" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.IsTabStop">
      <summary>Gets or sets a value that indicates whether a control is included in tab navigation. </summary>
      <returns>true if the control is included in tab navigation; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.IsTabStopProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.IsTabStop" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.IsTabStop" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.DragEnter" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDragLeave(System.Windows.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.DragLeave" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDragOver(System.Windows.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.DragOver" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDrop(System.Windows.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.Drop" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.GotFocus" /> event occurs.</summary>
      <param name="e">The data for the event. </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.KeyDown" /> event occurs.</summary>
      <param name="e">The data for the event. </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.KeyUp" /> event occurs.</summary>
      <param name="e">The data for the event. </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.LostFocus" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> event occurs to provide handling for the event in a derived class without attaching a delegate. </summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.Controls.Control.ManipulationCompleted" /> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationCompleted(System.Object,System.Windows.Input.ManipulationCompletedEventArgs)" />.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.Controls.Control.ManipulationDelta" /> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationDelta(System.Object,System.Windows.Input.ManipulationDeltaEventArgs)" />.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.Controls.Control.ManipulationStarted" /> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationStarted(System.Object,System.Windows.Input.ManipulationStartedEventArgs)" />.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseEnter" /> event occurs.</summary>
      <param name="e">The data for the event. </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseLeave" /> event occurs.</summary>
      <param name="e">The data for the event. </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event occurs.</summary>
      <param name="e">The data for the event. </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event occurs.</summary>
      <param name="e">The data for the event. </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseMove" /> event occurs.</summary>
      <param name="e">The data for the event. </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseWheel" /> event occurs to provide handling for the event in a derived class without attaching a delegate. </summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.TextInput" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTextInputStart(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.TextInputStart" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.TextInputUpdate" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data</param>
    </member>
    <member name="P:System.Windows.Controls.Control.Padding">
      <summary>Gets or sets the padding inside a control.</summary>
      <returns>The amount of space between the content of a <see cref="T:System.Windows.Controls.Control" /> and its <see cref="P:System.Windows.FrameworkElement.Margin" /> or <see cref="T:System.Windows.Controls.Border" />.  The default is a thickness of 0 on all four sides.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.Padding" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.Padding" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.TabIndex">
      <summary>Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by using the TAB key.</summary>
      <returns>A value that determines the order of logical navigation for a device. The default value is <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TabIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.TabIndex" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.TabIndex" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.TabNavigation">
      <summary>Gets or sets a value that modifies how tabbing and <see cref="P:System.Windows.Controls.Control.TabIndex" /> work for this control.</summary>
      <returns>A value of the enumeration. The default is <see cref="F:System.Windows.Input.KeyboardNavigationMode.Local" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TabNavigationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.TabNavigation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.TabNavigation" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Template">
      <summary>Gets or sets a control template. </summary>
      <returns>The template that defines the appearance of the <see cref="T:System.Windows.Controls.Control" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.Template" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.Template" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.VerticalContentAlignment">
      <summary>Gets or sets the vertical alignment of the control's content.</summary>
      <returns>One of the <see cref="T:System.Windows.VerticalAlignment" /> values. The default is <see cref="F:System.Windows.VerticalAlignment.Center" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.VerticalContentAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ControlTemplate">
      <summary>Defines the element tree that is applied as a control template.</summary>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ControlTemplate" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.TargetType">
      <summary>Gets or sets the type to which the <see cref="T:System.Windows.Controls.ControlTemplate" /> is applied.</summary>
      <returns>The type to which the <see cref="T:System.Windows.Controls.ControlTemplate" /> is applied.</returns>
    </member>
    <member name="T:System.Windows.Controls.Grid">
      <summary>Defines a flexible grid area that consists of columns and rows.</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Grid" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.Grid" /> element.</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.Grid" /> element and its children.</returns>
      <param name="arrangeSize">Specifies the size this <see cref="T:System.Windows.Controls.Grid" /> element should use to arrange its child elements.</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.Column">
      <summary>Gets or sets a value that indicates which column child content within a <see cref="T:System.Windows.Controls.Grid" /> should appear in. </summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the column in which child content should appear. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnDefinitions">
      <summary>Gets a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> defined on this instance of <see cref="T:System.Windows.Controls.Grid" />. </summary>
      <returns>A <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> defined on this instance of <see cref="T:System.Windows.Controls.Grid" /></returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.Column" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.Column" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnSpan">
      <summary>Gets or sets a value that indicates the total number of columns that child content spans within a <see cref="T:System.Windows.Controls.Grid" />.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the number of columns that child content should span. The default value is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnSpanProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumn(System.Windows.FrameworkElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.Column" /> attached property from the specified <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.Grid.Column" /> attached property.  This is a zero-based index.</returns>
      <param name="element">The element from which to read the property value.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumnSpan(System.Windows.FrameworkElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> attached property from the specified <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> attached property.</returns>
      <param name="element">The element from which to read the property value.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRow(System.Windows.FrameworkElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.Row" /> attached property from the specified <see cref="T:System.Windows.FrameworkElement" />. </summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.Grid.Row" /> attached property.</returns>
      <param name="element">The element from which to read the property value.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRowSpan(System.Windows.FrameworkElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> attached property from the specified <see cref="T:System.Windows.FrameworkElement" />. </summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> attached property.</returns>
      <param name="element">The element from which to read the property value.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.MeasureOverride(System.Windows.Size)">
      <summary>Measures the children of a <see cref="T:System.Windows.Controls.Grid" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> that represents the maximum area available to the child content for layout.</returns>
      <param name="constraint">Indicates an upper limit size that should not be exceeded.</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.Row">
      <summary>Gets or sets a value that indicates which row child content within a <see cref="T:System.Windows.Controls.Grid" /> should appear in.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the row in which child content should appear. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowDefinitions">
      <summary>Gets a <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> defined on this instance of <see cref="T:System.Windows.Controls.Grid" />. </summary>
      <returns>A <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> defined on this instance of <see cref="T:System.Windows.Controls.Grid" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.Row" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.Row" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowSpan">
      <summary>Gets or sets a value that indicates the total number of rows that child content spans within a <see cref="T:System.Windows.Controls.Grid" />.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the number of rows that child content should span. The default value is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowSpanProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumn(System.Windows.FrameworkElement,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.Column" /> attached property to the specified <see cref="T:System.Windows.FrameworkElement" />. </summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.Column" /> attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumnSpan(System.Windows.FrameworkElement,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> attached property to the specified <see cref="T:System.Windows.FrameworkElement" />. </summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRow(System.Windows.FrameworkElement,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.Row" /> attached property to the specified <see cref="T:System.Windows.FrameworkElement" />. </summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.Row" /> attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRowSpan(System.Windows.FrameworkElement,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> attached property to the specified <see cref="T:System.Windows.FrameworkElement" />. </summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.ShowGridLines">
      <summary>Gets or sets a value that indicates whether grid lines are visible within this <see cref="T:System.Windows.Controls.Grid" />. </summary>
      <returns>true if grid lines are visible; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ShowGridLinesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.ShowGridLines" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.ShowGridLines" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.HyperlinkButton">
      <summary>Represents a button control that displays a hyperlink.</summary>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.HyperlinkButton" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.HyperlinkButton.NavigateUri">
      <summary>Gets or sets the URI to navigate to when the <see cref="T:System.Windows.Controls.HyperlinkButton" /> is clicked. </summary>
      <returns>The URI to navigate to when the <see cref="T:System.Windows.Controls.HyperlinkButton" /> is clicked.</returns>
    </member>
    <member name="F:System.Windows.Controls.HyperlinkButton.NavigateUriProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HyperlinkButton.NavigateUri" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.HyperlinkButton.NavigateUri" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.HyperlinkButton" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.OnClick">
      <summary>Provides handling for the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Windows.Controls.HyperlinkButton.NavigateUri" /> property is not or cannot be converted to an absolute URI.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.HyperlinkButton.TargetName" /> property is set to a value that contains embedded whitespace.</exception>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" /> for the hyperlink button object. </returns>
    </member>
    <member name="P:System.Windows.Controls.HyperlinkButton.TargetName">
      <summary>Gets or sets the name of the target window or frame that the Web page should open in, or the name of the object within the Silverlight application to navigate to.</summary>
      <returns>Gets or sets the name of the target window or frame that the Web page should open in, or the name of the object within the Silverlight application to navigate to.</returns>
    </member>
    <member name="F:System.Windows.Controls.HyperlinkButton.TargetNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HyperlinkButton.TargetName" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.HyperlinkButton.TargetName" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Image">
      <summary>Represents a control that displays an image in the JPEG or PNG file formats.</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Image" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.Image.ImageFailed">
      <summary>Occurs when there is an error associated with image retrieval or format.</summary>
    </member>
    <member name="E:System.Windows.Controls.Image.ImageOpened">
      <summary>Occurs when the image source is downloaded and decoded with no failure. You can use this event to determine the size of an image before rendering it.</summary>
    </member>
    <member name="P:System.Windows.Controls.Image.Source">
      <summary>Gets or sets the source for the image.</summary>
      <returns>A source object for the drawn image.</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Image.Source" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Image.Source" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.Stretch">
      <summary>Gets or sets a value that describes how an <see cref="T:System.Windows.Controls.Image" /> should be stretched to fill the destination rectangle. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Stretch" />A value of the enumeration that specifies how the source image is applied if the <see cref="P:System.Windows.FrameworkElement.Height" /> and <see cref="P:System.Windows.FrameworkElement.Width" /> of the <see cref="T:System.Windows.Controls.Image" /> are specified and are different than the source image's height and width.The default value is Uniform.</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Image.Stretch" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Image.Stretch" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.INavigate">
      <summary>Defines a method for internal navigation in a Silverlight application.</summary>
    </member>
    <member name="M:System.Windows.Controls.INavigate.Navigate(System.Uri)">
      <summary>Displays the content located at the specified URI.</summary>
      <returns>true if the content was successfully displayed; otherwise, false.</returns>
      <param name="source">The URI of the content to display. </param>
    </member>
    <member name="T:System.Windows.Controls.InkPresenter">
      <summary>Implements a rectangular surface that displays ink strokes.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.InkPresenter" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.Strokes">
      <summary>Gets or sets the strokes that the <see cref="T:System.Windows.Controls.InkPresenter" /> displays.</summary>
      <returns>The collection of ink strokes that are displayed by the <see cref="T:System.Windows.Controls.InkPresenter" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.InkPresenter.StrokesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemCollection">
      <summary>Holds the list of items that represent the content of an <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.ItemCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Occurs when the items list of the collection has changed, or the collection is reset.</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerGenerator">
      <summary>Provides mappings between the items of an <see cref="T:System.Windows.Controls.ItemsControl" /> and their container elements.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
      <summary>Returns the container for the item at the specified index within the <see cref="T:System.Windows.Controls.ItemCollection" />.</summary>
      <returns>The container for the item at the specified index within the item collection, if the item has a container; otherwise, null.</returns>
      <param name="index">The index of the item to retrieve.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
      <summary>Returns the container corresponding to the specified item.</summary>
      <returns>A container that corresponds to the specified item, if the item has a container and exists in the collection; otherwise, null.</returns>
      <param name="item">The item to retrieve the container for.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
      <summary>Gets the generated position of the item at the specified index.</summary>
      <returns>The position of the item as generated by the <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</returns>
      <param name="itemIndex">The index of the item to retrieve the position of.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
      <summary>Returns the index to the item that has the specified, generated container.</summary>
      <returns>The index to the item that corresponds to the specified generated container.</returns>
      <param name="container">The generated container to retrieve the item index for.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Returns the index that maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that is the index which maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
      <param name="position">The <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />  for the desired index.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
      <summary>Returns the item that corresponds to the specified, generated container.</summary>
      <returns>The contained item, or the container if it does not contain an item.</returns>
      <param name="container">The <see cref="T:System.Windows.DependencyObject" /> that corresponds to the item to be returned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> is null.</exception>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged">
      <summary>Occurs when the contents of the items collection changes.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext(System.Boolean@)">
      <summary>Returns the container element used to display the next item, and whether the container element has been newly generated (realized).</summary>
      <returns>A <see cref="T:System.Windows.DependencyObject" /> that is the container element which is used to display the next item.</returns>
      <param name="isNewlyRealized">true if the returned <see cref="T:System.Windows.DependencyObject" /> is newly generated (realized); otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>Returns the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> appropriate for use by the specified panel. </summary>
      <returns>An <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> appropriate for use by the specified panel.</returns>
      <param name="panel">The panel for which to return an appropriate <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>Prepares the specified element as the container for the corresponding item.</summary>
      <param name="container">The container to prepare. Normally, <paramref name="container" /> is the result of the previous call to <see cref="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>Removes one or more generated (realized) items.</summary>
      <param name="position">The <see cref="T:System.Int32" /> index of the element to remove. <paramref name="position" /> must refer to a previously generated (realized) item, which means its offset must be zero.</param>
      <param name="count">The <see cref="T:System.Int32" /> number of elements to remove, starting at <paramref name="position" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#RemoveAll">
      <summary>Removes all generated (realized) items.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />, and controlling whether or not to start at a generated (realized) item.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that tracks the lifetime of the generation process.</returns>
      <param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, that specifies the position of the item to start generating items at.</param>
      <param name="direction">Specifies the position of the item to start generating items at.</param>
      <param name="allowStartAtRealizedItem">A <see cref="T:System.Boolean" /> that specifies whether to start at a generated (realized) item.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IRecyclingItemContainerGenerator#Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>Disassociates item containers from their data items and saves the containers so they can be reused later for other data items.</summary>
      <param name="position">The zero-based index of the first element to reuse. <paramref name="position" /> must refer to a previously generated (realized) item.</param>
      <param name="count">The number of elements to reuse, starting at <paramref name="position" />.</param>
    </member>
    <member name="T:System.Windows.Controls.ItemsControl">
      <summary>Represents a control that can be used to present a collection of items.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemsControl" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> method.</summary>
      <param name="element">The container element.</param>
      <param name="item">The item.</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.DisplayMemberPath">
      <summary>Gets or sets the name or path of the property that is displayed for each data item.</summary>
      <returns>The name or path of the property that is displayed for each the data item in the control.  The default is an empty string ("").</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetContainerForItemOverride">
      <summary>Creates or identifies the element that is used to display the given item.</summary>
      <returns>The element that is used to display the given item.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)">
      <summary>Returns the <see cref="T:System.Windows.Controls.ItemsControl" /> that the specified element hosts items for.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ItemsControl" /> that the specified element hosts items for, or null.</returns>
      <param name="element">The host element. </param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
      <returns>true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
      <param name="item">The item to check.</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator">
      <summary>Gets the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> associated with this <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> associated with this <see cref="T:System.Windows.Controls.ItemsControl" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.Items">
      <summary>Gets the collection used to generate the content of the control.</summary>
      <returns>The collection that is used to generate the content of the control, if it exists; otherwise, null. The default is an empty collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
      <summary>Returns the <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the specified container element.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the specified container element; otherwise, null.</returns>
      <param name="container">The container element to return the <see cref="T:System.Windows.Controls.ItemsControl" /> for.</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsPanel">
      <summary>Gets or sets the template that defines the panel that controls the layout of items.</summary>
      <returns>An <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> that defines the panel to use for the layout of the items. The default value for the <see cref="T:System.Windows.Controls.ItemsControl" /> is an <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> that specifies a <see cref="T:System.Windows.Controls.StackPanel" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsPanelProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsSource">
      <summary>Gets or sets a collection used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />. </summary>
      <returns>The  object that is used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplate">
      <summary>Gets or sets the <see cref="T:System.Windows.DataTemplate" /> used to display each item. </summary>
      <returns>The template that specifies the visualization of the data objects. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</summary>
      <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> that contains the event data</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item. </summary>
      <param name="element">The element used to display the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="T:System.Windows.Controls.ItemsPanelTemplate">
      <summary>Specifies the panel that the <see cref="T:System.Windows.Controls.ItemsPresenter" /> creates for the layout of the items of an <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> class. </summary>
    </member>
    <member name="T:System.Windows.Controls.ItemsPresenter">
      <summary>Specifies where items are placed in a control, usually an <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemsPresenter" /> class. </summary>
    </member>
    <member name="T:System.Windows.Controls.ListBox">
      <summary>Contains a list of selectable items. </summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ListBox" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.GetContainerForItemOverride">
      <summary>Creates or identifies the element used to display a specified item. </summary>
      <returns>A <see cref="T:System.Windows.Controls.ListBoxItem" /> corresponding to a specified item.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own item container. </summary>
      <returns>true if the item is its own item container; otherwise, false.</returns>
      <param name="item">The specified item.</param>
    </member>
    <member name="F:System.Windows.Controls.ListBox.IsSelectionActiveProperty">
      <summary>Identifies the IsSelectionActive dependency property. </summary>
      <returns>The identifier for the IsSelectionActive dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.ItemContainerStyle">
      <summary>Gets or sets the style that is used when rendering the item containers. </summary>
      <returns>The style applied to the item containers. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.ItemContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ListBox.ItemContainerStyle" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ListBox.ItemContainerStyle" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ListBox" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> for the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> for the <see cref="T:System.Windows.Controls.ListBox" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event that occurs when a key is pressed while the control has focus.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.ScrollIntoView(System.Object)">
      <summary>Causes the object to scroll into view. </summary>
      <param name="item">The object to scroll.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SelectAll">
      <summary>Selects all the items in the <see cref="T:System.Windows.Controls.ListBox" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> is set to <see cref="F:System.Windows.Controls.SelectionMode.Single" /></exception>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectedItems">
      <summary>Gets the list of currently selected items for the <see cref="T:System.Windows.Controls.ListBox" /> control.</summary>
      <returns>The list of currently selected items for the <see cref="T:System.Windows.Controls.ListBox" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectionMode">
      <summary>Gets or sets the selection behavior for the <see cref="T:System.Windows.Controls.ListBox" /> control.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.SelectionMode" /> values.</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectionModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ListBoxItem">
      <summary>Represents a selectable item in a <see cref="T:System.Windows.Controls.ListBox" />. </summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ListBoxItem" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.ListBoxItem.IsSelected">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.ListBoxItem" /> is selected. </summary>
      <returns>true if the item is selected; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ListBoxItem" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> for the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> for the <see cref="T:System.Windows.Controls.ListBoxItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.MediaElement">
      <summary>Represents an object that contains audio, video, or both.</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.Windows.Controls.MediaElement" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Attributes">
      <summary>Gets the collection of attributes that corresponds to the current entry in the ASX file that <see cref="P:System.Windows.Controls.MediaElement.Source" /> is set to.</summary>
      <returns>The collection of attributes that corresponds to the current entry in the ASX file that <see cref="P:System.Windows.Controls.MediaElement.Source" /> is set to.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AttributesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Attributes" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.Attributes" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.AudioStreamCount">
      <summary>Gets the number of audio streams available in the current media file. </summary>
      <returns>The number of audio streams that exist in the source media file. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AudioStreamCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.AudioStreamCount" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.AudioStreamCount" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.AudioStreamIndex">
      <summary>Gets or sets the index of the audio stream that plays along with the video component. The collection of audio streams is composed at run time and represents all audio streams available within the media file. </summary>
      <returns>The index within the media file of the audio component that plays along with the video component. The index can be unspecified, in which case the value is null. The default value is null (see the "Remarks" section).</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AudioStreamIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.AudioStreamIndex" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.AudioStreamIndex" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.AutoPlay">
      <summary>Gets or sets a value that indicates whether media will begin playback automatically when the <see cref="P:System.Windows.Controls.MediaElement.Source" /> property is set. </summary>
      <returns>true if playback is automatic; otherwise, false. The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AutoPlayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.AutoPlay" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.AutoPlay" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Balance">
      <summary>Gets or sets a ratio of volume across stereo speakers. </summary>
      <returns>The ratio of volume across speakers in the range between -1 and 1. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BalanceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Balance" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.Balance" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.BufferingProgress">
      <summary>Gets a value that indicates the current buffering progress. </summary>
      <returns>The amount of buffering that is completed for media content. The value ranges from 0 to 1. Multiply by 100 to obtain a percentage. The default value is 0.</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingProgressChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.MediaElement.BufferingProgress" /> property changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingProgressProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.BufferingProgress" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.BufferingProgress" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.BufferingTime">
      <summary>Gets or sets the amount of time to buffer.</summary>
      <returns>The amount of time to buffer. The default value is a <see cref="T:System.TimeSpan" /> with value of 5 seconds (0:0:05).</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.BufferingTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.BufferingTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CanPause">
      <summary>Gets a value indicating if media can be paused if the <see cref="M:System.Windows.Controls.MediaElement.Pause" /> method is called. </summary>
      <returns>true if the media can be paused; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.CanPauseProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.CanPause" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.CanPause" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CanSeek">
      <summary>Gets a value indicating if media can be repositioned by setting the value of the <see cref="P:System.Windows.Controls.MediaElement.Position" /> property. </summary>
      <returns>true if the media can be repositioned; otherwise, false.The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.CanSeekProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.CanSeek" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.CanSeek" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CurrentState">
      <summary>Gets the status of the <see cref="T:System.Windows.Controls.MediaElement" />. </summary>
      <returns>The current state of the <see cref="T:System.Windows.Controls.MediaElement" />. The state can be one of the following (as defined in the <see cref="T:System.Windows.Media.MediaElementState" /> enumeration): <see cref="F:System.Windows.Media.MediaElementState.Buffering" />, <see cref="F:System.Windows.Media.MediaElementState.Closed" />, <see cref="F:System.Windows.Media.MediaElementState.Opening" />, <see cref="F:System.Windows.Media.MediaElementState.Paused" />, <see cref="F:System.Windows.Media.MediaElementState.Playing" />, or <see cref="F:System.Windows.Media.MediaElementState.Stopped" />.The default value is <see cref="F:System.Windows.Media.MediaElementState.Closed" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.CurrentStateChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Controls.MediaElement.CurrentState" /> property changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.CurrentStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.CurrentState" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.CurrentState" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DownloadProgress">
      <summary>Gets a percentage value indicating the amount of download completed for content located on a remote server.</summary>
      <returns>A value that indicates the amount of download completed for content that is located on a remote server. The value ranges from 0 to 1. Multiply by 100 to obtain a percentage. The default value is 0.</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.DownloadProgressChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.MediaElement.DownloadProgress" /> property has changed.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DownloadProgressOffset">
      <summary>Gets the offset of the download progress. </summary>
      <returns>The offset of the download progress.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.DownloadProgressOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.DownloadProgressOffset" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.DownloadProgressOffset" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.DownloadProgressProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.DownloadProgress" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.DownloadProgress" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DroppedFramesPerSecond">
      <summary>Gets the number of frames per second being dropped by the media.</summary>
      <returns>The number of frames per second being dropped by the media.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.DroppedFramesPerSecondProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.DroppedFramesPerSecond" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.DroppedFramesPerSecond" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsMuted">
      <summary>Gets or sets a value indicating whether the audio is muted. </summary>
      <returns>true if audio is muted; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.IsMutedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.IsMuted" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.IsMuted" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.LicenseAcquirer">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.LicenseAcquirer" /> associated with the <see cref="T:System.Windows.Controls.MediaElement" />. The <see cref="T:System.Windows.Media.LicenseAcquirer" /> handles acquiring licenses for DRM encrypted content.</summary>
      <returns>The <see cref="T:System.Windows.Media.LicenseAcquirer" /> associated with the <see cref="T:System.Windows.Controls.MediaElement" />. The default is null.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Windows.Media.LicenseAcquirer" /> is null.</exception>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.LogReady">
      <summary>Occurs when the log is ready.</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MarkerReached">
      <summary>Occurs when a timeline marker is encountered during media playback.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Markers">
      <summary>Gets the collection of timeline markers associated with the currently loaded media file.</summary>
      <returns>The collection of timeline markers (represented as <see cref="T:System.Windows.Media.TimelineMarker" /> objects) associated with the currently loaded media file. The default value is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaEnded">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.MediaElement" />  is no longer playing audio or video.</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaFailed">
      <summary>Occurs when there is an error associated with the media <see cref="P:System.Windows.Controls.MediaElement.Source" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaOpened">
      <summary>Occurs when the media stream has been validated and opened, and the file headers have been read.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalDuration">
      <summary>Gets the duration of the media file currently opened.</summary>
      <returns>The natural duration of the media. The default value is <see cref="P:System.Windows.Duration.Automatic" />, which is the value held if you query this property before <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.NaturalDurationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.NaturalDuration" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.NaturalDuration" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoHeight">
      <summary>Gets the height of the video associated with the media.</summary>
      <returns>The height of the video that is associated with the media, in pixels. Audio files will return 0. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.NaturalVideoHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.NaturalVideoHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.NaturalVideoHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoWidth">
      <summary>Gets the width of the video associated with the media.</summary>
      <returns>The width of the video associated with the media. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.NaturalVideoWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.NaturalVideoWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.NaturalVideoWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Pause">
      <summary>Pauses media at the current position.</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Play">
      <summary>Plays media from the current position.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Position">
      <summary>Gets or sets the current position of progress through the media's playback time.</summary>
      <returns>The amount of time since the beginning of the media. The default is a <see cref="T:System.TimeSpan" /> with value 0:0:0.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.PositionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Position" /> dependency property.</summary>
      <returns>The identifier the <see cref="P:System.Windows.Controls.MediaElement.Position" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.RenderedFramesPerSecond">
      <summary>Gets the number of frames per second being rendered by the media.</summary>
      <returns>The number of frames per second being rendered by the media.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.RenderedFramesPerSecondProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.RenderedFramesPerSecond" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.RenderedFramesPerSecond" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.RequestLog">
      <summary>Sends a request to generate a log which will then be raised through the <see cref="E:System.Windows.Controls.MediaElement.LogReady" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.SetSource(System.IO.Stream)">
      <summary>Sets the <see cref="P:System.Windows.Controls.MediaElement.Source" /> property using the supplied stream.</summary>
      <param name="stream">A stream that contains a valid media source.</param>
      <exception cref="T:System.ArgumentNullException">The s<paramref name="tream" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.SetSource(System.Windows.Media.MediaStreamSource)">
      <summary>This sets the source of a <see cref="T:System.Windows.Controls.MediaElement" /> to a subclass of <see cref="T:System.Windows.Media.MediaStreamSource" />.</summary>
      <param name="mediaStreamSource">A subclass of <see cref="T:System.Windows.Media.MediaStreamSource" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="mediaStreamSource" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The specified <paramref name="mediaStreamSource" /> is invalid, or does not exist.</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Source">
      <summary>Gets or sets a media source on the <see cref="T:System.Windows.Controls.MediaElement" />. </summary>
      <returns>A string that specifies the source of the element, as a Uniform Resource Identifier (URI). The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Source" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.Source" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Stop">
      <summary>Stops and resets media to be played from the beginning.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Stretch">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> value that describes how a <see cref="T:System.Windows.Controls.MediaElement" /> fills the destination rectangle. </summary>
      <returns>A value of the enumeration that specifies the stretch behavior for the rendered media. The default value is Uniform.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Stretch" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.Stretch" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Volume">
      <summary>Gets or sets the media's volume. </summary>
      <returns>The media's volume represented on a linear scale between 0 and 1. The default is 0.5.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.VolumeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Volume" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.Volume" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.MultiScaleImage">
      <summary>Enables users to open a multi-resolution image, which can be zoomed in on and panned across. </summary>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.MultiScaleImage" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.AllowDownloading">
      <summary>Gets or sets a value that indicates whether downloading is permitted by this <see cref="T:System.Windows.Controls.MultiScaleImage" />. </summary>
      <returns>true if downloading is permitted by this <see cref="T:System.Windows.Controls.MultiScaleImage" />. false if downloading is not permitted by this <see cref="T:System.Windows.Controls.MultiScaleImage" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.AllowDownloadingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.AllowDownloading" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.AllowDownloading" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.AspectRatio">
      <summary>Gets the aspect ratio of the image used as the source of the <see cref="T:System.Windows.Controls.MultiScaleImage" />. The aspect ratio is the width of the image divided by its height.</summary>
      <returns>The aspect ratio of the image used as the source of the <see cref="T:System.Windows.Controls.MultiScaleImage" />. The aspect ratio is the width of the image divided by its height.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.AspectRatioProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.AspectRatio" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.AspectRatio" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.BlurFactor">
      <summary>Gets or sets the extent that data is blurred while rendering.</summary>
      <returns>The extent that data is blurred while rendering. A value of 2 means that data is twice as blurry (one level lower), while a value of 0.5 means that data is sharper (one level higher). The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.BlurFactorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.BlurFactor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.BlurFactor" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.ElementToLogicalPoint(System.Windows.Point)">
      <summary>Gets a point with logical coordinates (values between 0 and 1) from a point of the <see cref="T:System.Windows.Controls.MultiScaleImage" />. </summary>
      <returns>The logical point translated from the <paramref name="elementPoint" />.</returns>
      <param name="elementPoint">The point on the <see cref="T:System.Windows.Controls.MultiScaleImage" /> to translate into a point with logical coordinates (values between 0 and 1).</param>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ImageFailed">
      <summary>Occurs if the download of a tile times out or fails for another reason.</summary>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ImageOpenFailed">
      <summary>Occurs if the first piece of metadata used to open the image fails. If this event occurs no parts of the image will open successfully.</summary>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ImageOpenSucceeded">
      <summary>Occurs when the first piece of metadata that is needed to load the rest of the tiles opens.</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.IsDownloading">
      <summary>Gets a value that indicates whether the image is still downloading.</summary>
      <returns>true if the image is still downloading. false if all the needed tiles have been downloaded. If the image is moved, <see cref="P:System.Windows.Controls.MultiScaleImage.IsDownloading" /> may become true again.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.IsDownloadingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.IsDownloading" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.IsDownloading" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.IsIdle">
      <summary>Gets a value that indicates whether Deep Zoom is done downloading, decoding, blending, and animating (if springs are being used) images. </summary>
      <returns>true, if Deep Zoom is done downloading, decoding, blending, and animating (if springs are being used) images. Otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.IsIdleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.IsIdle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.IsIdle" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.LogicalToElementPoint(System.Windows.Point)">
      <summary>Gets a point with pixel coordinates relative to the <see cref="T:System.Windows.Controls.MultiScaleImage" /> from a logical point (values between 0 and 1).</summary>
      <returns>A point with pixel coordinates relative to the <see cref="T:System.Windows.Controls.MultiScaleImage" /> translated from <paramref name="logicalPoint" />.</returns>
      <param name="logicalPoint">The logical point to translate into pixel coordinates relative to the <see cref="T:System.Windows.Controls.MultiScaleImage" />.</param>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.MotionFinished">
      <summary>Occurs when the zoom or pan animation ends. </summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.SkipLevels">
      <summary>Gets or sets  a value that indicates levels to be skipped while loading a <see cref="T:System.Windows.Controls.MultiScaleImage" />. </summary>
      <returns>An integer that represents the levels that are skipped while loading a <see cref="T:System.Windows.Controls.MultiScaleImage" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.SkipLevelsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.SkipLevels" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.SkipLevels" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.Source">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.MultiScaleTileSource" /> object that is used as the source for the <see cref="T:System.Windows.Controls.MultiScaleImage" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.MultiScaleTileSource" /> object that is used as the source for the <see cref="T:System.Windows.Controls.MultiScaleImage" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.Source" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.Source" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.SubImages">
      <summary>Gets the collection of <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> objects within the multiresolution image that is used by the <see cref="T:System.Windows.Controls.MultiScaleImage" />.</summary>
      <returns>The collection of <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> objects within the multiresolution image that is used by the <see cref="T:System.Windows.Controls.MultiScaleImage" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.SubImagesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.SubImages" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.SubImages" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.UseSprings">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MultiScaleImage" /> uses spring animations.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.MultiScaleImage" /> uses spring animations; otherwise, false. The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.UseSpringsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.UseSprings" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.UseSprings" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ViewportChanged">
      <summary>Occurs when the viewport (the area of the image displayed) changes. </summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.ViewportOrigin">
      <summary>Gets or sets the top-left corner of the area of the image to be displayed. </summary>
      <returns>The top-left corner of the rectangular area of the image to be displayed. </returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.ViewportOriginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.ViewportOrigin" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.ViewportOrigin" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.ViewportWidth">
      <summary>Gets or sets the width of the area of the image displayed.</summary>
      <returns>The width of the area of the image displayed. </returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.ViewportWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleImage.ViewportWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleImage.ViewportWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.ZoomAboutLogicalPoint(System.Double,System.Double,System.Double)">
      <summary>Enables a user to zoom in on a point of the <see cref="T:System.Windows.Controls.MultiScaleImage" />.</summary>
      <param name="zoomIncrementFactor">Specifies the zoom. This number is greater than 0. A value of 1 specifies that the image fit the allotted page size exactly. A number greater than 1 specifies to zoom in. If a value of 0 or less is used, failure is returned and no zoom changes are applied.  </param>
      <param name="zoomCenterLogicalX">X coordinate for the point on the <see cref="T:System.Windows.Controls.MultiScaleImage" /> that is zoomed in on. This is a logical point (between 0 and 1). </param>
      <param name="zoomCenterLogicalY">Y coordinate for the point on the <see cref="T:System.Windows.Controls.MultiScaleImage" /> that is zoomed in on. This is a logical point (between 0 and 1).</param>
    </member>
    <member name="T:System.Windows.Controls.MultiScaleSubImage">
      <summary>This class holds the properties for each sub-image within the <see cref="T:System.Windows.Controls.MultiScaleImage" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleSubImage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.AspectRatio">
      <summary>Gets the aspect ratio of the image used as the source of the <see cref="T:System.Windows.Controls.MultiScaleSubImage" />. The aspect ratio is the width of the image divided by its height.</summary>
      <returns>The aspect ratio of the image used as the source of the <see cref="T:System.Windows.Controls.MultiScaleSubImage" />. The aspect ratio is the width of the image divided by its height.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.AspectRatioProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleSubImage.AspectRatio" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleSubImage.AspectRatio" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.Opacity">
      <summary>Gets or sets the degree of the <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> opacity.</summary>
      <returns>A value between 0 and 1.0 that declares the opacity, with 1.0 meaning full opacity and 0 meaning transparent. The default value is 1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.OpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleSubImage.Opacity" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleSubImage.Opacity" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.ViewportOrigin">
      <summary>Gets or sets the top-left corner of the area of the image to be displayed.</summary>
      <returns>The point of the top-left corner of the rectangular area of the image to be displayed.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.ViewportOriginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportOrigin" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportOrigin" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.ViewportWidth">
      <summary>Gets or sets the width of the area of the image displayed.</summary>
      <returns>The width of the area of the image displayed. </returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.ViewportWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportWidth" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.ZIndex">
      <summary>Gets or sets a value that represents the z-order rendering behavior of the <see cref="T:System.Windows.Controls.MultiScaleSubImage" />. Z-order determines the relative rendering order of objects (which object is on top of which other objects).</summary>
      <returns>The value that represents the z-order rendering behavior of the <see cref="T:System.Windows.Controls.MultiScaleSubImage" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.ZIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MultiScaleSubImage.ZIndex" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.MultiScaleSubImage.ZIndex" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.NotifyEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.WebBrowser.ScriptNotify" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.NotifyEventArgs.Value">
      <summary>Gets or sets the JavaScript method name that is passed to the Silverlight plug-in. </summary>
      <returns>The JavaScript method name that is passed to the Silverlight plug-in.</returns>
    </member>
    <member name="T:System.Windows.Controls.OpenFileDialog">
      <summary>Provides a dialog box that enables the user to select one or more files. </summary>
    </member>
    <member name="M:System.Windows.Controls.OpenFileDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.OpenFileDialog" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.OpenFileDialog.File">
      <summary>Gets a <see cref="T:System.IO.FileInfo" /> object for the selected file. If multiple files are selected, returns the first selected file.</summary>
      <returns>The selected file. If multiple files are selected, returns the first selected file.</returns>
    </member>
    <member name="P:System.Windows.Controls.OpenFileDialog.Files">
      <summary>Gets a collection of <see cref="T:System.IO.FileInfo" /> objects for the selected files.</summary>
      <returns>A collection of <see cref="T:System.IO.FileInfo" /> objects for the selected files.</returns>
    </member>
    <member name="P:System.Windows.Controls.OpenFileDialog.Filter">
      <summary>Gets or sets a filter string that specifies the file types and descriptions to display in the <see cref="T:System.Windows.Controls.OpenFileDialog" />.</summary>
      <returns>A filter string that specifies the file types and descriptions to display in the <see cref="T:System.Windows.Controls.OpenFileDialog" />. The default is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentException">The filter string does not contain at least one vertical bar (|).-or-The filter extension does not contain the wildcard character (*). (Silverlight 4 only)</exception>
    </member>
    <member name="P:System.Windows.Controls.OpenFileDialog.FilterIndex">
      <summary>Gets or sets the index of the selected item in the <see cref="T:System.Windows.Controls.OpenFileDialog" /> filter drop-down list.</summary>
      <returns>The index of the selected item in the <see cref="T:System.Windows.Controls.OpenFileDialog" /> filter drop-down list. The default is 1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The filter index is less than 1.</exception>
    </member>
    <member name="P:System.Windows.Controls.OpenFileDialog.Multiselect">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.OpenFileDialog" /> allows users to select multiple files.</summary>
      <returns>true if multiple selections are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Windows.Controls.OpenFileDialog.ShowDialog">
      <summary>Displays an <see cref="T:System.Windows.Controls.OpenFileDialog" /> that is modal to the Web browser window.</summary>
      <returns>true if the user clicked OK; false if the user clicked Cancel or closed the dialog box.</returns>
      <exception cref="T:System.InvalidOperationException">Silverlight was unable to display the dialog box.</exception>
      <exception cref="T:System.Security.SecurityException">Active Scripting in Internet Explorer is disabled.-or-The call to the <see cref="M:System.Windows.Controls.OpenFileDialog.ShowDialog" /> method was not made from user-initiated code or too much time passed between user-initiation and the display of the dialog.</exception>
    </member>
    <member name="T:System.Windows.Controls.Orientation">
      <summary>Defines the different orientations that a control or layout can have.</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Vertical">
      <summary>The control or layout should be vertically oriented.</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Horizontal">
      <summary>The control or layout should be horizontally oriented.</summary>
    </member>
    <member name="T:System.Windows.Controls.Panel">
      <summary>Provides a base class for all <see cref="T:System.Windows.Controls.Panel" /> elements. Use <see cref="T:System.Windows.Controls.Panel" /> elements to position and arrange child objects in Silverlight-based applications. </summary>
    </member>
    <member name="M:System.Windows.Controls.Panel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Panel" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Panel.Background">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" /> that is used to fill the panel. </summary>
      <returns>The brush used to fill the panel. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Panel.Background" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Panel.Background" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.Children">
      <summary>Gets the collection of child elements of the panel. </summary>
      <returns>The collection of child objects. The default is an empty collection.</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.IsItemsHost">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.Panel" /> is a container for UI items that are generated by an <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
      <returns>true if this instance of <see cref="T:System.Windows.Controls.Panel" /> is an items host; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.IsItemsHostProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.PasswordBox">
      <summary>Represents a control for entering passwords.</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PasswordBox" /> class</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.BaselineOffset">
      <summary>Gets a value by which each line of text is offset from a baseline.</summary>
      <returns>The amount by which each line of text is offset from the baseline, in device independent pixels. <see cref="F:System.Double.NaN" /> indicates that an optimal baseline offset is automatically calculated from the current font characteristics. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.CaretBrush">
      <summary>Gets or sets the brush that is used to render the vertical bar that indicates the insertion point.</summary>
      <returns>The brush that is used to render the vertical bar that indicates the insertion point.</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.CaretBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.FontSource">
      <summary>Gets or sets the font source that is applied to the password box for rendering content.</summary>
      <returns>The font source used to render content in the text box. The default is null.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is not a valid source.</exception>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.MaxLength">
      <summary>Gets or sets the maximum length for passwords to be handled by this <see cref="T:System.Windows.Controls.PasswordBox" />.</summary>
      <returns>An integer specifying the maximum length, in character, for passwords to be handled by this <see cref="T:System.Windows.Controls.PasswordBox" />. A value of zero (0) means no limit.The default value is 0 (no length limit).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a negative value.</exception>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.MaxLengthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.Password">
      <summary>Gets or sets the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox" />.</summary>
      <returns>A string representing the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox" />.The default value is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentNullException">The property is set to a null value.</exception>
    </member>
    <member name="E:System.Windows.Controls.PasswordBox.PasswordChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Controls.PasswordBox.Password" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.PasswordChar">
      <summary>Gets or sets the masking character for the <see cref="T:System.Windows.Controls.PasswordBox" />. </summary>
      <returns>A masking character to echo when the user enters text into the <see cref="T:System.Windows.Controls.PasswordBox" />. The default value is a bullet character (●). </returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordCharProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.Password" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.PasswordBox.Password" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.SelectAll">
      <summary>Selects all the character in the <see cref="T:System.Windows.Controls.PasswordBox" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionBackground">
      <summary>Gets or sets the brush used to render the background for the selected text.</summary>
      <returns>The brush that fills the background of the selected text.</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionBackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.SelectionBackground" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.PasswordBox.SelectionBackground" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionForeground">
      <summary>Gets or sets the brush used for the selected text in the <see cref="T:System.Windows.Controls.PasswordBox" />.</summary>
      <returns>The brush used for the selected text in the <see cref="T:System.Windows.Controls.PasswordBox" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.SelectionForeground" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.PasswordBox.SelectionForeground" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ProgressBar">
      <summary>Represents a control that indicates the progress of an operation.</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ProgressBar" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.IsIndeterminate">
      <summary>Gets or sets a value that indicates whether the progress bar reports generic progress with a repeating pattern or reports progress based on the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property. </summary>
      <returns>true if the progress bar reports generic progress with a repeating pattern; false if the progress bar reports progress based on the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.IsIndeterminateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ProgressBar" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> for the <see cref="T:System.Windows.Controls.ProgressBar" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnValueChanged(System.Double,System.Double)">
      <summary>Called when value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property changes.</summary>
      <param name="oldValue">The previous value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="T:System.Windows.Controls.RadioButton">
      <summary>Represents a button that allows a user to select a single option from a group of options.</summary>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.RadioButton" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.RadioButton.GroupName">
      <summary>Gets or sets the name that specifies which <see cref="T:System.Windows.Controls.RadioButton" /> controls are mutually exclusive.</summary>
      <returns>The name that specifies which <see cref="T:System.Windows.Controls.RadioButton" /> controls are mutually exclusive. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.RadioButton.GroupNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RadioButton.GroupName" /> dependency property. </summary>
      <returns>The identifier for <see cref="P:System.Windows.Controls.RadioButton.GroupName" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> for the radio button object.</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnToggle">
      <summary>Sets the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> property to true.</summary>
    </member>
    <member name="T:System.Windows.Controls.RichTextBox">
      <summary>Represents a rich text editing control that supports formatted text, hyperlinks, inline images, and other rich content.</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.RichTextBox" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.AcceptsReturn">
      <summary>Gets or sets a value that determines whether the <see cref="T:System.Windows.Controls.RichTextBox" /> allows and displays the newline or return characters when the ENTER or RETURN keys are pressed.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.RichTextBox" /> allows newline characters; otherwise, false. The default is true. </returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.AcceptsReturnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RichTextBox.AcceptsReturn" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.RichTextBox.AcceptsReturn" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.BaselineOffset">
      <summary>Gets a value that represents the offset in pixels from the top of the content to the baseline of the first paragraph. The baseline of the paragraph is the baseline of the first line in it.</summary>
      <returns>The computed baseline for the first paragraph, or 0 if the <see cref="T:System.Windows.Controls.RichTextBox" /> is empty.</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Blocks">
      <summary>Gets the contents of the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> that contains the contents of the <see cref="T:System.Windows.Controls.RichTextBox" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.CaretBrush">
      <summary>Gets or sets the brush that is used to render the vertical bar that indicates the insertion point.</summary>
      <returns>A brush that is used to render the vertical bar that indicates the insertion point.</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.CaretBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RichTextBox.CaretBrush" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Controls.RichTextBox.CaretBrush" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.RichTextBox.ContentChanged">
      <summary>Occurs when the content changes in a <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.ContentEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that indicates the end of content in the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that indicates the end of content in the <see cref="T:System.Windows.Controls.RichTextBox" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.ContentStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that indicates the start of content in the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that indicates the start of content in the <see cref="T:System.Windows.Controls.RichTextBox" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> that indicates the closest insertion position for the specified point.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that indicates the closest insertion position for the specified point.</returns>
      <param name="point">A point in the coordinate space of the <see cref="T:System.Windows.Controls.RichTextBox" /> for which the closest insertion position is retrieved.</param>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.HorizontalScrollBarVisibility">
      <summary>Gets or sets the visibility of the horizontal scroll bar.</summary>
      <returns>The visibility of the horizontal scroll bar. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.IsReadOnly">
      <summary>Gets or sets a value that determines whether the user can change the text in the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.RichTextBox" /> is read-only; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RichTextBox.IsReadOnly" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.RichTextBox.IsReadOnly" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> for the <see cref="T:System.Windows.Controls.RichTextBox" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.GotFocus" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.KeyUp" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.LostFocus" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseEnter" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseLeave" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.MouseMove" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.TextInput" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnTextInputStart(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.TextInputStart" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnTextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.TextInputUpdate" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.SelectAll">
      <summary>Selects the entire contents in the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Selection">
      <summary>Gets the <see cref="T:System.Windows.Documents.TextSelection" /> in the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextSelection" /> that represents the selected text in the <see cref="T:System.Windows.Controls.RichTextBox" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.RichTextBox.SelectionChanged">
      <summary>Occurs when the text selection has changed.</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.TextAlignment">
      <summary>Gets or sets how the text should be aligned in the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> enumeration values. The default is Left.</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RichTextBox.TextAlignment" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Controls.RichTextBox.TextAlignment" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.TextWrapping">
      <summary>Gets or sets how text wrapping occurs if a line of text extends beyond the available width of the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>One of the <see cref="T:System.Windows.TextWrapping" /> values. The default is <see cref="F:System.Windows.TextWrapping.Wrap" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.TextWrappingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RichTextBox.TextWrapping" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.RichTextBox.TextWrapping" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.VerticalScrollBarVisibility">
      <summary>Gets or sets the visibility of the vertical scroll bar.</summary>
      <returns>The visibility of the vertical scroll bar. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Xaml">
      <summary>Gets or sets a XAML representation of the content in the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>A <see cref="T:System.String" /> object that is a XAML representation of the content in the <see cref="T:System.Windows.Controls.RichTextBox" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.RowDefinition">
      <summary>Defines row-specific properties that apply to <see cref="T:System.Windows.Controls.Grid" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.RowDefinition" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.ActualHeight">
      <summary>Gets a value that represents the calculated height of the <see cref="T:System.Windows.Controls.RowDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the calculated height in pixels. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Height">
      <summary>Gets the calculated height of a <see cref="T:System.Windows.Controls.RowDefinition" /> element, or sets the <see cref="T:System.Windows.GridLength" /> value of a row that is defined by the <see cref="T:System.Windows.Controls.RowDefinition" />. </summary>
      <returns>The <see cref="T:System.Windows.GridLength" /> that represents the height of the row. The default value is 1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.HeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RowDefinition.Height" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.RowDefinition.Height" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MaxHeight">
      <summary>Gets or sets a value that represents the maximum height of a <see cref="T:System.Windows.Controls.RowDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the maximum height. </returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MaxHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MinHeight">
      <summary>Gets or sets a value that represents the minimum allowed height of a <see cref="T:System.Windows.Controls.RowDefinition" />. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the minimum allowed height. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MinHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RowDefinition.MinHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.RowDefinition.MinHeight" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.RowDefinitionCollection">
      <summary>Provides access to an ordered, strongly typed collection of <see cref="T:System.Windows.Controls.RowDefinition" /> objects.</summary>
    </member>
    <member name="T:System.Windows.Controls.SaveFileDialog">
      <summary>Provides a dialog box that enables the user to specify options for saving a file.</summary>
    </member>
    <member name="M:System.Windows.Controls.SaveFileDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SaveFileDialog" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.SaveFileDialog.DefaultExt">
      <summary>Gets or sets the default file name extension applied to files that are saved with the <see cref="T:System.Windows.Controls.SaveFileDialog" />.</summary>
      <returns>The default file name extension applied to files that are saved with the <see cref="T:System.Windows.Controls.SaveFileDialog" />, which can optionally include the dot character (.).</returns>
    </member>
    <member name="P:System.Windows.Controls.SaveFileDialog.Filter">
      <summary>Gets or sets a filter string that specifies the files types and descriptions to display in the <see cref="T:System.Windows.Controls.SaveFileDialog" />.</summary>
      <returns>A filter string that specifies the file types and descriptions to display in the <see cref="T:System.Windows.Controls.SaveFileDialog" />. The default is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentException">The filter string does not contain at least one vertical bar (|).</exception>
    </member>
    <member name="P:System.Windows.Controls.SaveFileDialog.FilterIndex">
      <summary>Gets or sets the index of the selected item in the Save as type drop-down list.</summary>
      <returns>The index of the selected item in the Save as type filter drop-down list. The default is 1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The filter index is less than 1.</exception>
    </member>
    <member name="M:System.Windows.Controls.SaveFileDialog.OpenFile">
      <summary>Opens the file specified by the <see cref="P:System.Windows.Controls.SaveFileDialog.SafeFileName" /> property.</summary>
      <returns>A read-write stream for the file specified by the <see cref="P:System.Windows.Controls.SaveFileDialog.SafeFileName" /> property.</returns>
      <exception cref="T:System.InvalidOperationException">No file was selected in the dialog box.</exception>
    </member>
    <member name="P:System.Windows.Controls.SaveFileDialog.SafeFileName">
      <summary>Gets the file name for the selected file associated with the <see cref="T:System.Windows.Controls.SaveFileDialog" />.</summary>
      <returns>The file name for the selected file associated with the <see cref="T:System.Windows.Controls.SaveFileDialog" />. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.SaveFileDialog.ShowDialog">
      <summary>Displays a <see cref="T:System.Windows.Controls.SaveFileDialog" /> that is modal to the Web browser window.</summary>
      <returns>true if the user clicked Save; false if the user clicked Cancel or closed the dialog box.</returns>
      <exception cref="T:System.InvalidOperationException">Silverlight was unable to display the dialog box due to an improperly formatted filter, an invalid filter index or other reasons.</exception>
      <exception cref="T:System.Security.SecurityException">Active Scripting in Internet Explorer is disabled.-or-The call to the <see cref="M:System.Windows.Controls.OpenFileDialog.ShowDialog" /> method was not made from user-initiated code or too much time passed between user-initiation and the display of the dialog.</exception>
    </member>
    <member name="T:System.Windows.Controls.ScrollBarVisibility">
      <summary>Specifies the visibility of a scrollbar within a <see cref="T:System.Windows.Controls.ScrollViewer" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Disabled">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> does not appear even when the viewport cannot display all of the content. The dimension of the content is set to the corresponding dimension of the <see cref="T:System.Windows.Controls.ScrollViewer" /> parent. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the width of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the height of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Auto">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> appears and the dimension of the <see cref="T:System.Windows.Controls.ScrollViewer" /> is applied to the content when the viewport cannot display all of the content. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the width of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the height of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Hidden">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> does not appear even when the viewport cannot display all of the content. The dimension of the <see cref="T:System.Windows.Controls.ScrollViewer" /> is not applied to the content.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Visible">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> always appears. The dimension of the <see cref="T:System.Windows.Controls.ScrollViewer" /> is applied to the content. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the width of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the height of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollContentPresenter">
      <summary>Displays the content of a <see cref="T:System.Windows.Controls.ScrollViewer" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
      <returns>true if scrolling is possible; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
      <returns>true if scrolling is possible; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight">
      <summary>Gets the vertical size of the extent.</summary>
      <returns>The vertical size of the extent.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentWidth">
      <summary>Gets the horizontal size of the extent.</summary>
      <returns>The horizontal size of the extent.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.HorizontalOffset">
      <summary>Gets or sets the distance the content has been scrolled horizontally.</summary>
      <returns>The distance the content has been scrolled horizontally.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineDown">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content downward by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineLeft">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content to the left by a predetermined amount.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineRight">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content to the right by a predetermined amount.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineUp">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content upward by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
      <summary>Forces content to scroll until the coordinate space of a visual object is visible.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that represents the visible region. </returns>
      <param name="visual">A <see cref="T:System.Windows.UIElement" /> that becomes visible.</param>
      <param name="rectangle">The bounding rectangle that identifies the coordinate space to make visible.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelDown">
      <summary>Scrolls down within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelLeft">
      <summary>Scrolls left within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelRight">
      <summary>Scrolls right within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelUp">
      <summary>Scrolls up within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageDown">
      <summary>Scrolls down within the content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageLeft">
      <summary>Scrolls left within the content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageRight">
      <summary>Scrolls right within the content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageUp">
      <summary>Scrolls up within the content by one page.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ScrollOwner">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetHorizontalOffset(System.Double)">
      <summary>Sets the distance the content has been scrolled horizontally.</summary>
      <param name="offset">The distance the content has been scrolled horizontally.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetVerticalOffset(System.Double)">
      <summary>Sets the distance the content has been scrolled vertically.</summary>
      <param name="offset">The distance the content has been scrolled vertically.</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.VerticalOffset">
      <summary>Gets or sets the distance the content has been scrolled vertically.</summary>
      <returns>The distance the content has been scrolled vertically.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight">
      <summary>Gets the vertical size of the viewport.</summary>
      <returns>The vertical size of the viewport.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportWidth">
      <summary>Gets the horizontal size of the viewport.</summary>
      <returns>The horizontal size of the viewport.</returns>
    </member>
    <member name="T:System.Windows.Controls.ScrollViewer">
      <summary>Represents a scrollable area that can contain other visible elements. </summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ScrollViewer" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
      <summary>Gets a value that indicates whether the horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is visible. </summary>
      <returns>A <see cref="T:System.Windows.Visibility" /> that indicates whether the horizontal scroll bar is visible. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
      <summary>Gets a value that indicates whether the vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is visible. </summary>
      <returns>A <see cref="T:System.Windows.Visibility" /> that indicates whether the vertical scroll bar is visible. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
      <summary>Gets the vertical size of all the content for display in the <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>The vertical size of all the content for display in the <see cref="T:System.Windows.Controls.ScrollViewer" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentHeightProperty">
      <summary>Identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
      <summary>Gets the horizontal size of all the content for display in the <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>The horizontal size of all the content for display in the <see cref="T:System.Windows.Controls.ScrollViewer" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentWidthProperty">
      <summary>Identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> dependency property from a specified element.</summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> dependency property.</returns>
      <param name="element">The element from which the property value is read.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> dependency property from a specified element.</summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> dependency property.</returns>
      <param name="element">The element from which the property value is read.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
      <summary>Gets a value that contains the horizontal offset of the scrolled content. </summary>
      <returns>The horizontal offset of the scrolled content. The default value is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> value that indicates whether a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.InvalidateScrollInfo">
      <summary>Called when the value of properties that describe the size and location of the scroll area change. </summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ScrollViewer" /> control when a new template is applied.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
      <summary>Gets a value that represents the vertical size of the area that can be scrolled; the difference between the width of the extent and the width of the viewport.</summary>
      <returns>The vertical size of the area that can be scrolled. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
      <summary>Gets a value that represents the horizontal size of the area that can be scrolled; the difference between the width of the extent and the width of the viewport.. </summary>
      <returns>The horizontal size of the area that can be scrolled. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
      <summary>Scrolls the content that is within the <see cref="T:System.Windows.Controls.ScrollViewer" /> to the specified horizontal offset position.</summary>
      <param name="offset">The position that the content scrolls to.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
      <summary>Scrolls the content that is within the <see cref="T:System.Windows.Controls.ScrollViewer" /> to the specified vertical offset position.</summary>
      <param name="offset">The position that the content scrolls to.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> dependency property to a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="horizontalScrollBarVisibility">The property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> dependency property to a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="verticalScrollBarVisibility">The property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
      <summary>Gets a value that contains the vertical offset of the scrolled content.</summary>
      <returns>The vertical offset of the scrolled content. The default value is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. </summary>
      <returns>A <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> value that indicates whether a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
      <summary>Gets a value that contains the vertical size of the viewable content. </summary>
      <returns>The vertical size of the viewable content. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
      <summary>Gets a value that contains the horizontal size of the viewable content.</summary>
      <returns>The horizontal size of the viewable content. The default value is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.#ctor(System.Collections.IList,System.Collections.IList)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> class. </summary>
      <param name="removedItems">The items that were unselected.</param>
      <param name="addedItems">The items that were selected.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="removedItems" /> or <paramref name="addedItems" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.AddedItems">
      <summary>Gets a list that contains the items that were selected. </summary>
      <returns>The items that were selected in this event.</returns>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.RemovedItems">
      <summary>Gets a list that contains the items that were unselected. </summary>
      <returns>The items that were unselected in this event.</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event. </summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.SelectionMode">
      <summary>Defines the selection behavior for a <see cref="T:System.Windows.Controls.ListBox" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Single">
      <summary>The user can select only one item at a time. </summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Multiple">
      <summary>The user can select multiple items without pressing a modifier key.</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Extended">
      <summary>The user can select multiple items by pressing a modifier key.</summary>
    </member>
    <member name="T:System.Windows.Controls.Slider">
      <summary>Represents a control that lets the user select from a range of values by moving a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control along a track.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Slider" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsDirectionReversed">
      <summary>Gets or sets a value that indicates the direction of increasing value. </summary>
      <returns>true if the direction of increasing value is to the left for a horizontal slider or down for a vertical slider; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsDirectionReversedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsFocused">
      <summary>Gets a value indicating whether the slider control has focus.</summary>
      <returns>true if the slider control has focus; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsFocusedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsFocused" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Slider.IsFocused" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Slider" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> object for use by the automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> object for use by the slider control.</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximumChanged(System.Double,System.Double)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property changes.</summary>
      <param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
      <param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimumChanged(System.Double,System.Double)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property changes.</summary>
      <param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
      <param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnValueChanged(System.Double,System.Double)">
      <summary>Updates the current position of the <see cref="T:System.Windows.Controls.Slider" /> when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property changes.</summary>
      <param name="oldValue">The old <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Slider" />.</param>
      <param name="newValue">The new <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Slider" />.</param>
    </member>
    <member name="P:System.Windows.Controls.Slider.Orientation">
      <summary>Gets or sets the orientation of a <see cref="T:System.Windows.Controls.Slider" />. </summary>
      <returns>One of the <see cref="T:System.Windows.Controls.Orientation" /> values. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.Orientation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Slider.Orientation" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.StackPanel">
      <summary>Arranges child elements into a single line that can be oriented horizontally or vertically. </summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.StackPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and determines a size for the derived class. </summary>
      <returns>The actual size used.</returns>
      <param name="arrangeSize">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the size in layout required for child elements and determines a size for the derived class. </summary>
      <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
      <param name="constraint">The available size that this element can give to child elements.</param>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.Orientation">
      <summary>Gets or sets the dimension by which child elements are stacked.  </summary>
      <returns>One of the enumeration values that specifies the orientation of child elements. The default is <see cref="F:System.Windows.Controls.Orientation.Vertical" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StackPanel.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.StretchDirection">
      <summary>Describes the direction that content is scaled.</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.UpOnly">
      <summary>The content scales upward only when it is smaller than the parent. If the content is larger, no scaling downward is performed.</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.DownOnly">
      <summary>The content scales downward only when it is larger than the parent. If the content is smaller, no scaling upward is performed.</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.Both">
      <summary>The content stretches to fit the parent according to the <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> property.</summary>
    </member>
    <member name="T:System.Windows.Controls.TextBlock">
      <summary>Provides a lightweight control for displaying small amounts of text..</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBlock" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BaselineOffset">
      <summary>Returns a value by which each line of text is offset from a baseline.</summary>
      <returns>The amount by which each line of text is offset from the baseline, in device independent pixels. . <see cref="F:System.Double.NaN" /> indicates that an optimal baseline offset is automatically calculated from the current font characteristics. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the text content in this element. </summary>
      <returns>A <see cref="T:System.Windows.Media.FontFamily" /> object that specifies the preferred font family, or a primary preferred font family with one or more fallback font families. For information about defaults, see the <see cref="T:System.Windows.Media.FontFamily" /> class topic.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="FontFamily" /> is null.</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontSize">
      <summary>Gets or sets the font size for the text content in this element. </summary>
      <returns>A non-negative value that specifies the font size, measured in pixels. The default is 11.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontSource">
      <summary>Gets or sets the font source that is applied to the text for rendering content.</summary>
      <returns>The font source that is used to render content in the text box.  The default is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStretch">
      <summary>Gets or sets the font stretch for the text content in this element. </summary>
      <returns>The requested font stretch, which is a <see cref="T:System.Windows.FontStretch" /> that is obtained from one of the <see cref="T:System.Windows.FontStretches" /> property values. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStyle">
      <summary>Gets or sets the font style for the content in this element. </summary>
      <returns>The requested font style, which is a <see cref="T:System.Windows.FontStyle" /> that is obtained from one of the <see cref="T:System.Windows.FontStyles" /> property values. The default is <see cref="P:System.Windows.FontStyles.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontWeight">
      <summary>Gets or sets the top-level font weight for the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>The requested font weight, which is a <see cref="T:System.Windows.FontWeight" /> that is obtained from one of the <see cref="T:System.Windows.FontWeights" /> property values. The default is <see cref="P:System.Windows.FontWeights.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the text contents of the <see cref="T:System.Windows.Controls.TextBlock" />. </summary>
      <returns>The brush used to apply to the text contents. The default is a <see cref="T:System.Windows.Media.SolidColorBrush" /> with a <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> value of <see cref="P:System.Windows.Media.Colors.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Inlines">
      <summary>Gets the collection of inline text elements within a <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>A collection that holds all inline text elements from the <see cref="T:System.Windows.Controls.TextBlock" />.The default is an empty collection.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineHeight">
      <summary>Gets or sets the height of each line of content. </summary>
      <returns>The height of each line in pixels. A value of 0 indicates that the line height is determined automatically from the current font characteristics. The default is 0.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> is set to a non-positive value.</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineStackingStrategy">
      <summary>Gets or sets a value that indicates how a line box is determined for each line of text in the <see cref="T:System.Windows.Controls.TextBlock" />. </summary>
      <returns>A value that indicates how a line box is determined for each line of text in the <see cref="T:System.Windows.Controls.TextBlock" />. The default is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Padding">
      <summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area and the content displayed by a <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of padding to apply.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Padding" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Padding" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Text">
      <summary>Gets or sets the text contents of a <see cref="T:System.Windows.Controls.TextBlock" />. </summary>
      <returns>A string that specifies the text contents of this <see cref="T:System.Windows.Controls.TextBlock" />. The default is an empty string.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content. </summary>
      <returns>The text alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextDecorations">
      <summary>Gets or sets a value that specifies the text decorations that are applied to the content in a <see cref="T:System.Windows.Controls.TextBlock" /> element. </summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" />, or null if no text decorations are applied.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Text" /> dependency property.</summary>
      <returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.Text" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextTrimming">
      <summary>Gets or sets the text trimming behavior to employ when content overflows the content area.</summary>
      <returns>One of the <see cref="T:System.Windows.TextTrimming" /> values that specifies the text trimming behavior to employ. The default is <see cref="F:System.Windows.TextTrimming.None" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextTrimmingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> dependency property.</summary>
      <returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextWrapping">
      <summary>Gets or sets how the <see cref="T:System.Windows.Controls.TextBlock" /> wraps text.</summary>
      <returns>A value that indicates how the <see cref="T:System.Windows.Controls.TextBlock" /> wraps text. The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextWrappingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> dependency property. </summary>
      <returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.TextBox">
      <summary>Represents a control that can be used to display single-format, multi-line text.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.AcceptsReturn">
      <summary>Gets or sets the value that determines whether the text box allows and displays the newline or return characters.</summary>
      <returns>true if the text box allows newline characters; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.AcceptsReturnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.AcceptsReturn" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.AcceptsReturn" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.BaselineOffset">
      <summary>Gets a value by which each line of text is offset from a baseline.</summary>
      <returns>The amount by which each line of text is offset from the baseline, in device independent pixels. <see cref="F:System.Double.NaN" /> indicates that an optimal baseline offset is automatically calculated from the current font characteristics. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CaretBrush">
      <summary>Gets or sets the brush that is used to render the vertical bar that indicates the insertion point.</summary>
      <returns>A brush that is used to render the vertical bar that indicates the insertion point.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.CaretBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.CaretBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.CaretBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.FontSource">
      <summary>Gets or sets the font source that is applied to the <see cref="T:System.Windows.Controls.TextBox" /> for rendering content.</summary>
      <returns>The font source used to render content in the text box. The default is null.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is not a valid source.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)">
      <summary>Returns a rectangle for the leading edge of the character at the specified index.</summary>
      <returns>A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined. </returns>
      <param name="charIndex">A zero-based character index of the character for which to retrieve the rectangle.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)">
      <summary>Returns a rectangle for the leading or trailing edge of the character at the specified index.</summary>
      <returns>A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined. </returns>
      <param name="charIndex">A zero-based character index of the character for which to retrieve the rectangle.</param>
      <param name="trailingEdge">true to get the trailing edge of the character; false to get the leading edge of the character.</param>
    </member>
    <member name="P:System.Windows.Controls.TextBox.HorizontalScrollBarVisibility">
      <summary>Gets or sets the visibility of the horizontal scroll bar.</summary>
      <returns>The visibility of the horizontal scroll bar. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.InputScope">
      <summary>Gets or sets the context for input used by this <see cref="T:System.Windows.Controls.TextBox" />. </summary>
      <returns>The input scope, which modifies how input from alternative input methods is interpreted. The default value is a null reference (Nothing in Visual Basic).</returns>
      <exception cref="T:System.NotImplementedException">API is not supported by the current platform variation.</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.InputScopeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.InputScope" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Controls.TextBox.InputScope" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.IsReadOnly">
      <summary>Gets or sets the value that determines if the user can change the text in the text box.</summary>
      <returns>true if the text box is read-only; otherwise, false.  The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.IsReadOnly" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.IsReadOnly" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLength">
      <summary>Gets or sets the value that determines the maximum number of characters allowed for user input.</summary>
      <returns>The maximum number of characters allowed for user input.  The default is 0.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than 0.</exception>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLengthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> for the <see cref="T:System.Windows.Controls.TextBox" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Called before <see cref="E:System.Windows.UIElement.GotFocus" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when <see cref="E:System.Windows.UIElement.KeyDown" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Called before <see cref="E:System.Windows.UIElement.KeyUp" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Called before <see cref="E:System.Windows.UIElement.LostFocus" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Called before <see cref="E:System.Windows.UIElement.MouseEnter" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Called before <see cref="E:System.Windows.UIElement.MouseLeave" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called before <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event occurs.</summary>
      <param name="e">The data for the event. The event data reports that the left mouse button was pressed.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called before <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event occurs.</summary>
      <param name="e">The data for the event. The event data reports that the left mouse button was released.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Called before <see cref="E:System.Windows.UIElement.MouseMove" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.TextInput" /> event occurs.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnTextInputStart(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.TextInputStart" /> event occurs.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnTextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Called before the <see cref="E:System.Windows.UIElement.TextInputUpdate" /> event occurs.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)">
      <summary>Selects a range of text in the text box.</summary>
      <param name="start">The zero-based index of the first character in the selection.</param>
      <param name="length">The length of the selection, in characters.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="start" /> or <paramref name="length" /> value is negative.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.SelectAll">
      <summary>Selects the entire contents of the text box.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectedText">
      <summary>Gets or sets the content of the current selection in the text box.</summary>
      <returns>The currently selected text in the text box.  If no text is selected, the value is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value is set to null.</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionBackground">
      <summary>Gets or sets the brush that fills the background of the selected text.</summary>
      <returns>The brush that fills the background of the selected text.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.SelectionBackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.SelectionBackground" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.SelectionBackground" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.TextBox.SelectionChanged">
      <summary>Occurs when the text selection has changed.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionForeground">
      <summary>Gets or sets the brush used for the selected text in the text box.</summary>
      <returns>The brush used for the selected text in the text box.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.SelectionForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.SelectionForeground" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.SelectionForeground" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionLength">
      <summary>Gets or sets the number of characters in the current selection in the text box.</summary>
      <returns>The number of characters in the current selection in the text box, or 0 if there is no selection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionStart">
      <summary>Gets or sets the starting position of the text selected in the text box.</summary>
      <returns>The starting position of the current selection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Text">
      <summary>Gets or sets the text contents of the text box.</summary>
      <returns>A string containing the text contents of the text box. The default is an empty string ("").</returns>
      <exception cref="T:System.ArgumentNullException">The value is set to null.</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextAlignment">
      <summary>Gets or sets how the text should be aligned in the text box.</summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> enumeration values.  The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.TextBox.TextChanged">
      <summary>Occurs when content changes in the text box.</summary>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextWrapping">
      <summary>Gets or sets how line breaking occurs if a line of text extends beyond the available width of the text box.</summary>
      <returns>One of the <see cref="T:System.Windows.TextWrapping" /> values. The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextWrappingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.VerticalScrollBarVisibility">
      <summary>Gets or sets the visibility of the vertical scroll bar.</summary>
      <returns>The visibility of the vertical scroll bar. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Watermark">
      <summary>Gets or sets the content displayed as a watermark in the <see cref="T:System.Windows.Controls.TextBox" /> when it is empty.</summary>
      <returns>The content displayed as a watermark in the <see cref="T:System.Windows.Controls.TextBox" /> when it is empty.</returns>
      <exception cref="T:System.NotImplementedException">API is not supported by the current platform variation.</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.WatermarkProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.Watermark" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Controls.TextBox.Watermark" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.TextBox.TextChanged" /> event.</summary>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.TextBox.TextChanged" /> event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.ToolTip">
      <summary>Represents a control that creates a pop-up window that displays information for an element in the UI. </summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ToolTip" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Closed">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.ToolTip" /> is closed and is no longer visible. </summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HorizontalOffset">
      <summary>Gets or sets the horizontal distance between the target origin and the pop-up alignment point. </summary>
      <returns>The horizontal distance between the target origin and the pop-up alignment point. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.IsOpen">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ToolTip" /> is visible.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.ToolTip" /> is visible; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.IsOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ToolTip" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnCreateAutomationPeer">
      <summary>Returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.ToolTip" /> object.</returns>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Opened">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.ToolTip" /> becomes visible.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.Placement">
      <summary>Gets or sets how the <see cref="T:System.Windows.Controls.ToolTip" /> should be positioned in relation to the <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> values. The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.Placement" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.Placement" />dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementTarget">
      <summary>Gets or sets the visual element or control that the tool tip should be positioned in relation to when opened by the <see cref="T:System.Windows.Controls.ToolTipService" />.</summary>
      <returns>The visual element or control that the tool tip should be positioned in relation to when opened by the <see cref="T:System.Windows.Controls.ToolTipService" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.VerticalOffset">
      <summary>Gets or sets the vertical distance between the target origin and the pop-up alignment point.</summary>
      <returns>The vertical distance between the target origin and the pop-up alignment point. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolTipService">
      <summary>Represents a service that provides static methods to display a tooltip.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacement(System.Windows.DependencyObject)">
      <summary>Gets the relative position of the specified tooltip.</summary>
      <returns>The relative position of the specified tooltip.</returns>
      <param name="element">The tooltip retrieve the position of.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary>Gets the visual element that the tooltip is positioned relative to.</summary>
      <returns>The visual element that the tooltip is positioned relative to.</returns>
      <param name="element">The tooltip to retrieve the visual element of.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetToolTip(System.Windows.DependencyObject)">
      <summary>Gets the tooltip for an object.</summary>
      <returns>The object's tooltip value.</returns>
      <param name="element">The object from which the property value is read.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.Placement">
      <summary>Gets or sets the position of the tooltip in relation to its target visual element.</summary>
      <returns>The position of the tooltip in relation to its target visual element.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.Placement" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.Placement" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementTarget">
      <summary>Gets or sets the visual element that the tooltip should be positioned in relation to.</summary>
      <returns>The visual element that the tooltip should be displayed in relation to.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary>Sets the position of the specified <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> using the specified placement mode.</summary>
      <param name="element">The tooltip to set the position of.</param>
      <param name="value">One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> values that specify where the tooltip should appear relative to the control that is the placement target. </param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>Sets the position of the specified <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> relative to the specified value element.</summary>
      <param name="element">The tooltip to set the position of.</param>
      <param name="value">The visual element to set the tooltip for.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetToolTip(System.Windows.DependencyObject,System.Object)">
      <summary>Sets the tooltip for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ToolTip">
      <summary>Gets or sets a tooltip to be attached to a control.</summary>
      <returns>The tooltip to display for a control.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.UIElementCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.UIElement" /> objects.</summary>
    </member>
    <member name="T:System.Windows.Controls.UserControl">
      <summary>Provides the base class for defining a new control that encapsulates related existing controls and provides its own logic.</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.UserControl" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.UserControl.Content">
      <summary>Gets or sets the content that is contained within a user control.</summary>
      <returns>The content of the user control.</returns>
    </member>
    <member name="F:System.Windows.Controls.UserControl.ContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.UserControl.Content" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.UserControl.Content" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Validation">
      <summary>Provides methods and attached properties that support data validation and govern the visual state of the control.</summary>
    </member>
    <member name="P:System.Windows.Controls.Validation.Errors">
      <summary>Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects associated with the binding target element. </summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects associated with the binding target element. </returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.Errors" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.Errors" /> attached property for the specified element.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects associated with the specified element. </returns>
      <param name="element">The element to retrieve the errors for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.HasError" /> attached property for the specified element.</summary>
      <returns>true if any binding on the specified element has a validation error; otherwise, false. </returns>
      <param name="element">The element to check for errors.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.Validation.HasError">
      <summary>Gets a value that indicates whether any binding on the target element has a validation error. </summary>
      <returns>true if any binding on the target element has a validation error; otherwise, false. </returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.HasErrorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.HasError" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationError">
      <summary>Represents a validation error that is generated by the binding engine when an exception occurs during target-to-source updates. </summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.ErrorContent">
      <summary>Gets the error message. </summary>
      <returns>The error message. </returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.Exception">
      <summary>Gets the exception that caused the validation error.</summary>
      <returns>The exception that caused the validation error.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventAction">
      <summary>Describes the reason a <see cref="E:System.Windows.FrameworkElement.BindingValidationError" /> event has occurred.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Added">
      <summary>A new <see cref="T:System.Windows.Controls.ValidationError" /> has occurred.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Removed">
      <summary>An existing <see cref="T:System.Windows.Controls.ValidationError" /> has been removed.</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.FrameworkElement.BindingValidationError" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Action">
      <summary>Gets the state of the validation error.</summary>
      <returns>One of the enumeration values that indicates the state of the validation error.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Error">
      <summary>Gets the validation error that caused the <see cref="E:System.Windows.FrameworkElement.BindingValidationError" /> event.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ValidationError" /> object that contains the exception that caused the validation error.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Handled">
      <summary>Gets or sets the value that marks the routed event as handled.</summary>
      <returns>true if the event is handled; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Controls.Viewbox">
      <summary>Defines a content decorator that can stretch and scale a single child to fill the available space. </summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Viewbox" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Child">
      <summary>Gets or sets the single child element of a <see cref="T:System.Windows.Controls.Viewbox" /> element.</summary>
      <returns>The single child element of a <see cref="T:System.Windows.Controls.Viewbox" /> element.</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Stretch">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Stretch" /> mode, which determines how content fits into the available space.</summary>
      <returns>A <see cref="T:System.Windows.Media.Stretch" /> mode, which determines how content fits in the available space. The default is <see cref="F:System.Windows.Media.Stretch.Uniform" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.StretchDirection" />, which determines how scaling is applied to the contents of a <see cref="T:System.Windows.Controls.Viewbox" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.StretchDirection" />, which determines how scaling is applied to the contents of a <see cref="T:System.Windows.Controls.Viewbox" />. The default is <see cref="F:System.Windows.Controls.StretchDirection.Both" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> dependency property. </returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationMode">
      <summary>Specifies the method the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> uses to manage virtualizing its child items.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Standard">
      <summary>Create and discard the item containers.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Recycling">
      <summary>Reuse the item containers.</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingPanel">
      <summary>Provides a framework for <see cref="T:System.Windows.Controls.Panel" /> elements that virtualize their visual children. </summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)">
      <summary>Adds the specified <see cref="T:System.Windows.UIElement" /> to the <see cref="P:System.Windows.Controls.Panel.Children" /> collection of a <see cref="T:System.Windows.Controls.VirtualizingPanel" /> element.</summary>
      <param name="child">The <see cref="T:System.Windows.UIElement" /> child to add to the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)">
      <summary>When implemented in a derived class, generates the item at the specified index location and makes it visible.</summary>
      <param name="index">The index position of the item that is generated and made visible.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)">
      <summary>Adds the specified <see cref="T:System.Windows.UIElement" /> to the collection of a <see cref="T:System.Windows.Controls.VirtualizingPanel" /> element at the specified index position.</summary>
      <param name="index">The index position within the collection at which the child element is inserted.</param>
      <param name="child">The <see cref="T:System.Windows.UIElement" /> child to add to the collection.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator">
      <summary>Gets a value that identifies the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> for this <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> for this <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnClearChildren">
      <summary>Called when the collection of child elements is cleared by the base <see cref="T:System.Windows.Controls.Panel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> for this <see cref="T:System.Windows.Controls.Panel" /> changes.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="args">Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)">
      <summary>Removes child elements from the <see cref="P:System.Windows.Controls.Panel.Children" /> collection.</summary>
      <param name="index">The beginning index position within the collection at which the first child element is removed.</param>
      <param name="range">The total number of child elements to remove from the collection.</param>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingStackPanel">
      <summary>Arranges and virtualizes content on a single line that is oriented either horizontally or vertically.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> element.</summary>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> element and its child elements.</returns>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> that this element should use to arrange its child elements.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> can scroll in the horizontal dimension.</summary>
      <returns>true if content can scroll in the horizontal dimension; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether content can scroll in the vertical dimension.</summary>
      <returns>true if content can scroll in the vertical dimension; otherwise, false. The default is false.</returns>
    </member>
    <member name="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
      <summary>Occurs when an item that is hosted by the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is re-virtualized.</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
      <summary>Gets a value that contains the vertical size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the extent, in pixels. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
      <summary>Gets a value that contains the horizontal size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the horizontal size of the extent, in pixels. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetIsVirtualizing(System.Windows.DependencyObject)">
      <summary>Gets a value that determines whether the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is virtualizing its content.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is virtualizing its content; otherwise false.</returns>
      <param name="o">The object being virtualized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="o" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetVirtualizationMode(System.Windows.DependencyObject)">
      <summary>Returns the <see cref="T:System.Windows.Controls.VirtualizationMode" /> for the specified object.</summary>
      <returns>One of the enumeration values that specifies whether the object uses container recycling.</returns>
      <param name="element">The object from which the <see cref="T:System.Windows.Controls.VirtualizationMode" /> is read.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
      <summary>Gets a value that contains the horizontal offset of the scrolled content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the horizontal offset of the scrolled content, in pixels. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is virtualizing its child collection.</summary>
      <returns>true if this instance of <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is virtualizing its child collection; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
      <summary>A value that indicates whether the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is using virtualization.</summary>
      <returns>A value that indicates whether the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is using virtualization.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
      <summary>Scrolls content downward by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
      <summary>Scrolls content to the left by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
      <summary>Scrolls content to the right by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
      <summary>Scrolls content upward by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
      <summary>Scrolls to the specified coordinates and makes that portion of a <see cref="T:System.Windows.UIElement" /> visible.</summary>
      <returns>Rectangular area of the <see cref="T:System.Windows.UIElement" /> now visible.</returns>
      <param name="visual">The <see cref="T:System.Windows.UIElement" /> that becomes visible.</param>
      <param name="rectangle">A <see cref="T:System.Windows.Rect" /> that represents the coordinate space within a <see cref="T:System.Windows.UIElement" />.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</returns>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
      <summary>Scrolls content logically downward in response to a downward click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
      <summary>Scrolls content logically to the left in response to a left click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
      <summary>Scrolls content logically to the right in response to a right click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
      <summary>Scrolls content logically upward in response to an upward click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>Called when an item that is hosted by the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is re-virtualized.</summary>
      <param name="e">Data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren">
      <summary>Called when the collection of child elements is cleared by the base <see cref="T:System.Windows.Controls.Panel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> for this <see cref="T:System.Windows.Controls.Panel" /> changes.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="args">Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
      <summary>Gets or sets a value that describes the horizontal or vertical orientation of stacked content.</summary>
      <returns>Dependency property identifier field: <see cref="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty" />The <see cref="T:System.Windows.Controls.Orientation" /> of child content. The default is <see cref="F:System.Windows.Controls.Orientation.Vertical" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
      <summary>Scrolls content downward by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
      <summary>Scrolls content to the left by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
      <summary>Scrolls content to the right by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
      <summary>Scrolls content upward by one page.</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
      <summary>Gets or sets a value that identifies the container that controls scrolling behavior in this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ScrollViewer" /> that owns scrolling for this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> property.</summary>
      <param name="offset">The value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> property.</summary>
      <param name="offset">The value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)">
      <summary>Sets the <see cref="T:System.Windows.Controls.VirtualizationMode" /> on the specified object.</summary>
      <param name="element">The element on which to set the <see cref="T:System.Windows.Controls.VirtualizationMode" />.</param>
      <param name="value">One of the enumeration values that specifies whether <paramref name="element" /> uses container recycling.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
      <summary>Gets a value that represents how far down the content is currently scrolled.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical offset of the scrolled content, in pixels. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
      <summary>Gets a value that contains the vertical size of the viewport (visible area) of the content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the viewport (visible area) of the content, in pixels. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
      <summary>Gets a value that contains the horizontal size of the viewport (visible area) of the content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the viewport (visible area) of the content, in pixels. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VirtualizationMode">
      <summary>Gets or sets how a panel in an <see cref="T:System.Windows.Controls.ItemsControl" /> virtualizes its child items.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.VirtualizationMode" /> values.</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty">
      <summary>The current virtualization mode of the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> (whether it is <see cref="F:System.Windows.Controls.VirtualizationMode.Recycling" /> or not).</summary>
    </member>
    <member name="T:System.Windows.Controls.WebBrowser">
      <summary>Hosts HTML content within the Silverlight plug-in.</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.WebBrowser" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String)">
      <summary>Executes the specified script, which is defined in the currently loaded HTML.</summary>
      <returns>The result of the script invocation.</returns>
      <param name="scriptName">The name of the script to execute.</param>
      <exception cref="T:System.Security.SecurityException">The script target is at a cross-domain location.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.String[])">
      <summary>Executes the specified script function, which is defined in the currently loaded HTML, with the specified arguments.</summary>
      <returns>The result of the script invocation.</returns>
      <param name="scriptName">The name of the script to execute.</param>
      <param name="args">The arguments to pass to the script function.</param>
      <exception cref="T:System.Security.SecurityException">The script target is at a cross-domain location.</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.LoadCompleted">
      <summary>Occurs when top-level navigation completes and the content loads into the <see cref="T:System.Windows.Controls.WebBrowser" /> control or when an error occurs during loading.</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri)">
      <summary>Loads the HTML content at the specified URI.</summary>
      <param name="source">The URI of the HTML content to load.</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)">
      <summary>Displays the specified HTML content.</summary>
      <param name="text">The HTML content to display in the <see cref="T:System.Windows.Controls.WebBrowser" /> control.</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.SaveToString">
      <summary>Saves the source for the HTML content currently displayed in the <see cref="T:System.Windows.Controls.WebBrowser" /> as a string.</summary>
      <returns>The string representation of the source for the currently displayed HTML content.</returns>
      <exception cref="T:System.Security.SecurityException">The HTML content to be saved is from a cross-domain location.</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.ScriptNotify">
      <summary>Occurs when the content contained in the <see cref="T:System.Windows.Controls.WebBrowser" /> control passes a string to the Silverlight plug-in by using JavaScript. </summary>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Source">
      <summary>Gets or sets the URI source of the HTML content to display in the <see cref="T:System.Windows.Controls.WebBrowser" /> control.</summary>
      <returns>The URI source of the HTML content to display in the <see cref="T:System.Windows.Controls.WebBrowser" /> control.</returns>
    </member>
    <member name="T:System.Windows.Controls.WebBrowserBrush">
      <summary>Provides a brush that renders the currently hosted HTML.</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowserBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.WebBrowserBrush" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowserBrush.Redraw">
      <summary>Forces the brush to asynchronously redraw itself.</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowserBrush.SetSource(System.Windows.Controls.WebBrowser)">
      <summary>Sets the source of the content for the <see cref="T:System.Windows.Controls.WebBrowserBrush" />.</summary>
      <param name="source">The <see cref="T:System.Windows.Controls.WebBrowser" /> hosting the HTML content that is the source for the brush.</param>
    </member>
    <member name="P:System.Windows.Controls.WebBrowserBrush.SourceName">
      <summary>Gets the name of the source <see cref="T:System.Windows.Controls.WebBrowser" /> control that provides the HTML content.</summary>
      <returns>The <see cref="P:System.Windows.FrameworkElement.Name" /> of the <see cref="T:System.Windows.Controls.WebBrowser" /> that provides the HTML content.</returns>
    </member>
    <member name="F:System.Windows.Controls.WebBrowserBrush.SourceNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.WebBrowserBrush.SourceName" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.WebBrowserBrush.SourceName" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)"></member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)"></member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.Controls.ListBoxItem.ManipulationCompleted" /> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationCompleted(System.Object,System.Windows.Input.ManipulationCompletedEventArgs)" />.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.Controls.ListBoxItem.ManipulationStarted" /> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationStarted(System.Object,System.Windows.Input.ManipulationStartedEventArgs)" />.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsUsedForExternalVideoOnly">
      <summary>[SECURITY CRITICAL] Gets or sets a value that indicates whether to use external video.</summary>
      <returns>true if used for external video; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.VideoSessionHandle">
      <summary>[SECURITY CRITICAL] Gets the handle to the video session.</summary>
      <returns>The handle to the video session.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ButtonBase">
      <summary>Represents the base class for all button controls, such as <see cref="T:System.Windows.Controls.Button" />, <see cref="T:System.Windows.Controls.Primitives.RepeatButton" />, and <see cref="T:System.Windows.Controls.HyperlinkButton" />. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ButtonBase.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
      <summary>Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</summary>
      <returns>When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs. The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.Command">
      <summary>Gets or sets the command to invoke when this button is pressed. </summary>
      <returns>The command to invoke when this button is pressed. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
      <summary>Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</summary>
      <returns>The parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty">
      <summary>Identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty">
      <summary>Identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsFocused">
      <summary>Gets a value that determines whether the button has focus.</summary>
      <returns>true if the control has focus; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsFocusedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsFocused" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsFocused" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsMouseOver">
      <summary>Gets a value indicating whether the mouse pointer is located over this button control.</summary>
      <returns>true to indicate the mouse pointer is over the button control, otherwise false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsMouseOverProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsMouseOver" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsMouseOver" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently in a pressed state.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is in a pressed state; otherwise false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</summary>
      <param name="e">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event that occurs when the user presses a key while this control has focus.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseEnter" /> event that occurs when the mouse enters this control. </summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element. </summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</summary>
      <param name="e">The event data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event that occurs when the left mouse button is released while the mouse pointer is over this control. </summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> event that occurs when the mouse pointer moves while over this element.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> event that occurs when a user completes a drag operation with the mouse of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs" /> class. </summary>
      <param name="horizontalChange">The horizontal change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control, resulting from the drag operation.</param>
      <param name="verticalChange">The vertical change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control, resulting from the drag operation.</param>
      <param name="canceled">A value that indicates whether the drag operation was canceled by a call to the <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> method.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.Canceled">
      <summary>Gets a value that indicates whether the drag operation was canceled.</summary>
      <returns>true if the drag operation was canceled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
      <summary>Gets the horizontal distance between the current mouse position and the thumb coordinates.</summary>
      <returns>The horizontal distance between the current mouse position and the thumb coordinates.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
      <summary>Gets the vertical distance between the current mouse position and the thumb coordinates.</summary>
      <returns>The vertical distance between the current mouse position and the thumb coordinates.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> event of a <see cref="T:System.Windows.Controls.Primitives.Thumb" />. </summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event that occurs one or more times when a user drags a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control with the mouse..</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs" /> class.</summary>
      <param name="horizontalChange">The horizontal change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event.</param>
      <param name="verticalChange">The vertical change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
      <summary>Gets the horizontal change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event.</summary>
      <returns>The horizontal change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
      <summary>Gets the vertical change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event.</summary>
      <returns>The vertical change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event of a <see cref="T:System.Windows.Controls.Primitives.Thumb" />. </summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> event that occurs when a user drags a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control with the mouse. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragStartedEventArgs" /> class.</summary>
      <param name="horizontalOffset">The horizontal distance between the current mouse position and the thumb coordinates.</param>
      <param name="verticalOffset">The vertical distance between the current mouse position and the thumb coordinates.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
      <summary>Gets the horizontal distance between the current mouse position and the thumb coordinates.</summary>
      <returns>The horizontal distance between the current mouse position and the thumb coordinates.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
      <summary>Gets the vertical distance between the current mouse position and the thumb coordinates.</summary>
      <returns>The vertical distance between the current mouse position and the thumb coordinates.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> event of a <see cref="T:System.Windows.Controls.Primitives.Thumb" />. </summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorDirection">
      <summary>Specifies the direction in which item generation will occur. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Forward">
      <summary>Specifies to generate items in a forward direction.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Backward">
      <summary>Specifies to generate items in a backward direction.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorPosition">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> is used to describe the position of an item that is managed by <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> with the specified index and offset.</summary>
      <param name="index">An <see cref="T:System.Int32" /> index that is relative to the generated (realized) items. -1 is a special value that refers to a fictitious item at the beginning or the end of the items list.</param>
      <param name="offset">An <see cref="T:System.Int32" /> offset that is relative to the ungenerated (unrealized) items near the indexed item. An offset of 0 refers to the indexed element itself, an offset 1 refers to the next ungenerated (unrealized) item, and an offset of -1 refers to the previous item.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)">
      <summary>Compares the specified instance and the current instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> for value equality.</summary>
      <returns>true if <paramref name="o" /> and this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> have the same values.</returns>
      <param name="o">The <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> instance to compare.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Index">
      <summary>Gets or sets the <see cref="T:System.Int32" /> index that is relative to the generated (realized) items.</summary>
      <returns>An <see cref="T:System.Int32" /> index that is relative to the generated (realized) items.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Offset">
      <summary>Gets or sets the <see cref="T:System.Int32" /> offset that is relative to the ungenerated (unrealized) items near the indexed item.</summary>
      <returns>An <see cref="T:System.Int32" /> offset that is relative to the ungenerated (unrealized) items near the indexed item.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Compares two <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> objects for value equality.</summary>
      <returns>true if the two objects are equal; otherwise, false.</returns>
      <param name="gp1">The first instance to compare.</param>
      <param name="gp2">The second instance to compare.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Compares two <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> objects for value inequality.</summary>
      <returns>true if the values are not equal; otherwise, false.</returns>
      <param name="gp1">The first instance to compare.</param>
      <param name="gp2">The second instance to compare.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.ToString">
      <summary>Returns a string representation of this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
      <returns>A string representation of this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IItemContainerGenerator">
      <summary>An interface that is implemented by classes which are responsible for generating UI content on behalf of a host.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)">
      <summary>Returns the container element used to display the next item, and whether the container element has been newly generated (realized).</summary>
      <returns>A <see cref="T:System.Windows.DependencyObject" /> that is the container element which is used to display the next item.</returns>
      <param name="isNewlyRealized">Is true if the returned <see cref="T:System.Windows.DependencyObject" /> is newly generated (realized); otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
      <summary>Returns the <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> object that maps to the item at the specified index.</summary>
      <returns>An <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> object that maps to the item at the specified index.</returns>
      <param name="itemIndex">The index of desired item.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>Returns the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> appropriate for use by the specified panel. </summary>
      <returns>An <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> appropriate for use by the specified panel.</returns>
      <param name="panel">The panel for which to return an appropriate <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Returns the index that maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that is the index which maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
      <param name="position">The index of desired item.The <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />  for the desired index.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>Prepares the specified element as the container for the corresponding item.</summary>
      <param name="container">The container to prepare. Normally, <paramref name="container" /> is the result of the previous call to <see cref="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>Removes one or more generated (realized) items.</summary>
      <param name="position">The <see cref="T:System.Int32" /> index of the element to remove. <paramref name="position" /> must refer to a previously generated (realized) item, which means its offset must be zero.</param>
      <param name="count">The <see cref="T:System.Int32" /> number of elements to remove, starting at <paramref name="position" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
      <summary>Removes all generated (realized) items.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />, and controlling whether or not to start at a generated (realized) item.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that tracks the lifetime of the generation process.</returns>
      <param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, that specifies the position of the item to start generating items at.</param>
      <param name="direction">Specifies the position of the item to start generating items at.</param>
      <param name="allowStartAtRealizedItem">A <see cref="T:System.Boolean" /> that specifies whether to start at a generated (realized) item.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator">
      <summary>Extends the <see cref="T:System.Windows.Controls.Primitives.IItemContainerGenerator" /> interface to reuse the UI content it generates. Classes that are responsible for generating user interface (UI) content on behalf of a host implement this interface.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>Disassociates item containers from their data items and saves the containers so they can be reused later for other data items.</summary>
      <param name="position">The zero-based index of the first element to reuse. <paramref name="position" /> must refer to a previously generated (realized) item.</param>
      <param name="count">The number of elements to reuse, starting at <paramref name="position" />.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IScrollInfo">
      <summary>Represents the main scrollable region inside a <see cref="T:System.Windows.Controls.ScrollViewer" /> control.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
      <returns>true if scrolling is possible; otherwise false. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
      <returns>true if scrolling is possible; otherwise false. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight">
      <summary>Gets the vertical size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical size of the extent. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth">
      <summary>Gets the horizontal size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal size of the extent. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset">
      <summary>Gets the horizontal offset of the scrolled content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal offset. Valid values are between zero and the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth" /> minus the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineDown">
      <summary>Scrolls down within the content by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft">
      <summary>Scrolls left within the content by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineRight">
      <summary>Scrolls right within the content by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineUp">
      <summary>Scrolls up within the content by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
      <summary>Forces content to scroll until the coordinate space of a visual object is visible.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that is visible.</returns>
      <param name="visual">A <see cref="T:System.Windows.UIElement" /> that becomes visible.</param>
      <param name="rectangle">A bounding rectangle that identifies the coordinate space to make visible.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown">
      <summary>Scrolls down within the content after the user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft">
      <summary>Scrolls left within the content after the user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight">
      <summary>Scrolls right within the content after the user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp">
      <summary>Scrolls up within the content after the user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageDown">
      <summary>Scrolls down within the content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft">
      <summary>Scrolls left within the content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageRight">
      <summary>Scrolls right within the content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageUp">
      <summary>Scrolls up within the content by one page.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)">
      <summary>Sets the amount of horizontal offset.</summary>
      <param name="offset">The amount that content is horizontally offset from the containing viewport.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)">
      <summary>Sets the amount of vertical offset.</summary>
      <param name="offset">The amount that content is vertically offset from the containing viewport.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset">
      <summary>Gets the vertical offset of the scrolled content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical offset of the scrolled content. Valid values are between zero and the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight" /> minus the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight">
      <summary>Gets the vertical size of the viewport for this content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical size of the viewport for this content. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth">
      <summary>Gets the horizontal size of the viewport for this content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal size of the viewport for this content. This property has no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Action">
      <summary>Gets the action that occurred on the items collection.</summary>
      <returns>Returns the action that occurred.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemCount">
      <summary>Gets the number of items that were involved in the change.</summary>
      <returns>Integer that represents the number of items involved in the change.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemUICount">
      <summary>Gets the number of UI elements involved in the change.</summary>
      <returns>Integer that represents the number of UI elements involved in the change.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.OldPosition">
      <summary>Gets the position in the collection before the change occurred.</summary>
      <returns>Returns a <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Position">
      <summary>Gets the position in the collection where the change occurred.</summary>
      <returns>Returns a <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventHandler">
      <summary>Represents the method that will handle the  <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.LayoutInformation">
      <summary>Defines methods that provide additional information about the layout of an element.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutClip(System.Windows.FrameworkElement)">
      <summary>Returns the visible region of the specified element.</summary>
      <returns>The visible region of the clipped element, or null if the element was not clipped during layout.</returns>
      <param name="element">The element whose layout clip geometry is desired.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutExceptionElement(System.Windows.Threading.Dispatcher)">
      <summary>Returns the element that was being processed by the layout system at the moment of an unhandled exception.</summary>
      <returns>The element being processed at the time of an unhandled exception.</returns>
      <param name="dispatcher">The <see cref="T:System.Windows.Threading.Dispatcher" /> object that defines the scope of the operation.  There is one dispatcher per layout engine instance.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutSlot(System.Windows.FrameworkElement)">
      <summary>Returns the layout slot, or bounding box, that contains the specified element.</summary>
      <returns>The area assigned to the element for layout.</returns>
      <param name="element">The element whose layout slot is desired.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PlacementMode">
      <summary>Specifies the preferred location for positioning a <see cref="T:System.Windows.Controls.ToolTip" /> relative to a visual element.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Bottom">
      <summary>Indicates that the preferred location of the tooltip is at the bottom of the target element. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Right">
      <summary>Indicates that the preferred location of the tooltip is at the right of the target element.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Mouse">
      <summary>Indicates that the preferred location of the tooltip is at the mouse pointer location.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Left">
      <summary>Indicates that the preferred location of the tooltip is at the left of the target element.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Top">
      <summary>Indicates that the preferred location of the tooltip is at the top of the target element.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Popup">
      <summary>Displays content on top of existing Silverlight content, within the bounds of the Silverlight control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Child">
      <summary>Gets or sets the content to be hosted in the popup. </summary>
      <returns>The content to be hosted in the popup.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
      <summary>Gets the identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Closed">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property is set to false.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
      <summary>Gets or sets the distance between the left side of the Silverlight control and the left side of the popup. </summary>
      <returns>The distance, in pixels, between the left side of the Silverlight control and the left side of the popup.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
      <summary>Gets the identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.IsOpen">
      <summary>Gets or sets whether the popup is currently displaying on the screen.</summary>
      <returns>true if the popup is currently displaying; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
      <summary>Gets the identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Opened">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property is set to true.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
      <summary>Gets or sets the distance between the top of the Silverlight control and the top of the popup. </summary>
      <returns>The distance, in pixels, from the top of the Silverlight control and the top of the popup.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
      <summary>Gets the identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RangeBase">
      <summary>Represents an element that has a value within a specific range, such as the <see cref="T:System.Windows.Controls.ProgressBar" />, <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, and <see cref="T:System.Windows.Controls.Slider" /> controls.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.LargeChange">
      <summary>Gets or sets a value to be added to or subtracted from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> control. </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to add to or subtract from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> element. The default is 1. </returns>
      <exception cref="T:System.ArgumentException">The new value is <see cref="F:System.Double.NaN" />, less than zero, or <see cref="M:System.Double.IsInfinity(System.Double)" /> is true.</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.LargeChangeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Maximum">
      <summary>Gets or sets the highest possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element. </summary>
      <returns>The highest possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element. The default is 1.</returns>
      <exception cref="T:System.ArgumentException">The new value is either <see cref="F:System.Double.NaN" /> or <see cref="M:System.Double.IsInfinity(System.Double)" /> is true.</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MaximumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Minimum">
      <summary>Gets or sets the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element. </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element. The default is 0.</returns>
      <exception cref="T:System.ArgumentException">The new value is either <see cref="F:System.Double.NaN" /> or <see cref="M:System.Double.IsInfinity(System.Double)" /> is true.</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MinimumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property changes. </summary>
      <param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
      <param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property changes. </summary>
      <param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
      <param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> routed event. </summary>
      <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property.</param>
      <param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">
      <summary>Gets or sets a <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to be added to or subtracted from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> control. </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to add to or subtract from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> element. The default is 0.1. </returns>
      <exception cref="T:System.ArgumentException">The new value is <see cref="F:System.Double.NaN" />, less than zero, or <see cref="M:System.Double.IsInfinity(System.Double)" /> is true.</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.SmallChangeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.ToString">
      <summary>Provides a string representation of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> object. </summary>
      <returns>Returns the string representation of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Value">
      <summary>Gets or sets the current setting of the range control, which may be coerced. </summary>
      <returns>The current setting of the range control, which may be coerced. The default is 0.</returns>
      <exception cref="T:System.ArgumentException">The new value is either <see cref="F:System.Double.NaN" /> or <see cref="M:System.Double.IsInfinity(System.Double)" /> is true.</exception>
    </member>
    <member name="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged">
      <summary>Occurs when the range value changes. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RepeatButton">
      <summary>Represents a control that raises its <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event repeatedly from the time it is pressed until it is released.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Delay">
      <summary>Gets or sets the time, in milliseconds, the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> waits when it is pressed before it starts repeating the click action.</summary>
      <returns>The time, in milliseconds, the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> waits when it is pressed before it starts repeating the click action. The default is 250.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> is set to a value less than 0.</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.DelayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Interval">
      <summary>Gets or sets the time, in milliseconds, between repetitions of the click action, as soon as repeating starts.</summary>
      <returns>The time, in milliseconds, between repetitions of the click action, as soon as repeating starts. The default is 250.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> is set to a value less than 0.</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.IntervalProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> control when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollBar">
      <summary>Represents a control that provides a scroll bar that has a sliding <see cref="T:System.Windows.Controls.Primitives.Thumb" /> whose position corresponds to a value.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control when a new template is applied.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Orientation">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is displayed horizontally or vertically. </summary>
      <returns>An <see cref="T:System.Windows.Controls.Orientation" /> enumeration value that defines whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is displayed horizontally or vertically. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ScrollBar.Scroll">
      <summary>Occurs one or more times as content scrolls in a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> when the user moves the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> by using the mouse.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize">
      <summary>Gets or sets the amount of the scrollable content that is currently visible. </summary>
      <returns>The amount of the scrollable content that is currently visible. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.#ctor(System.Windows.Controls.Primitives.ScrollEventType,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs" /> class. </summary>
      <param name="scrollEventType">A <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> describing the event.</param>
      <param name="newValue">The new <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.NewValue">
      <summary>Gets the new <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
      <returns>The <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> after the event.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.ScrollEventType">
      <summary>Gets a <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> describing the event.</summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> describing the event.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventType">
      <summary>Specifies the type of <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event that occurred. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.EndScroll">
      <summary>Specifies that the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> was dragged to a new position and is now no longer being dragged by the user.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.First">
      <summary>Specifies that the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> position of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeDecrement">
      <summary>Specifies that the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a specified distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" />. The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to the left for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or upward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeIncrement">
      <summary>Specifies that the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a specified distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" />. The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to the right for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or downward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.Last">
      <summary>Specifies that the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> position of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallDecrement">
      <summary>Specifies that the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a specified distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" />. The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to the left for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or upward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallIncrement">
      <summary>Specifies that the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a specified distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" />. The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to the right for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or downward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbPosition">
      <summary>Specifies that the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to a new position because the user selected Scroll Here in the shortcut menu of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbTrack">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> was dragged and caused a <see cref="E:System.Windows.UIElement.MouseMove" /> event. A <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event of this <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> may occur more than one time when the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is dragged in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Selector">
      <summary>Represents a control that allows a user to select an item from a collection of items.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Removes any bindings and templates applied to the item container for the specified content.</summary>
      <param name="element">The combo box item used to display the specified content.</param>
      <param name="item">The item content.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.Controls.Primitives.Selector" /> has the focus.</summary>
      <returns>true to indicate that the <see cref="T:System.Windows.Controls.Primitives.Selector" /> has the focus; otherwise, false. </returns>
      <param name="element">The <see cref="T:System.Windows.Controls.Primitives.Selector" /> to evaluate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Selector" /> should keep the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> synchronized with the current item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property.</summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> is always synchronized with the current item; false if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> is never synchronized with the current item; null if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> is synchronized with the current item only if the <see cref="T:System.Windows.Controls.Primitives.Selector" /> uses a <see cref="T:System.ComponentModel.ICollectionView" />. The default is null.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> is set to true.</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.Selector" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Updates the current selected item when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection has changed.</summary>
      <param name="e">Contains data about changes in the items collection.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">The element used to display the specified item.</param>
      <param name="item">The item to display</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedIndex">
      <summary>Gets or sets the index of the selected item.</summary>
      <returns>The index of the selected item. The default is -1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedItem">
      <summary>Gets or sets the selected item.</summary>
      <returns>The selected item. The default is null. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValue">
      <summary>Gets or sets the value of the selected item, obtained by using the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" />.</summary>
      <returns>The value of the selected item, obtained by using the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" />, or null if no item is selected. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath">
      <summary>Gets or sets the property path that is used to get the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> property of the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> property. </summary>
      <returns>The property path that is used to get the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> property of the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> property. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValuePathProperty">
      <summary>Gets the identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValueProperty">
      <summary>Gets the identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.SelectionChanged">
      <summary>Occurs when the currently selected item changes.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Signals the object that initialization is complete.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Thumb">
      <summary>Represents a control that can be dragged by the user.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.CancelDrag">
      <summary>Cancels a drag operation for the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragCompleted">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control loses mouse capture.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragDelta">
      <summary>Occurs one or more times as the mouse pointer is moved when a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control has logical focus and mouse capture. </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragStarted">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control receives logical focus and mouse capture.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsDragging">
      <summary>Gets whether the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control has focus and mouse capture.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control has focus and mouse capture; otherwise false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsDraggingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsFocused">
      <summary>Gets whether the thumb has focus.</summary>
      <returns>true to indicate the thumb has focus; otherwise false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsFocusedProperty">
      <summary>Gets the identifier for the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsFocused" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsFocused" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToggleButton">
      <summary>Base class for controls that can switch states, such as <see cref="T:System.Windows.Controls.CheckBox" /> and <see cref="T:System.Windows.Controls.RadioButton" />. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Checked">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is checked.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate">
      <summary>Occurs when the state of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is switched to the indeterminate state.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is checked.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is checked; false if the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is unchecked; otherwise null. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState">
      <summary>Gets or sets whether the control supports two or three states.</summary>
      <returns>true if the control supports three states; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnClick">
      <summary>Called when the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is clicked by the mouse or the keyboard. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnContentChanged(System.Object,System.Object)">
      <summary>Called when the <see cref="T:System.Windows.Controls.ContentControl" /> property changes.</summary>
      <param name="oldContent">The content to be replaced.</param>
      <param name="newContent">The new content to display.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle">
      <summary>Called by the <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> method to implement toggle behavior. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.ToString">
      <summary>Returns the string representation of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> object. </summary>
      <returns>String representation of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> object.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is unchecked.</summary>
    </member>
    <member name="T:System.Windows.Data.Binding">
      <summary>Defines a binding that connects the properties of binding targets and data sources.</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial property path for the data source.</summary>
      <param name="path">The initial property path for the source of the binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.BindsDirectlyToSource">
      <summary>Gets or sets a value that indicates whether the binding ignores any <see cref="T:System.ComponentModel.ICollectionView" /> settings on the data source. </summary>
      <returns>true if the binding binds directly to the data source; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Converter">
      <summary>Gets or sets the converter object that is called by the binding engine to modify the data as it is passed between the source and target, or vice versa.</summary>
      <returns>The <see cref="T:System.Windows.Data.IValueConverter" /> object that modifies the data.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterCulture">
      <summary>Gets or sets the culture to be used by the <see cref="P:System.Windows.Data.Binding.Converter" />.</summary>
      <returns>The <see cref="T:System.Globalization.CultureInfo" /> used by the <see cref="P:System.Windows.Data.Binding.Converter" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterParameter">
      <summary>Gets or sets a parameter that can be used in the <see cref="P:System.Windows.Data.Binding.Converter" /> logic.</summary>
      <returns>A parameter to be passed to the <see cref="P:System.Windows.Data.Binding.Converter" />.  This can be used in the conversion logic.  The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ElementName">
      <summary>Gets or sets the name of the element to use as the binding source object.</summary>
      <returns>The value of the <see cref="P:System.Windows.FrameworkElement.Name" /> property or x:Name Attribute of the element to bind to. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.-or-The <see cref="P:System.Windows.Data.Binding.Source" /> or <see cref="P:System.Windows.Data.Binding.RelativeSource" /> property has already been set.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.Mode">
      <summary>Gets or sets a value that indicates the direction of the data flow in the binding.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.BindingMode" /> values. The default is <see cref="F:System.Windows.Data.BindingMode.OneWay" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnValidationError">
      <summary>Gets or sets a value that indicates whether the <see cref="E:System.Windows.FrameworkElement.BindingValidationError" /> event is raised on validation errors.</summary>
      <returns>true if the <see cref="E:System.Windows.FrameworkElement.BindingValidationError" /> event is raised; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.Path">
      <summary>Gets or sets the path to the binding source property.</summary>
      <returns>The property path for the source of the binding. See <see cref="T:System.Windows.PropertyPath" /> or Property Path Syntax.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.RelativeSource">
      <summary>Gets or sets the binding source by specifying its location relative to the position of the binding target.</summary>
      <returns>The relative location of the binding source to use. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.-or-The <see cref="P:System.Windows.Data.Binding.ElementName" /> or <see cref="P:System.Windows.Data.Binding.Source" /> property has already been set.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.Source">
      <summary>Gets or sets the data source for the binding.</summary>
      <returns>The source object that contains the data for the binding.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.-or-The <see cref="P:System.Windows.Data.Binding.ElementName" /> or <see cref="P:System.Windows.Data.Binding.RelativeSource" /> property has already been set.</exception>
    </member>
    <member name="M:System.Windows.Data.Binding.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Signals the object that initialization is complete.</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceTrigger">
      <summary>Gets or sets a value that determines the timing of binding source updates for two-way bindings.</summary>
      <returns>A value that determines when the binding source is updated. The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />. </returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
      <summary>Gets or sets a value that indicates whether the binding engine will report validation errors from an <see cref="T:System.ComponentModel.IDataErrorInfo" /> implementation on the bound data entity.</summary>
      <returns>true if the binding engine will report <see cref="T:System.ComponentModel.IDataErrorInfo" /> validation errors; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnExceptions">
      <summary>Gets or sets a value that indicates whether the binding engine will report exception validation errors.</summary>
      <returns>true if the binding engine will report exception validation errors; otherwise, false.  The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.Binding" /> has already been attached to a target element, and cannot be modified.</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
      <summary>Gets or sets a value that indicates whether the binding engine will report validation errors from an <see cref="T:System.ComponentModel.INotifyDataErrorInfo" /> implementation on the bound data entity.</summary>
      <returns>true if the binding engine will report <see cref="T:System.ComponentModel.INotifyDataErrorInfo" /> validation errors; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Windows.Data.BindingBase">
      <summary>Provides an abstract base class for the <see cref="T:System.Windows.Data.Binding" /> class. </summary>
    </member>
    <member name="M:System.Windows.Data.BindingBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.BindingBase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Data.BindingBase.CheckSealed">
      <summary>Throws an exception if the binding has already been attached to a binding target.</summary>
      <exception cref="T:System.InvalidOperationException">The binding has already been attached to a binding target.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingBase.FallbackValue">
      <summary>Gets or sets the value to use when the binding is unable to return a value.</summary>
      <returns>The value to use when the binding is unable to return a value. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">When setting this property, the binding has already been attached to a binding target.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingBase.StringFormat">
      <summary>Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</summary>
      <returns>A string that specifies how to format the binding if it displays the bound value as a string. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">When setting this property, the binding has already been attached to a binding target.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingBase.TargetNullValue">
      <summary>Gets or sets the value that is used in the target when the value of the source is null.</summary>
      <returns>The value that is used in the target when the value of the source is null.</returns>
      <exception cref="T:System.InvalidOperationException">When setting this property, the binding has already been attached to a binding target.</exception>
    </member>
    <member name="T:System.Windows.Data.BindingExpression">
      <summary>Contains information about a single binding within a <see cref="T:System.Windows.Data.Binding" /> object.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.DataItem">
      <summary>Gets the binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</summary>
      <returns>The binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ParentBinding">
      <summary>Returns the <see cref="T:System.Windows.Data.Binding" /> object of the current <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
      <returns>The <see cref="T:System.Windows.Data.Binding" /> object of the current <see cref="T:System.Windows.Data.BindingExpression" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateSource">
      <summary>Sends the current binding target value to the binding source property in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> bindings.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.BindingExpression" /> is detached from the binding target. </exception>
    </member>
    <member name="T:System.Windows.Data.BindingExpressionBase">
      <summary>Represents the base class for the <see cref="T:System.Windows.Data.BindingExpression" /> class. </summary>
    </member>
    <member name="T:System.Windows.Data.BindingMode">
      <summary>Describes how the data propagates in a binding.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWay">
      <summary>Updates the target property when the binding is created.  Changes to the source object can also propagate to the target.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneTime">
      <summary>Updates the target property when the binding is created.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.TwoWay">
      <summary>Updates either the target or the source object when either changes.  When the binding is created, the target property is updated from the source.</summary>
    </member>
    <member name="T:System.Windows.Data.BindingOperations">
      <summary>Provides the static <see cref="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" /> method. </summary>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>Creates and associates a new <see cref="T:System.Windows.Data.BindingExpressionBase" /> with the specified binding target property.</summary>
      <returns>An object that contains information about the binding. </returns>
      <param name="target">The target to set the binding to. </param>
      <param name="dp">The property on the target to bind. </param>
      <param name="binding">The binding to assign to the target property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.-or-<paramref name="dp" /> is null.-or-<paramref name="binding" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not of type <see cref="T:System.Windows.FrameworkElement" /> or <see cref="T:System.Windows.Data.CollectionViewSource" />.-or-<paramref name="target" /> is of type <see cref="T:System.Windows.Data.CollectionViewSource" /> and <paramref name="binding" /> has a <see cref="P:System.Windows.Data.Binding.Source" /> value of null.-or-<paramref name="binding" /> has a <see cref="P:System.Windows.Data.Binding.Mode" /> value of <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> and an empty <see cref="P:System.Windows.Data.Binding.Path" /> value. </exception>
    </member>
    <member name="T:System.Windows.Data.CollectionViewGroup">
      <summary>Represents a group created by a <see cref="T:System.Windows.Data.PagedCollectionView" /> object based on its <see cref="P:System.Windows.Data.PagedCollectionView.GroupDescriptions" />.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.CollectionViewGroup" /> class with the specified group name.</summary>
      <param name="name">The name of the group.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
      <summary>Gets a value that indicates whether this group has any subgroups.</summary>
      <returns>true if this group is at the bottom level and does not have any subgroups; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
      <summary>Gets the number of data items in the subtree under this group.</summary>
      <returns>The number of data items in the subtree under this group.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Items">
      <summary>Gets the items that are immediate children of the group.</summary>
      <returns>A read-only collection of the immediate items in this group. This is either a collection of subgroups or a collection of data items if this group does not have any subgroups.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Name">
      <summary>Gets the name of this group.</summary>
      <returns>The name of this group.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionViewGroup.PropertyChanged" /> event with the provided arguments.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
      <summary>Gets or sets the number of data items in the subtree under this group.</summary>
      <returns>The number of data items in the subtree under this group.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
      <summary>Gets the immediate items that are contained in this group.</summary>
      <returns>The immediate items that are contained in this group.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>For a description of this member, see <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionViewSource">
      <summary>The XAML proxy of a collection view class.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.CollectionViewSource" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Culture">
      <summary>Gets or sets the cultural information for any operations of the view that might differ by culture, such as sorting.</summary>
      <returns>The culture to use during view operations.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewSource.Filter">
      <summary>Provides filtering logic.</summary>
      <exception cref="T:System.InvalidOperationException">When adding a handler to this event, the <see cref="P:System.Windows.Data.CollectionViewSource.View" /> property value has a <see cref="P:System.ComponentModel.ICollectionView.CanFilter" /> property value of false. </exception>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how items in the collection are grouped in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how items in the collection are grouped in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>Invoked when the collection view type changes.</summary>
      <param name="oldCollectionViewType">The old collection view type.</param>
      <param name="newCollectionViewType">The new collection view type.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)">
      <summary>Invoked when the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> property changes.</summary>
      <param name="oldSource">The old value of the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> property.</param>
      <param name="newSource">The new value of the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> property.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Source">
      <summary>Gets or sets the collection object from which to create this view.</summary>
      <returns>The collection object from which to create this view. The default is null.</returns>
      <exception cref="T:System.ArgumentException">The specified value when setting this property is not null or an <see cref="T:System.Collections.IEnumerable" /> implementation.-or-The specified value when setting this property is an <see cref="T:System.ComponentModel.ICollectionView" /> implementation.</exception>
      <exception cref="T:System.InvalidOperationException">The specified value implements <see cref="T:System.ComponentModel.ICollectionViewFactory" /> but its <see cref="M:System.ComponentModel.ICollectionViewFactory.CreateView" /> method returns an <see cref="T:System.ComponentModel.ICollectionView" /> with one or more of the following inconsistencies:<see cref="P:System.ComponentModel.ICollectionView.CanFilter" /> is false but <see cref="P:System.ComponentModel.ICollectionView.Filter" /> is not null.<see cref="P:System.ComponentModel.ICollectionView.CanSort" /> is false but <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" /> is not empty.<see cref="P:System.ComponentModel.ICollectionView.CanGroup" /> is false but <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" /> is not empty. </exception>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Signals the object that initialization is complete.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Data.CollectionViewSource.View" /> property value has one or more of the following inconsistencies:<see cref="P:System.ComponentModel.ICollectionView.CanFilter" /> is false but <see cref="P:System.ComponentModel.ICollectionView.Filter" /> is not null.<see cref="P:System.ComponentModel.ICollectionView.CanSort" /> is false but <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" /> is not empty.<see cref="P:System.ComponentModel.ICollectionView.CanGroup" /> is false but <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" /> is not empty. </exception>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.View">
      <summary>Gets the view object that is currently associated with this instance of <see cref="T:System.Windows.Data.CollectionViewSource" />.</summary>
      <returns>The view object that is currently associated with this instance of <see cref="T:System.Windows.Data.CollectionViewSource" />.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.ViewProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.View" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Data.FilterEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> event.</summary>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Accepted">
      <summary>Gets or sets a value that indicates whether the item passes the filter criteria.</summary>
      <returns>true if the item passes the filter; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Item">
      <summary>Gets the object that the filter should test.</summary>
      <returns>The object that the filter should test. The default is null.</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> event.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Data.IValueConverter">
      <summary>Exposes methods that allow modifying the data as it passes through the binding engine.</summary>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Modifies the source data before passing it to the target for display in the UI.</summary>
      <returns>The value to be passed to the target dependency property.</returns>
      <param name="value">The source data being passed to the target.</param>
      <param name="targetType">The <see cref="T:System.Type" /> of data expected by the target dependency property.</param>
      <param name="parameter">An optional parameter to be used in the converter logic.</param>
      <param name="culture">The culture of the conversion.</param>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> bindings.</summary>
      <returns>The value to be passed to the source object.</returns>
      <param name="value">The target data being passed to the source.</param>
      <param name="targetType">The <see cref="T:System.Type" /> of data expected by the source object.</param>
      <param name="parameter">An optional parameter to be used in the converter logic.</param>
      <param name="culture">The culture of the conversion.</param>
    </member>
    <member name="T:System.Windows.Data.PropertyGroupDescription">
      <summary>Describes the grouping of items by using a property name as the criteria.</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class with the specified property name.</summary>
      <param name="propertyName">The name of the property that specifies which group an item belongs to.</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class with the specified property name and converter.</summary>
      <param name="propertyName">The name of the property that specifies which group an item belongs to. If this parameter is null, the item itself is passed to the value converter.</param>
      <param name="converter">An <see cref="T:System.Windows.Data.IValueConverter" /> object to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to. The converter may return a collection, which indicates that the items can appear in more than one group.</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class with the specified property name, converter, and string comparison.</summary>
      <param name="propertyName">The name of the property that specifies which group an item belongs to. If this parameter is null, the item itself is passed to the value converter.</param>
      <param name="converter">An <see cref="T:System.Windows.Data.IValueConverter" /> object to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to. The converter may return a collection, which indicates that the items can appear in more than one group.</param>
      <param name="stringComparison">A <see cref="T:System.StringComparison" /> value that specifies the comparison between the value of an item and the name of a group.</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
      <summary>Gets or sets a converter to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to.</summary>
      <returns>The converter to apply. The default is null.</returns>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>Returns the group name(s) for the specified item.</summary>
      <returns>The group name(s) for the specified item.</returns>
      <param name="item">The item to return group names for.</param>
      <param name="level">The level of grouping.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to supply to the converter</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>Returns a value that indicates whether the group name and the item name match, which indicates that the item belongs to the group.</summary>
      <returns>true if the names match, which indicates that the item belongs to the group; otherwise, false.</returns>
      <param name="groupName">The name of the group to check.</param>
      <param name="itemName">The name of the item to check.</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
      <summary>Gets or sets the name of the property that is used to determine which group(s) an item belongs to.</summary>
      <returns>The name of the property that is used to determine which group(s) an item belongs to. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
      <summary>Gets or sets a <see cref="T:System.StringComparison" /> value that specifies the comparison between the value of an item (as determined by <see cref="P:System.Windows.Data.PropertyGroupDescription.PropertyName" /> and <see cref="P:System.Windows.Data.PropertyGroupDescription.Converter" />) and the name of a group.</summary>
      <returns>An enumeration value that specifies the comparison between the value of an item and the name of a group. The default is <see cref="F:System.StringComparison.Ordinal" />.</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSource">
      <summary>Implements a markup extension that describes the location of the binding source relative to the position of the binding target.</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class by using default relative source mode. </summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class by using the specified relative source mode. </summary>
      <param name="mode">The relative source mode to use for the related binding.</param>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Mode">
      <summary>Gets or sets a value that describes the location of the binding source relative to the position of the binding target.</summary>
      <returns>A value of the enumeration.</returns>
      <exception cref="T:System.InvalidOperationException">When setting this property, the property has already been set to a different value.</exception>
    </member>
    <member name="T:System.Windows.Data.RelativeSourceMode">
      <summary>Defines constants that describe the location of the binding source relative to the position of the binding target.</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.TemplatedParent">
      <summary>Refers to the element to which the template (in which the data-bound element exists) is applied. This is similar to setting a TemplateBinding Markup Extension and is only applicable if the <see cref="T:System.Windows.Data.Binding" /> is within a template.</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.Self">
      <summary>Refers to the element on which you are setting the binding and allows you to bind one property of that element to another property on the same element.</summary>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceTrigger">
      <summary>Defines constants that indicate when a binding source is updated by its binding target in two-way binding. </summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Default">
      <summary>The binding source is updated automatically when the binding target value changes.</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Explicit">
      <summary>The binding source is updated only when you call the <see cref="M:System.Windows.Data.BindingExpression.UpdateSource" /> method.</summary>
    </member>
    <member name="T:System.Windows.Documents.Block">
      <summary>An abstract class that provides a base for all block-level content elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.Block.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Block" /> class. </summary>
    </member>
    <member name="P:System.Windows.Documents.Block.TextAlignment">
      <summary>Gets or sets the horizontal alignment of the text content. </summary>
      <returns>The horizontal alignment of the text content. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.BlockCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Documents.Block" /> elements. </summary>
    </member>
    <member name="T:System.Windows.Documents.Bold">
      <summary>Provides an inline-level content element that causes content to render with a bold font weight. </summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Bold" /> class. </summary>
    </member>
    <member name="T:System.Windows.Documents.FontSource">
      <summary>Represents one or more fonts created from a stream.</summary>
    </member>
    <member name="M:System.Windows.Documents.FontSource.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FontSource" /> class. </summary>
      <param name="stream">The stream that contains the font source. </param>
    </member>
    <member name="M:System.Windows.Documents.FontSource.#ctor(System.Windows.Media.GlyphTypeface)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FontSource" /> class. </summary>
      <param name="glyphtypeface">The <see cref="T:System.Windows.Media.GlyphTypeface" /> object that contains the font file.</param>
    </member>
    <member name="T:System.Windows.Documents.Glyphs">
      <summary>Provides a visual representation of letters, characters, or symbols, in a specific font and style.</summary>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Glyphs" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Fill">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to render the glyphs.</summary>
      <returns>The brush to use to render the glyphs. The default is null, which is evaluated as <see cref="P:System.Windows.Media.Colors.Transparent" /> for rendering.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FillProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.Fill" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.Fill" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontRenderingEmSize">
      <summary>Gets or sets the em size used for rendering the glyphs.</summary>
      <returns>The em size used for rendering. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontRenderingEmSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontSource">
      <summary>Gets or sets the font source that is applied to the <see cref="T:System.Windows.Documents.Glyphs" /> for rendering content.</summary>
      <returns>The font source used to render content in the <see cref="T:System.Windows.Documents.Glyphs" />. The default is a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontUri">
      <summary>Gets or sets the location of the font used for rendering the glyphs.</summary>
      <returns>The URI source of the font. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontUriProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Indices">
      <summary>Gets or sets the glyph indices for the glyphs.</summary>
      <returns>A string that defines glyph indices as well as other glyph specifics in a string mini-language. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IndicesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.Indices" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.Indices" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginX">
      <summary>Gets or sets the x origin for the glyphs.</summary>
      <returns>The x origin of the <see cref="T:System.Windows.Documents.Glyphs" />, in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginY">
      <summary>Gets or sets the y origin for the glyphs.</summary>
      <returns>The y origin of the <see cref="T:System.Windows.Documents.Glyphs" />, in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.StyleSimulations">
      <summary>Gets or sets the style simulations applied to the glyphs.</summary>
      <returns>One of the enumeration values that specifies the style simulations to apply to the glyphs. The default is None.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.StyleSimulationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.UnicodeString">
      <summary>Gets or sets the Unicode string to render in glyphs.</summary>
      <returns>A Unicode string with XAML-compatible encoding. The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.UnicodeStringProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.Hyperlink">
      <summary>Provides an inline-level content element that provides facilities for hosting hyperlinks. </summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Hyperlink" /> class. </summary>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.Click">
      <summary>Occurs when the left mouse button is clicked on a <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.Command">
      <summary>Gets or sets a command to associate with the <see cref="T:System.Windows.Documents.Hyperlink" />. </summary>
      <returns>A command to associate with the <see cref="T:System.Windows.Documents.Hyperlink" />. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandParameter">
      <summary>Gets or sets command parameters associated with the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> property. </summary>
      <returns>An object specifying parameters for the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> property. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandParameterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.MouseOverForeground">
      <summary>Gets or sets the brush that paints the foreground color when the mouse pointer moves over the <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <returns>The brush that paints the foreground color when the mouse pointer moves over the <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.MouseOverForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.MouseOverForeground" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.Hyperlink.MouseOverForeground" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.MouseOverTextDecorations">
      <summary>Gets or sets the <see cref="T:System.Windows.TextDecorationCollection" /> that decorates the <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> that decorates the <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.MouseOverTextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.MouseOverTextDecorations" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.Hyperlink.MouseOverTextDecorations" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.NavigateUri">
      <summary>Gets or sets a URI to navigate to when the <see cref="T:System.Windows.Documents.Hyperlink" /> is activated. </summary>
      <returns>The URI to navigate to when the <see cref="T:System.Windows.Documents.Hyperlink" /> is activated. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.NavigateUriProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.TargetName">
      <summary>Gets or sets the name of a target window or frame for the <see cref="T:System.Windows.Documents.Hyperlink" />. </summary>
      <returns>A string that specifies the name of a target window or frame for the <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.TargetNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.Inline">
      <summary>Provides a base for inline flow content element behavior.</summary>
    </member>
    <member name="M:System.Windows.Documents.Inline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Inline" /> class.</summary>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.LanguageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.Language" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.Language" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.TextDecorations">
      <summary>Gets or sets a value that specifies the text decorations that are applied to the content in an <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" />, or null if no text decorations are applied.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.TextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.InlineCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Documents.Inline" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.String)">
      <summary>Adds a string to the collection.</summary>
      <param name="text">The text to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Documents.InlineUIContainer">
      <summary>Provides an inline content element that enables <see cref="T:System.Windows.UIElement" /> types to be embedded in content.</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.InlineUIContainer" /> class. </summary>
    </member>
    <member name="P:System.Windows.Documents.InlineUIContainer.Child">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> hosted by the <see cref="T:System.Windows.Documents.InlineUIContainer" />.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> hosted by the <see cref="T:System.Windows.Documents.InlineUIContainer" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.Italic">
      <summary>Provides an inline-level flow content element that causes content to render with an italic font style. </summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic" /> class. </summary>
    </member>
    <member name="T:System.Windows.Documents.LineBreak">
      <summary>Represents an inline element that causes a new line to begin in content when rendered in a text container.</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.LineBreak" /> class.</summary>
    </member>
    <member name="T:System.Windows.Documents.LogicalDirection">
      <summary>Specifies a logical direction in which to perform certain text operations, such as inserting, retrieving, or navigating through text relative to a specified position (a <see cref="T:System.Windows.Documents.TextPointer" />).</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Backward">
      <summary>Backward, or from right to left.</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Forward">
      <summary>Forward, or from left to right.</summary>
    </member>
    <member name="T:System.Windows.Documents.Paragraph">
      <summary>Provides a block-level content element that is used to group content into a paragraph. </summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Paragraph" /> class. </summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.Inlines">
      <summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Inline" /> elements that include the contents of the <see cref="T:System.Windows.Documents.Paragraph" />.</summary>
      <returns>An <see cref="T:System.Windows.Documents.InlineCollection" /> containing the <see cref="T:System.Windows.Documents.Inline" /> elements that include the contents of the <see cref="T:System.Windows.Documents.Paragraph" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.Run">
      <summary>Represents a discrete section of formatted or unformatted text.</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Run" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.Run.FlowDirection">
      <summary>Gets or sets the direction that text and other user interface elements flow within the <see cref="T:System.Windows.Documents.Run" /> element that controls their layout. </summary>
      <returns>The direction that text and other UI elements flow within the <see cref="T:System.Windows.Documents.Run" /> element. The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Run.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Documents.Run.Text">
      <summary>Gets or sets the text contents of the <see cref="T:System.Windows.Documents.Run" />.</summary>
      <returns>A string that specifies the text contents of the <see cref="T:System.Windows.Documents.Run" />. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.Section">
      <summary>A block-level element used for grouping other <see cref="T:System.Windows.Documents.Block" /> elements.</summary>
    </member>
    <member name="P:System.Windows.Documents.Section.Blocks">
      <summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Section" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> containing the <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Section" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Section.HasTrailingParagraphBreakOnPaste">
      <summary>Gets or sets a value that indicates whether a trailing paragraph break should be inserted after the last paragraph when copying the contents of a root <see cref="T:System.Windows.Documents.Section" /> element to the clipboard.</summary>
      <returns>true if a trailing paragraph break should be included; otherwise false.</returns>
    </member>
    <member name="T:System.Windows.Documents.Span">
      <summary>Groups other <see cref="T:System.Windows.Documents.Inline" /> content elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Span" /> class. </summary>
    </member>
    <member name="P:System.Windows.Documents.Span.Inlines">
      <summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection" /> containing the top-level inline elements that include the contents of <see cref="T:System.Windows.Documents.Span" />.</summary>
      <returns>An <see cref="T:System.Windows.Documents.InlineCollection" /> containing the inline elements that include the contents of the <see cref="T:System.Windows.Documents.Span" />. This property has no default value.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElement">
      <summary>An abstract class used as the base class for the abstract <see cref="T:System.Windows.Documents.Block" /> and <see cref="T:System.Windows.Documents.Inline" /> classes.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the end of the content in the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that represents the end of the content in the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the start of content in the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that represents the start of the content in the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the position just after the end of the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that represents the position just after the end of the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the position just before the start of the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that represents the position just before the start of the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.FindName(System.String)">
      <summary>Gets an object in the Silverlight object model by referencing the object's x:Name or <see cref="P:System.Windows.Documents.TextElement.Name" /> attribute value. </summary>
      <returns>The object that has the specified name, or null if no object is retrieved.</returns>
      <param name="name">The name of the object to retrieve.</param>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the content of the element.</summary>
      <returns>The preferred font family, or a primary preferred font family with one or more fallback font families. See <see cref="T:System.Windows.Media.FontFamily" /> for default information.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontSize">
      <summary>Gets or sets the font size for the content of the element.</summary>
      <returns>The desired font size in pixels. The default is 11 pixels.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStretch">
      <summary>Gets or sets the glyph width of the font in a family to select.</summary>
      <returns>One of the <see cref="T:System.Windows.FontStretches" /> property values, specifying the desired font stretch. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStyle">
      <summary>Gets or sets the font style for the content in this element.</summary>
      <returns>One of the <see cref="T:System.Windows.FontStyles" /> property values, specifying the font style. The default is <see cref="P:System.Windows.FontStyles.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontWeight">
      <summary>Gets or sets the top-level font weight to select from the font family for the content in this element.</summary>
      <returns>One of the <see cref="T:System.Windows.FontWeights" /> property values, specifying the font weight. The default is <see cref="P:System.Windows.FontWeights.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the content in this element.</summary>
      <returns>The brush that is applied to the text contents. The default is a <see cref="T:System.Windows.Media.SolidColorBrush" /> with <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> value <see cref="P:System.Windows.Media.Colors.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Language">
      <summary>Gets or sets the language of the content within an <see cref="T:System.Windows.Documents.TextElement" /> element.</summary>
      <returns>A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />. The default is a <see cref="T:System.Windows.Markup.XmlLanguage" /> value created with the string en-US (<see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> is "en-US").</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.LanguageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.Language" /> dependency property.</summary>
      <returns>Identifier for the <see cref="P:System.Windows.Documents.TextElement.Language" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Name">
      <summary>Gets or sets a unique identification for the object. <see cref="P:System.Windows.Documents.TextElement.Name" /> can only be set from initial parsing of XAML.</summary>
      <returns>The unique identifier for the object. This property is read-only for code, but write-only for XAML, due to special parser handling of XAML properties named "Name".</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.OnCreateAutomationPeer">
      <summary>Returns a class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for use by the Silverlight automation infrastructure.</summary>
      <returns>A type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Documents.TextElement" /> object.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElementCollection`1">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TextElement" /> objects.</summary>
      <typeparam name="T">Type constraint for type safety of the constrained collection implementation.</typeparam>
    </member>
    <member name="T:System.Windows.Documents.TextPointer">
      <summary>Represents a position within a <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
      <summary>Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <returns>-1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes position; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows positions.</returns>
      <param name="position">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> specifies a position from a different <see cref="T:System.Windows.Controls.RichTextBox" /> associated with the current position.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current and valid layout information is unavailable.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specify the logical direction in which to find a content bounding box.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or null if no next insertion position can be found.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specify the logical direction in which to search for the next insertion position.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset and in the direction specified by the direction parameter, or null if the offset extends past the end of the content.</returns>
      <param name="offset">An offset, in symbols, for which to calculate and return the position. If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</param>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
      <summary>Gets a value that indicates whether the current position is an insertion.</summary>
      <returns>true if the current position is an insertion position; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.LogicalDirection">
      <summary>Gets the logical direction associated with the current position, which is used to disambiguate content associated with the current position.</summary>
      <returns>The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Parent">
      <summary>Gets the logical parent that contains the current position.</summary>
      <returns>The logical parent that contains the current position. Can return the <see cref="T:System.Windows.Controls.RichTextBox" /> when at the top of the content stack.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextSelection">
      <summary>Encapsulates the selection state for the <see cref="T:System.Windows.Controls.RichTextBox" /> control.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Applies the specified formatting property and value to the current selection.</summary>
      <param name="formattingProperty">A formatting property to apply.</param>
      <param name="value">The value for the formatting property.</param>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.End">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the end of the current selection.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that represents the end of the current selection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.GetPropertyValue(System.Windows.DependencyProperty)">
      <summary>Gets the value of the specified formatting property on the current selection.</summary>
      <returns>An object that indicates the value of the specified formatting property on the current selection.</returns>
      <param name="formattingProperty">A formatting property to get the value of on the current selection.</param>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.Insert(System.Windows.Documents.TextElement)">
      <summary>Inserts or replaces the content at the current selection as a <see cref="T:System.Windows.Documents.TextElement" />.</summary>
      <param name="element">The <see cref="T:System.Windows.Documents.TextElement" /> to be inserted.</param>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Updates the current selection, taking two <see cref="T:System.Windows.Documents.TextPointer" /> positions to indicate the updated selection.</summary>
      <param name="anchorPosition">A fixed anchor position that marks one end of the updated selection.</param>
      <param name="movingPosition">A movable position that marks the other end of the updated selection.</param>
      <exception cref="T:System.ArgumentException">Position specifies a position from a different <see cref="T:System.Windows.Controls.RichTextBox" /> associated with the current position.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.Start">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the beginning of the current selection.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that represents the beginning of the current selection.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.Text">
      <summary>Gets or sets the plain text contents of the current selection.</summary>
      <returns>A string that contains the plain text contents of the current selection.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.Xaml">
      <summary>Gets or sets the XAML representation of the current selection. </summary>
      <returns>A <see cref="T:System.String" /> that is a XAML representation of the current selection. This XAML representation is the same XAML that is applied to the clipboard for a copy operation.</returns>
    </member>
    <member name="T:System.Windows.Documents.Underline">
      <summary>Provides an inline-level content element that causes content to render with an underlined text decoration.</summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Underline" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.Inline.FindName(System.String)">
      <summary>Gets an object in the Silverlight object model by referencing the object's x:Name or <see cref="P:System.Windows.Documents.Inline.Name" /> attribute value.</summary>
      <returns>The object that has the specified name, or null if no object is retrieved.</returns>
      <param name="name">The name of the object to retrieve.</param>
    </member>
    <member name="P:System.Windows.Documents.Inline.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the content in this element. </summary>
      <returns>The preferred font family, or a primary preferred font family with one or more fallback font families. See <see cref="T:System.Windows.Media.FontFamily" /> for default information.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.FontSize">
      <summary>Gets or sets the font size for the content in this element. </summary>
      <returns>The desired font size in pixels. The default is 11 pixels.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.FontStretch">
      <summary>Gets or sets the glyph width of the font in a family to select.</summary>
      <returns>One of the <see cref="T:System.Windows.FontStretches" /> property values, specifying the desired font stretch. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.FontStyle">
      <summary>Gets or sets the font style for the content in this element.</summary>
      <returns>One of the <see cref="T:System.Windows.FontStyles" /> property values, specifying the font style. The default is <see cref="P:System.Windows.FontStyles.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.FontWeight">
      <summary>Gets or sets the top-level font weight to select from the font family for the content in this element.</summary>
      <returns>One of the <see cref="T:System.Windows.FontWeights" /> property values, specifying the font weight. The default is <see cref="P:System.Windows.FontWeights.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the content in this element. </summary>
      <returns>The brush that is applied to the text contents. The default is a <see cref="T:System.Windows.Media.SolidColorBrush" /> with <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> value <see cref="P:System.Windows.Media.Colors.Black" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.Language">
      <summary>Gets or sets the language of the content within an <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <returns>A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />. The default is a <see cref="T:System.Windows.Markup.XmlLanguage" /> value created with the string en-US (<see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> is "en-US").</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.Name">
      <summary>Gets or sets a unique identification for the object. <see cref="P:System.Windows.Documents.Inline.Name" /> can only be set from initial parsing of XAML.</summary>
      <returns>The unique identifier for the object. This property is read-only for code, but write-only for XAML, due to special parser handling of XAML properties named "Name".</returns>
    </member>
    <member name="T:System.Windows.Ink.DrawingAttributes">
      <summary>Specifies drawing attributes that are used to draw a <see cref="T:System.Windows.Ink.Stroke" />.</summary>
    </member>
    <member name="M:System.Windows.Ink.DrawingAttributes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Ink.DrawingAttributes" /> class. </summary>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.Color">
      <summary>Gets or sets the color that is used to draw a <see cref="T:System.Windows.Ink.Stroke" />.</summary>
      <returns>The color that is used to draw a <see cref="T:System.Windows.Ink.Stroke" />. The default is Black.</returns>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.Height">
      <summary>Gets or sets the height of the stylus that is used to draw a <see cref="T:System.Windows.Ink.Stroke" />.</summary>
      <returns>The height of the stylus that is used to draw a <see cref="T:System.Windows.Ink.Stroke" />. The default is 2 pixels.</returns>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.OutlineColor">
      <summary>Gets or sets the outline color that is used to draw a <see cref="T:System.Windows.Ink.Stroke" />.</summary>
      <returns>The outline color of the stylus that is used to draw a <see cref="T:System.Windows.Ink.Stroke" />. The default is Black.</returns>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.Width">
      <summary>Gets or sets the width of the stylus that is used to draw a <see cref="T:System.Windows.Ink.Stroke" />.</summary>
      <returns>The width of the stylus that is used to draw a <see cref="T:System.Windows.Ink.Stroke" />. The default is 2 pixels.</returns>
    </member>
    <member name="T:System.Windows.Ink.Stroke">
      <summary>Represents a collection of points that correspond to a stylus-down, move, and stylus-up sequence.</summary>
    </member>
    <member name="M:System.Windows.Ink.Stroke.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Ink.Stroke" /> class.</summary>
    </member>
    <member name="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Ink.Stroke" /> class with the specified <see cref="T:System.Windows.Input.StylusPointCollection" />.</summary>
      <param name="stylusPoints">A <see cref="T:System.Windows.Input.StylusPointCollection" /> that represents the <see cref="T:System.Windows.Ink.Stroke" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stylusPoints" /> does not contain any stylus points.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylusPoints" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Ink.Stroke.DrawingAttributes">
      <summary>Gets or sets the properties of the stroke, such as <see cref="P:System.Windows.Ink.DrawingAttributes.Height" />, <see cref="P:System.Windows.Ink.DrawingAttributes.Width" />, <see cref="P:System.Windows.Ink.DrawingAttributes.Color" />, or <see cref="P:System.Windows.Ink.DrawingAttributes.OutlineColor" />. </summary>
      <returns>The <see cref="T:System.Windows.Ink.DrawingAttributes" /> of the stroke.</returns>
    </member>
    <member name="M:System.Windows.Ink.Stroke.GetBounds">
      <summary>Retrieves the bounding box for the <see cref="T:System.Windows.Ink.Stroke" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> structure defining the bounding box for the <see cref="T:System.Windows.Ink.Stroke" /> object.</returns>
    </member>
    <member name="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Input.StylusPointCollection)">
      <summary>Indicates whether a specified <see cref="T:System.Windows.Input.StylusPointCollection" /> intersects with a <see cref="T:System.Windows.Ink.Stroke" /> object.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Input.StylusPointCollection" /> intersects with the <see cref="T:System.Windows.Ink.Stroke" /> object; otherwise, false.</returns>
      <param name="stylusPointCollection">The <see cref="T:System.Windows.Input.StylusPointCollection" /> used to check for intersection with the <see cref="T:System.Windows.Ink.Stroke" /> object.</param>
    </member>
    <member name="P:System.Windows.Ink.Stroke.StylusPoints">
      <summary>Gets or sets the stylus points of the <see cref="T:System.Windows.Ink.Stroke" />.</summary>
      <returns>The <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains the stylus points that represent the current <see cref="T:System.Windows.Ink.Stroke" />.</returns>
    </member>
    <member name="T:System.Windows.Ink.StrokeCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Ink.Stroke" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Ink.StrokeCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Ink.StrokeCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Ink.StrokeCollection.GetBounds">
      <summary>Returns the bounds of the strokes in the collection.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that contains the bounds of the strokes in the <see cref="T:System.Windows.Ink.StrokeCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Input.StylusPointCollection)">
      <summary>Indicates whether a specified <see cref="T:System.Windows.Input.StylusPointCollection" /> intersects with a <see cref="T:System.Windows.Ink.StrokeCollection" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Ink.StrokeCollection" /> that contains the strokes that intersect with the points in the specified <see cref="T:System.Windows.Input.StylusPointCollection" />.</returns>
      <param name="stylusPointCollection">The <see cref="T:System.Windows.Input.StylusPointCollection" /> used to check for intersection with the <see cref="T:System.Windows.Ink.Stroke" /> object.</param>
    </member>
    <member name="T:System.Windows.Input.Cursor">
      <summary>Represents the image used for the mouse pointer.</summary>
    </member>
    <member name="M:System.Windows.Input.Cursor.ToString">
      <summary>Returns the string representation of the <see cref="T:System.Windows.Input.Cursor" />. </summary>
      <returns>The string representation of the cursor. This corresponds to the active <see cref="T:System.Windows.Input.Cursors" /> property name.</returns>
    </member>
    <member name="T:System.Windows.Input.Cursors">
      <summary>Defines a set of default mouse pointer images for Silverlight.</summary>
    </member>
    <member name="P:System.Windows.Input.Cursors.Arrow">
      <summary>Represents an Arrow <see cref="T:System.Windows.Input.Cursor" />. </summary>
      <returns>An Arrow <see cref="T:System.Windows.Input.Cursor" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Eraser">
      <summary>Represents an Eraser <see cref="T:System.Windows.Input.Cursor" />. </summary>
      <returns>An Eraser <see cref="T:System.Windows.Input.Cursor" />. </returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Hand">
      <summary>Represents a Hand <see cref="T:System.Windows.Input.Cursor" />. </summary>
      <returns>A Hand <see cref="T:System.Windows.Input.Cursor" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.IBeam">
      <summary>Represents an IBeam <see cref="T:System.Windows.Input.Cursor" />, which is typically used to show where the text cursor appears when the mouse is clicked. </summary>
      <returns>An IBeam <see cref="T:System.Windows.Input.Cursor" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.None">
      <summary>Represents a special <see cref="T:System.Windows.Input.Cursor" /> that is invisible. </summary>
      <returns>The None <see cref="T:System.Windows.Input.Cursor" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeNESW">
      <summary>Represents a SizeNESW <see cref="T:System.Windows.Input.Cursor" />.</summary>
      <returns>A SizeNESW <see cref="T:System.Windows.Input.Cursor" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeNS">
      <summary>Represents a SizeNS <see cref="T:System.Windows.Input.Cursor" />.</summary>
      <returns>A SizeNS <see cref="T:System.Windows.Input.Cursor" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeNWSE">
      <summary>Represents a SizeNWSE <see cref="T:System.Windows.Input.Cursor" />.</summary>
      <returns>A SizeNWSE <see cref="T:System.Windows.Input.Cursor" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeWE">
      <summary>Represents a SizeWE <see cref="T:System.Windows.Input.Cursor" />.</summary>
      <returns>A SizeWE <see cref="T:System.Windows.Input.Cursor" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Stylus">
      <summary>Represents a Stylus <see cref="T:System.Windows.Input.Cursor" />.</summary>
      <returns>A Stylus <see cref="T:System.Windows.Input.Cursor" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Wait">
      <summary>Represents a Wait<see cref="T:System.Windows.Input.Cursor" />. </summary>
      <returns>A Wait <see cref="T:System.Windows.Input.Cursor" />.</returns>
    </member>
    <member name="T:System.Windows.Input.FocusManager">
      <summary>Provides utility methods related to element focus, without the need to handle focus-related events.</summary>
    </member>
    <member name="M:System.Windows.Input.FocusManager.GetFocusedElement">
      <summary>Queries the Silverlight focus system to determine which object has focus. </summary>
      <returns>The object that currently has focus.  Typically, this is a <see cref="T:System.Windows.Controls.Control" /> class. </returns>
    </member>
    <member name="T:System.Windows.Input.ICommand">
      <summary>Defines the contract for commanding.</summary>
    </member>
    <member name="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
      <summary>Defines the method that determines whether the command can execute in its current state.</summary>
      <returns>true if this command can be executed; otherwise, false.</returns>
      <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null. </param>
    </member>
    <member name="E:System.Windows.Input.ICommand.CanExecuteChanged">
      <summary>Occurs when changes occur that affect whether the command should execute.</summary>
    </member>
    <member name="M:System.Windows.Input.ICommand.Execute(System.Object)">
      <summary>Defines the method to be called when the command is invoked.</summary>
      <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null. </param>
    </member>
    <member name="T:System.Windows.Input.ImeConversionModeValues">
      <summary>Describes a mode of input conversion to be performed by an input method editor interacting with a Silverlight-based application.</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Alphanumeric">
      <summary>The input method uses alphanumeric conversion mode. </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Native">
      <summary>The input method uses a native character (Hiragana, Hangul, Chinese) conversion mode. </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Katakana">
      <summary>The input method uses Katakana conversion mode. </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.FullShape">
      <summary>The input method uses full-shape conversion mode. </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Roman">
      <summary>The input method uses Roman character conversion mode. </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.CharCode">
      <summary>The input method uses character code conversion mode. </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.NoConversion">
      <summary>The input method will not perform any input conversion. </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Eudc">
      <summary>The input method uses EUDC (end user defined character) conversion mode. </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Symbol">
      <summary>The input method uses symbol conversion mode. </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Fixed">
      <summary>The input method uses fixed conversion mode. </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.DoNotCare">
      <summary>The input method does not care what input conversion method is used; the actual conversion method is indeterminate. </summary>
    </member>
    <member name="T:System.Windows.Input.InputMethod">
      <summary>Specifies attached properties that influence input method editor (IME) features and support when used with a Silverlight-based application.</summary>
    </member>
    <member name="M:System.Windows.Input.InputMethod.GetIsInputMethodEnabled(System.Windows.DependencyObject)">
      <summary>Gets the value for the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property on the specified object.</summary>
      <returns>The <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property value.</returns>
      <param name="target">The object to get the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property value from.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a <see cref="T:System.Windows.Controls.TextBox" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.GetPreferredImeConversionMode(System.Windows.DependencyObject)">
      <summary>Gets the value for the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property on the specified object.</summary>
      <returns>The <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property value.</returns>
      <param name="target">The object to get the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property value from.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a <see cref="T:System.Windows.Controls.TextBox" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.GetPreferredImeState(System.Windows.DependencyObject)">
      <summary>Gets the value for the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property on the specified object.</summary>
      <returns>The <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property value.</returns>
      <param name="target">The object to get the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property value from.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a <see cref="T:System.Windows.Controls.TextBox" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Input.InputMethod.IsInputMethodEnabled">
      <summary>Gets or sets a value that determines whether input method editors can be used to provide input for the control where the property is attached.</summary>
      <returns>true if input method editors can be used to provide input; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Input.InputMethod.IsInputMethodEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Input.InputMethod.PreferredImeConversionMode">
      <summary>Gets or sets a preferred <see cref="T:System.Windows.Input.ImeConversionModeValues" /> value for a specified dependency object.</summary>
      <returns>A preferred <see cref="T:System.Windows.Input.ImeConversionModeValues" /> value for a specified dependency object.</returns>
    </member>
    <member name="F:System.Windows.Input.InputMethod.PreferredImeConversionModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Input.InputMethod.PreferredImeState">
      <summary>Gets or sets a preferred input method state for a specified dependency object.</summary>
      <returns>A preferred input method state for a specified dependency object.</returns>
    </member>
    <member name="F:System.Windows.Input.InputMethod.PreferredImeStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Input.InputMethod.SetIsInputMethodEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value for the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property on the specified object.</summary>
      <param name="target">The object on which to set the <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> attached property value.</param>
      <param name="value">The value to set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a <see cref="T:System.Windows.Controls.TextBox" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.SetPreferredImeConversionMode(System.Windows.DependencyObject,System.Windows.Input.ImeConversionModeValues)">
      <summary>Sets the value for the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property on the specified object.</summary>
      <param name="target">The object on which to set the <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> attached property value.</param>
      <param name="value">The value to set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a <see cref="T:System.Windows.Controls.TextBox" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.SetPreferredImeState(System.Windows.DependencyObject,System.Windows.Input.InputMethodState)">
      <summary>Sets the value for the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property on the specified object.</summary>
      <param name="target">The object on which to set the <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> attached property value.</param>
      <param name="value">The value to set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a <see cref="T:System.Windows.Controls.TextBox" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Input.InputMethodState">
      <summary>Describes the state of an input method editor when it interacts with a Silverlight-based application.</summary>
    </member>
    <member name="F:System.Windows.Input.InputMethodState.Off">
      <summary>The input method editor is off for purposes of generating device independent input. </summary>
    </member>
    <member name="F:System.Windows.Input.InputMethodState.On">
      <summary>The input method editor is on. </summary>
    </member>
    <member name="F:System.Windows.Input.InputMethodState.DoNotCare">
      <summary>The input method is in an indeterminate state. </summary>
    </member>
    <member name="T:System.Windows.Input.InputScope">
      <summary>Represents information related to the scope of data provided by an input method.</summary>
    </member>
    <member name="M:System.Windows.Input.InputScope.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.InputScope" /> class. </summary>
    </member>
    <member name="P:System.Windows.Input.InputScope.Names">
      <summary>Gets or sets the input scope names, as a list of strings.</summary>
      <returns>The input scope names, as a list of strings.</returns>
    </member>
    <member name="T:System.Windows.Input.InputScopeConverter">
      <summary>Provides type conversion support for the <see cref="T:System.Windows.Input.InputScope" /> class.</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.InputScopeConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of one type to the <see cref="T:System.Windows.Input.InputScope" /> type. </summary>
      <returns>true if <paramref name="sourceType" /> is type <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether conversion is possible to the specified type from a <see cref="T:System.Windows.Input.InputScope" /> object.</summary>
      <returns>This implementation always returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">The intended destination type for the conversion.</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to an <see cref="T:System.Windows.Input.InputScope" /> object. </summary>
      <returns>The <see cref="T:System.Windows.Input.InputScope" /> created from converting source.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">Describes the intended <see cref="T:System.Globalization.CultureInfo" /> for the conversion.</param>
      <param name="source">The object that the converter should convert.</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified value object to the specified type. </summary>
      <returns>The converted object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">Describes the intended <see cref="T:System.Globalization.CultureInfo" /> for the conversion.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The intended destination type for the conversion.</param>
    </member>
    <member name="T:System.Windows.Input.InputScopeName">
      <summary>Defines a name for text input patterns.</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.InputScopeName" /> class. </summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeName.#ctor(System.Windows.Input.InputScopeNameValue)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.InputScopeName" /> class using an initializing <see cref="T:System.Windows.Input.InputScopeNameValue" />.</summary>
      <param name="nameValue">The input scope name value, as a value of the <see cref="T:System.Windows.Input.InputScopeNameValue" /> enumeration.</param>
    </member>
    <member name="P:System.Windows.Input.InputScopeName.NameValue">
      <summary>Gets or sets the input scope name value, which modifies how input from alternative input methods is interpreted.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="T:System.Windows.Input.InputScopeNameConverter">
      <summary>Provides type conversion support for the <see cref="T:System.Windows.Input.InputScopeName" /> class.</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.InputScopeNameConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of one type to the <see cref="T:System.Windows.Input.InputScopeName" /> type. </summary>
      <returns>true if <paramref name="sourceType" /> is type <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether conversion is possible to the specified type from a <see cref="T:System.Windows.Input.InputScopeName" /> object.</summary>
      <returns>true if <paramref name="destinationType" /> is a type that this converter can convert to <see cref="T:System.Windows.Input.InputScopeName" />; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">The intended destination type for the conversion.</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to an <see cref="T:System.Windows.Input.InputScopeName" /> object. </summary>
      <returns>The <see cref="T:System.Windows.Input.InputScopeName" /> created from converting source.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">Describes the intended <see cref="T:System.Globalization.CultureInfo" /> for the conversion.</param>
      <param name="source">The object that the converter should convert.</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified value object to the specified type. </summary>
      <returns>The converted object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">Describes the intended <see cref="T:System.Globalization.CultureInfo" /> for the conversion.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The intended destination type for the conversion.</param>
    </member>
    <member name="T:System.Windows.Input.InputScopeNameValue">
      <summary>Specifies the input scope name, which modifies how input from alternative input methods is interpreted.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressCity">
      <summary>The text input pattern for a city address.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressCountryName">
      <summary>The text input pattern for the name of a country/region.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressCountryShortName">
      <summary>The text input pattern for the abbreviated name of a country/region.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressStateOrProvince">
      <summary>The text input pattern for a state or province.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressStreet">
      <summary>The text input pattern for a street address.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AlphanumericFullWidth">
      <summary>The text input pattern for alphanumeric full-width characters.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AlphanumericHalfWidth">
      <summary>The text input pattern for alphanumeric half-width characters.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.ApplicationEnd">
      <summary>Not supported. For internal use in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Bopomofo">
      <summary>The text input pattern for the Bopomofo Mandarin Chinese phonetic transcription system.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Chat">
      <summary>The SIP layout for text messaging, which recognizes pre-defined abbreviations. Supported only in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.CurrencyAmount">
      <summary>The text input pattern for amount of currency.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.CurrencyAmountAndSymbol">
      <summary>The text input pattern for amount and symbol of currency.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.CurrencyChinese">
      <summary>The text input pattern for Chinese currency.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Date">
      <summary>The text input pattern for a calendar date.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateDay">
      <summary>The text input pattern for the numeric day in a calendar date.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateDayName">
      <summary>The text input pattern for the name of the day in a calendar date.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateMonth">
      <summary>The text input pattern for the numeric month in a calendar date.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateMonthName">
      <summary>The text input pattern for the name of the month in a calendar date.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateYear">
      <summary>The text input pattern for the year in a calendar date.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Default">
      <summary>The default handling of input commands.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Digits">
      <summary>The text input pattern for digits.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EmailNameOrAddress">
      <summary>The SIP layout for an e-mail name or address. Supported only in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EmailSmtpAddress">
      <summary>The text input pattern for a Simple Mail Transfer Protocol (SMTP) email address.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EmailUserName">
      <summary>The text input pattern for an email user name.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EnumString">
      <summary>Not supported. For internal use in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.FileName">
      <summary>The text input pattern for a file name.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.FullFilePath">
      <summary>The text input pattern for the full path of a file.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Hanja">
      <summary>The text input pattern for Hanja characters.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Hiragana">
      <summary>The text input pattern for the Hiragana writing system.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.KatakanaFullWidth">
      <summary>The text input pattern for full-width Katakana characters.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.KatakanaHalfWidth">
      <summary>The text input pattern for half-width Katakana characters.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.LogOnName">
      <summary>The text input pattern for a log on name.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Maps">
      <summary>The SIP layout for entering a map location. Supported only in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.NameOrPhoneNumber">
      <summary>The SIP layout for SMS To field. Supported only in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Number">
      <summary>The text input pattern for a number.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.NumberFullWidth">
      <summary>The text input pattern for a full-width number.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.OneChar">
      <summary>The text input pattern for one character.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Password">
      <summary>The text input pattern for a password.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalFullName">
      <summary>The text input pattern for a person's full name.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalGivenName">
      <summary>The text input pattern for a person's given name.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalMiddleName">
      <summary>The text input pattern for a person's middle name.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalNamePrefix">
      <summary>The text input pattern for the prefix of a person's name.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalNameSuffix">
      <summary>The text input pattern for the suffix of a person's name.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalSurname">
      <summary>The text input pattern for a person's surname.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PhraseList">
      <summary>The text input pattern for a phrase list.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PostalAddress">
      <summary>The text input pattern for a postal address.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PostalCode">
      <summary>The text input pattern for a postal code.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Private">
      <summary>Not supported. For internal use in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.RegularExpression">
      <summary>The text input pattern for a regular expression.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Search">
      <summary>The SIP layout for a search query. Supported only in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Srgs">
      <summary>The text input pattern for the Speech Recognition Grammar Specification (SRGS).</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneAreaCode">
      <summary>The text input pattern for a telephone area code.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneCountryCode">
      <summary>The text input pattern for a telephone country/region code.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneLocalNumber">
      <summary>The text input pattern for a telephone local number.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneNumber">
      <summary>The text input pattern for a telephone number.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Text">
      <summary>The software input panel (SIP) layout for standard text input. Supported only in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Time">
      <summary>The text input pattern for the time.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TimeHour">
      <summary>The text input pattern for the hour of the time.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TimeMinorSec">
      <summary>The text input pattern for the minutes or seconds of time.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Url">
      <summary>The text input pattern for a Uniform Resource Locator (URL).</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Xml">
      <summary>The text input pattern for XML.</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Yomi">
      <summary>Not supported. For internal use in Silverlight for Windows Phone.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary>Specifies the possible key values on a keyboard. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary>A special value indicating no key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary>The BACKSPACE key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary>The TAB key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary>The ENTER key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Shift">
      <summary>The SHIFT key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Ctrl">
      <summary>The CTRL (control) key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Alt">
      <summary>The ALT key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary>The CAPSLOCK key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary>The ESC (also known as ESCAPE) key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary>The SPACE key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary>The PAGEUP key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary>The PAGEDOWN key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary>The END key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary>The HOME key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary>The left arrow key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary>The up arrow key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary>The right arrow key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary>The down arrow key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary>The INSERT key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary>The DEL (also known as DELETE) key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary>The 0 (zero) key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary>The 1 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary>The 2 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary>The 3 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary>The 4 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary>The 5 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary>The 6 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary>The 7 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary>The 8 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary>The 9 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary>The A key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary>The B key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary>The C key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary>The D key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary>The E key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary>The F key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary>The G key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary>The H key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary>The I key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary>The J key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary>The K key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary>The L key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary>The M key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary>The N key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary>The O key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary>The P key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary>The Q key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary>The R key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary>The S key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary>The T key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary>The U key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary>The V key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary>The W key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary>The X key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary>The Y key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary>The Z key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary>The F1 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary>The F2 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary>The F3 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary>The F4 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary>The F5 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary>The F6 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary>The F7 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary>The F8 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary>The F9 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary>The F10 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary>The F11 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary>The F12 key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary>The 0 key on the number pad.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary>The 1 key on the number pad.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary>The 2 key on the number pad.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary>The 3 key on the number pad.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary>The 4 key on the number pad.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary>The 5 key on the number pad.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary>The 6 key on the number pad.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary>The 7 key on the number pad.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary>The 8 key on the number pad.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary>The 9 key on the number pad.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary>The * (MULTIPLY) key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary>The + (ADD) key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary>The - (SUBTRACT) key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary>The . (DECIMAL) key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary>The / (DIVIDE) key.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Unknown">
      <summary>A special value indicating the key is out of range of this enumeration.</summary>
    </member>
    <member name="T:System.Windows.Input.Keyboard">
      <summary>Represents the keyboard device. </summary>
    </member>
    <member name="P:System.Windows.Input.Keyboard.Modifiers">
      <summary>Gets the set of <see cref="T:System.Windows.Input.ModifierKeys" /> that are currently pressed. </summary>
      <returns>A bitwise combination of the enumeration values.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigationMode">
      <summary>Specifies the tabbing behavior across tab stops for a Silverlight tabbing sequence within a container.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Local">
      <summary>Tab indexes are considered on the local subtree only inside this container.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Cycle">
      <summary>Focus returns to the first or the last keyboard navigation stop inside of a container when the first or last keyboard navigation stop is reached.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Once">
      <summary>The container and all of its child elements as a whole receive focus only once. </summary>
    </member>
    <member name="T:System.Windows.Input.KeyEventArgs">
      <summary>Provides event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> and <see cref="E:System.Windows.UIElement.KeyDown" /> events.</summary>
    </member>
    <member name="P:System.Windows.Input.KeyEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A true value for Handled prevents most handlers along the event route from handling the same event again.</summary>
      <returns>true to mark the routed event handled; false to leave the routed event unhandled, which permits the event to potentially route further. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Input.KeyEventArgs.Key">
      <summary>Gets the keyboard key associated with the event. </summary>
      <returns>One of the enumeration values that indicates the key referenced by the event.</returns>
    </member>
    <member name="P:System.Windows.Input.KeyEventArgs.PlatformKeyCode">
      <summary>Gets an integer value that represents the key that is pressed or released (depending on which event is raised). This value is the nonportable key code, which is operating system–specific.</summary>
      <returns>The key code value.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.UIElement.KeyUp" /> and <see cref="E:System.Windows.UIElement.KeyDown" /> events.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Input.ManipulationCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event. </summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationCompletedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.ManipulationCompletedEventArgs" /> class. </summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities">
      <summary>Gets the velocities that are used for the manipulation.</summary>
      <returns>The velocities that are used for the manipulation.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. Setting to true prevents most handlers along the event route from handling the same event again.</summary>
      <returns>true to mark the routed event handled; false to leave the routed event unhandled, which permits the event to potentially route further. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.IsInertial">
      <summary>Gets whether the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs during inertia.</summary>
      <returns>true if the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs during inertia; false if the event occurs while the user's input device has contact with the element.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer">
      <summary>Gets the container that defines the coordinates for the manipulation.</summary>
      <returns>The container element.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin">
      <summary>Gets the point from which the manipulation originated.</summary>
      <returns>The point from which the manipulation originated.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation">
      <summary>Gets the total transformation that occurs during the current manipulation.</summary>
      <returns>The total transformation that occurs during the current manipulation.</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationDelta">
      <summary>Contains transformation data that is accumulated when manipulation events occur.</summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.ManipulationDelta" /> class, using initial data. </summary>
      <param name="translation">Translation transformation to report.</param>
      <param name="scale">Initial scale transformation to report.</param>
    </member>
    <member name="P:System.Windows.Input.ManipulationDelta.Scale">
      <summary>Gets the amount the manipulation has resized as a multiplier.</summary>
      <returns>The amount the manipulation has resized as a multiplier.</returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationDelta.ScaleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.ManipulationDelta.Scale" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.ManipulationDelta.Scale" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDelta.Translation">
      <summary>Gets the linear motion of the manipulation.</summary>
      <returns>The linear motion of the manipulation.</returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationDelta.TranslationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.ManipulationDelta.Translation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.ManipulationDelta.Translation" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationDeltaEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event. </summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationDeltaEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.ManipulationDeltaEventArgs" /> class. </summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete">
      <summary>Completes the manipulation without inertia.</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation">
      <summary>Gets the accumulated changes of the current manipulation, as a <see cref="T:System.Windows.Input.ManipulationDelta" />.</summary>
      <returns>The accumulated changes of the current manipulation.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation">
      <summary>Gets the most recent changes of the current manipulation, as a <see cref="T:System.Windows.Input.ManipulationDelta" />.</summary>
      <returns>The most recent changes of the current manipulation.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. Setting to true prevents most handlers along the event route from handling the same event again.</summary>
      <returns>true to mark the routed event handled; false to leave the routed event unhandled, which permits the event to potentially route further. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial">
      <summary>Gets whether the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia.</summary>
      <returns>true if the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia; false if the event occurs while the user's input device has contact with the element.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer">
      <summary>Gets the container that defines the coordinates for the manipulation.</summary>
      <returns>The container element.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin">
      <summary>Gets the point from which the manipulation originated.</summary>
      <returns>The point from which the manipulation originated.</returns>
    </member>
    <member name="M:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia">
      <summary>Starts inertia on the manipulation by ignoring subsequent contact movements.</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities">
      <summary>Gets the rates of the most recent changes to the manipulation.</summary>
      <returns>The rates of the most recent changes to the manipulation.</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationStartedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> event. </summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationStartedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.ManipulationStartedEventArgs" /> class. </summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationStartedEventArgs.Complete">
      <summary>Completes the manipulation without inertia.</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationStartedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. Setting to true prevents most handlers along the event route from handling the same event again.</summary>
      <returns>true to mark the routed event handled; false to leave the routed event unhandled, which permits the event to potentially route further. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer">
      <summary>Gets the container that defines the coordinates for the manipulation.</summary>
      <returns>The container element.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin">
      <summary>Gets the point from which the manipulation originated.</summary>
      <returns>The point from which the manipulation originated.</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationVelocities">
      <summary>Describes the speed at which manipulations occurs.</summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationVelocities.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.ManipulationVelocities" /> class using initial values. </summary>
      <param name="linear">Linear rate to report.</param>
      <param name="expansion">Expansion rate to report.</param>
    </member>
    <member name="P:System.Windows.Input.ManipulationVelocities.ExpansionVelocity">
      <summary>Gets the rate at which the manipulation resized. </summary>
      <returns>The rate at which the manipulation resized. </returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationVelocities.ExpansionVelocityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.ManipulationVelocities.ExpansionVelocity" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.ManipulationVelocities.ExpansionVelocity" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationVelocities.LinearVelocity">
      <summary>Gets the speed of linear motion.</summary>
      <returns>The speed of linear motion.</returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationVelocities.LinearVelocityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.ManipulationVelocities.LinearVelocity" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.ManipulationVelocities.LinearVelocity" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary>Specifies the set of modifier keys. </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary>No modifiers are pressed. </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary>The ALT key is pressed.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary>The CTRL key is pressed.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary>The SHIFT key is pressed.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary>The Windows logo key is pressed.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Apple">
      <summary>The Apple key (also known as the Open Apple key) is pressed.</summary>
    </member>
    <member name="T:System.Windows.Input.MouseButtonEventArgs">
      <summary>Provides event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> and <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> events. </summary>
    </member>
    <member name="P:System.Windows.Input.MouseButtonEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A true value for Handled prevents most handlers along the event route from handling the same event again.</summary>
      <returns>true to mark the routed event handled. false to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is false.</returns>
    </member>
    <member name="T:System.Windows.Input.MouseButtonEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> and <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> events. </summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Input.MouseEventArgs">
      <summary>Provides data for mouse-related events that do not specifically involve mouse buttons, for example <see cref="E:System.Windows.UIElement.MouseMove" />.</summary>
    </member>
    <member name="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.UIElement)">
      <summary>Returns the x- and y-coordinates of the mouse pointer position, optionally evaluated against a coordinate origin of a supplied <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> that represents the current x- and y-coordinates of the mouse pointer position. If null was passed as <paramref name="relativeTo" />, this coordinate is for the overall Silverlight plug-in content area. If a non-null <paramref name="relativeTo" /> was passed, this coordinate is relative to the object referenced by <paramref name="relativeTo" />.</returns>
      <param name="relativeTo">Any <see cref="T:System.Windows.UIElement" />-derived object that is contained by the Silverlight plug-in and connected to the object tree. To specify the object relative to the overall Silverlight coordinate system, use a <paramref name="relativeTo" /> value of null.</param>
    </member>
    <member name="P:System.Windows.Input.MouseEventArgs.StylusDevice">
      <summary>Gets an object that reports stylus device information, such as the collection of stylus points associated with the input.</summary>
      <returns>The stylus device information object.</returns>
    </member>
    <member name="T:System.Windows.Input.MouseEventHandler">
      <summary>Represents the method that will handle mouse related routed events that do not specifically involve mouse buttons; for example, <see cref="E:System.Windows.UIElement.MouseMove" />.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Input.MouseWheelEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event. </summary>
    </member>
    <member name="P:System.Windows.Input.MouseWheelEventArgs.Delta">
      <summary>Gets a value that indicates the amount that the mouse wheel rotated relative to its starting state or to the last occurrence of the event. </summary>
      <returns>An integer value that provides a factor of how much the mouse wheel rotated. This value can be a negative integer; see Remarks.</returns>
    </member>
    <member name="P:System.Windows.Input.MouseWheelEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled, and prevents most handlers along the event route from rehandling the same event.</summary>
      <returns>true if the routed event is marked as handled. false if the routed event is kept unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is false.</returns>
    </member>
    <member name="T:System.Windows.Input.MouseWheelEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</summary>
      <param name="sender">The object where the event handler is attached. </param>
      <param name="e">The event data for the event.</param>
    </member>
    <member name="T:System.Windows.Input.StylusDevice">
      <summary>Reports stylus device information, such as the collection of stylus points associated with the input.</summary>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.DeviceType">
      <summary>Gets the type of the tablet device.</summary>
      <returns>The type of the tablet device.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusDevice.GetStylusPoints(System.Windows.UIElement)">
      <summary>Returns the stylus points collected since the last mouse event.</summary>
      <returns>A collection of the stylus points collected since the last mouse event.</returns>
      <param name="relativeTo">Specifies the offset for the object (typically an <see cref="T:System.Windows.Controls.InkPresenter" />) that should be applied to captured points.</param>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.Inverted">
      <summary>Gets or sets a value that indicates whether the stylus is inverted.</summary>
      <returns>true if the stylus is inverted; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusPoint">
      <summary>Represents a single point collected while the user is entering ink strokes with the stylus or mouse.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPoint" /> class. </summary>
      <param name="x">The x-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" /> in a pixel grid.</param>
      <param name="y">The y-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" /> in a pixel grid.</param>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.PressureFactor">
      <summary>Gets or sets the pressure factor of the stylus on the screen.</summary>
      <returns>The pressure factor of the stylus on the screen. The default is 0.5.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Input.StylusPoint.PressureFactor" />is set to a value that is less than 0 or greater than 1.0.</exception>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.X">
      <summary>Gets or sets the value for the x-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
      <returns>The x-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" /> in a pixel grid. The default is 0.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Input.StylusPoint.X" /> is set a value that evaluates to infinity or a value that is not a number.</exception>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.Y">
      <summary>Gets or sets the value for the y-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
      <returns>The y-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" /> in a pixel grid. The default is 0.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Input.StylusPoint.Y" /> is set a value that evaluates to infinity or a value that is not a number.</exception>
    </member>
    <member name="T:System.Windows.Input.StylusPointCollection">
      <summary>Represents a collection of related <see cref="T:System.Windows.Input.StylusPoint" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.Add(System.Windows.Input.StylusPointCollection)">
      <summary>Adds a collection of <see cref="T:System.Windows.Input.StylusPoint" /> objects to the collection. </summary>
      <param name="stylusPoints">The collection of <see cref="T:System.Windows.Input.StylusPoint" /> objects to add to the collection.</param>
    </member>
    <member name="T:System.Windows.Input.TabletDeviceType">
      <summary>Defines values for the type of devices the tablet device uses.</summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Mouse">
      <summary>Indicates the tablet device is a mouse.</summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Stylus">
      <summary>Indicates the tablet device is a stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Touch">
      <summary>Indicates the tablet device is a touch screen.</summary>
    </member>
    <member name="T:System.Windows.Input.TextComposition">
      <summary>Represents a composition related to text input which includes the composition text itself.</summary>
    </member>
    <member name="P:System.Windows.Input.TextComposition.CompositionText">
      <summary>Gets the composition text for this text composition.</summary>
      <returns>The composition text for this text composition.</returns>
    </member>
    <member name="T:System.Windows.Input.TextCompositionEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.UIElement.TextInput" /> routed event. </summary>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled, and prevents most handlers along the event route from handling the same event again.</summary>
      <returns>true to mark the routed event handled. false to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.Text">
      <summary>Gets or sets the text string that of the text composition.</summary>
      <returns>The text string of the text composition.</returns>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.TextComposition">
      <summary>Gets or sets the text in the composition as a <see cref="T:System.Windows.Input.TextComposition" /> object.</summary>
      <returns>The text in the composition, as a <see cref="T:System.Windows.Input.TextComposition" /> object.</returns>
    </member>
    <member name="T:System.Windows.Input.TextCompositionEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</summary>
      <param name="sender">The object where the event handler is attached. </param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:System.Windows.Input.Touch">
      <summary>Provides an application-level service that processes multitouch input from the operating system and raises the Silverlight-specific <see cref="E:System.Windows.Input.Touch.FrameReported" /> event.</summary>
    </member>
    <member name="E:System.Windows.Input.Touch.FrameReported">
      <summary>Occurs when the input system promotes a Windows 7 multitouch message for Silverlight.</summary>
    </member>
    <member name="T:System.Windows.Input.TouchAction">
      <summary>Describes the action of a specific touch point.</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Down">
      <summary>A touch action from a TOUCHEVENTF_DOWN message.</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Move">
      <summary>A touch action from a TOUCHEVENTF_MOVE message.</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Up">
      <summary>A touch action from a TOUCHEVENTF_UP message.</summary>
    </member>
    <member name="T:System.Windows.Input.TouchDevice">
      <summary>Identifies a "device" that produced the touch point. This is not a literal device, instead it distinguishes touch points through a down/move/up sequence.</summary>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.TouchDevice" /> class. </summary>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.DirectlyOver">
      <summary>Gets the topmost <see cref="T:System.Windows.UIElement" /> object that the mouse is over at the time that this touch point was produced.</summary>
      <returns>The topmost (in Z-order) <see cref="T:System.Windows.UIElement" /> object that the mouse is over at the time that this touch point was produced.</returns>
    </member>
    <member name="F:System.Windows.Input.TouchDevice.DirectlyOverProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.TouchDevice.DirectlyOver" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.TouchDevice.DirectlyOver" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.Id">
      <summary>Gets a unique ID as provided by the operating system for a particular touch device.</summary>
      <returns>A unique ID for a particular touch device.</returns>
    </member>
    <member name="F:System.Windows.Input.TouchDevice.IdProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.TouchDevice.Id" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.TouchDevice.Id" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Input.TouchFrameEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event. </summary>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.UIElement)">
      <summary>Returns the primary touch point for the reported frame as a <see cref="T:System.Windows.Input.TouchPoint" /> value. The touch point can be evaluated against a coordinate reference point instead of the absolute Silverlight coordinates.</summary>
      <returns>The primary touch point for the reported frame.</returns>
      <param name="relativeTo">A coordinate reference point that can be used to offset the coordinates of the return value <see cref="T:System.Windows.Input.TouchPoint" /> . If you want the reference to be based on Silverlight absolute coordinates, specify <paramref name="relativeTo" /> as null.</param>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.UIElement)">
      <summary>Returns a collection of all <see cref="T:System.Windows.Input.TouchPoint" /> values in the reported frame. The touch point can be evaluated against a coordinate reference point instead of the absolute Silverlight coordinates.</summary>
      <returns>A collection of <see cref="T:System.Windows.Input.TouchPoint" /> values.</returns>
      <param name="relativeTo">A coordinate reference point that can be used to offset the coordinates of all <see cref="T:System.Windows.Input.TouchPoint" /> items in the returned collection. If you want the reference to be based on Silverlight absolute coordinates, specify <paramref name="relativeTo" /> as null.</param>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp">
      <summary>Disables automatic mouse-event promotion for the primary touch point until all touch points report as <see cref="F:System.Windows.Input.TouchAction.Up" />.</summary>
      <exception cref="T:System.InvalidOperationException">No primary touch point was recorded.-or-The primary touch point has an action other than <see cref="F:System.Windows.Input.TouchAction.Down" />.</exception>
    </member>
    <member name="P:System.Windows.Input.TouchFrameEventArgs.Timestamp">
      <summary>Gets an integer time-stamp value for the event.</summary>
      <returns>An integer time-stamp value for the event.</returns>
    </member>
    <member name="T:System.Windows.Input.TouchFrameEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event of <see cref="T:System.Windows.Input.Touch" />.</summary>
      <param name="sender">The object where the event is handled.</param>
      <param name="e">Data for the event.</param>
    </member>
    <member name="T:System.Windows.Input.TouchPoint">
      <summary>Represents a single touch point from a multitouch message source.</summary>
    </member>
    <member name="M:System.Windows.Input.TouchPoint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.TouchPoint" /> class. </summary>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Action">
      <summary>Gets the type of action (up, down, move) that the <see cref="T:System.Windows.Input.TouchPoint" /> represents.</summary>
      <returns>A value of the <see cref="T:System.Windows.Input.TouchAction" /> enumeration.</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.ActionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.TouchPoint.Action" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.TouchPoint.Action" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Position">
      <summary>Gets the X,Y coordinate position of the touch point as a <see cref="T:System.Windows.Point" />.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> value that reports the coordinate position of the touch point.</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.PositionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.TouchPoint.Position" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.TouchPoint.Position" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Size">
      <summary>Gets the rectangular area that is reported as the touch-point contact area.</summary>
      <returns>A <see cref="T:System.Windows.Size" /> value. If the device that is used for multitouch input does not support reporting a touch size area, this property reports a <see cref="T:System.Windows.Size" /> with values of -1, instead of null.</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.SizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.TouchPoint.Size" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.TouchPoint.Size" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.TouchDevice">
      <summary>Gets the specific device type that produced the touch point.</summary>
      <returns>A <see cref="P:System.Windows.Input.TouchPoint.TouchDevice" /> value that reports specific information about the generating device.</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.TouchDeviceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.TouchPoint.TouchDevice" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.TouchPoint.TouchDevice" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Input.TouchPointCollection">
      <summary>Contains a collection of <see cref="T:System.Windows.Input.TouchPoint" /> values.</summary>
    </member>
    <member name="T:System.Windows.Interop.Content">
      <summary>Reports details about the instantiation settings of a-based application, and exposes some of the HTML DOM values for the hosted Silverlight plug-in instance. The <see cref="T:System.Windows.Interop.Content" /> object contains APIs that specifically relate to the Silverlight content area (the area that is declared by the width and height in the initialization).</summary>
    </member>
    <member name="M:System.Windows.Interop.Content.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.Content" /> class.</summary>
    </member>
    <member name="P:System.Windows.Interop.Content.ActualHeight">
      <summary>Gets the browser-determined height of the Silverlight plug-in content area.</summary>
      <returns>The browser-determined height, in pixels, of the Silverlight plug-in content area. The default value is the height, in pixels, of the Silverlight plug-in, as specified by the HTML object element that instantiated it. </returns>
    </member>
    <member name="P:System.Windows.Interop.Content.ActualWidth">
      <summary>Gets the browser-determined width of the Silverlight plug-in content area.</summary>
      <returns>The browser-determined width, in pixels, of the Silverlight plug-in content area. The default value is the width of the Silverlight plug-in, as specified by the HTML object element that instantiated it. </returns>
    </member>
    <member name="E:System.Windows.Interop.Content.FullScreenChanged">
      <summary>Occurs when the hosted Silverlight plug-in either enters or exits full-screen mode.</summary>
    </member>
    <member name="P:System.Windows.Interop.Content.FullScreenOptions">
      <summary>Gets or sets a value that indicates the behavior of full-screen mode.</summary>
      <returns>A value that indicates the behavior of full-screen mode. </returns>
    </member>
    <member name="P:System.Windows.Interop.Content.IsFullScreen">
      <summary>Gets or sets a value that indicates whether the Silverlight plug-in is displaying in full-screen mode.</summary>
      <returns>true if the Silverlight plug-in displays as a full-screen plug-in. false if the Silverlight plug-in displays as an embedded plug-in.</returns>
    </member>
    <member name="E:System.Windows.Interop.Content.Resized">
      <summary>Occurs when the <see cref="P:System.Windows.Interop.Content.ActualHeight" /> or the <see cref="P:System.Windows.Interop.Content.ActualWidth" /> of the Silverlight plug-in change.</summary>
    </member>
    <member name="E:System.Windows.Interop.Content.Zoomed">
      <summary>Occurs when the zoom setting in the host browser window changes or is initialized. </summary>
    </member>
    <member name="P:System.Windows.Interop.Content.ZoomFactor">
      <summary>Gets the factor by which the current browser window resizes its contents.  </summary>
      <returns>The zoom setting for the current browser window. </returns>
    </member>
    <member name="T:System.Windows.Interop.FullScreenOptions">
      <summary>Defines constants that indicate the behavior of full-screen mode. </summary>
    </member>
    <member name="F:System.Windows.Interop.FullScreenOptions.None">
      <summary>The application uses the default full-screen behavior.</summary>
    </member>
    <member name="F:System.Windows.Interop.FullScreenOptions.StaysFullScreenWhenUnfocused">
      <summary>The application does not exit full-screen mode when other applications gain focus. </summary>
    </member>
    <member name="T:System.Windows.Interop.HostingRenderTargetBitmap">
      <summary>Enables a native Silverlight host, such as Expression Blend or Visual Studio, to convert a <see cref="T:System.Windows.UIElement" /> object into a bitmap.</summary>
    </member>
    <member name="M:System.Windows.Interop.HostingRenderTargetBitmap.#ctor(System.Int32,System.Int32,System.IntPtr)">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Windows.Interop.HostingRenderTargetBitmap" /> class. </summary>
      <param name="width">The width of the <see cref="T:System.Windows.UIElement" /> to convert.</param>
      <param name="height">The height of the <see cref="T:System.Windows.UIElement" /> to convert.</param>
      <param name="bitmap">A pointer to the target bitmap.</param>
    </member>
    <member name="M:System.Windows.Interop.HostingRenderTargetBitmap.Render(System.Windows.UIElement)">
      <summary>Renders the <see cref="T:System.Windows.UIElement" /> object to the bitmap pointer specified in the constructor.</summary>
      <returns>The dirty rectangle. </returns>
      <param name="visual">The object to render.</param>
    </member>
    <member name="T:System.Windows.Interop.NavigationStateChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Interop.SilverlightHost.NavigationStateChanged" /> event. </summary>
    </member>
    <member name="M:System.Windows.Interop.NavigationStateChangedEventArgs.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.NavigationStateChangedEventArgs" /> class. </summary>
      <param name="previousNavigationState">The URI fragment that represents the previous navigation state. </param>
      <param name="newNavigationState">The URI fragment that represents the new navigation state.</param>
    </member>
    <member name="P:System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState">
      <summary>Gets the URI fragment that represents the new navigation state. </summary>
      <returns>The URI fragment that represents the new navigation state. </returns>
    </member>
    <member name="P:System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState">
      <summary>Gets the URI fragment that represents the previous navigation state. </summary>
      <returns>The URI fragment that represents the previous navigation state. </returns>
    </member>
    <member name="T:System.Windows.Interop.Settings">
      <summary>Reports details about the Silverlight-based application's instantiation settings, and exposes some of the HTML DOM values for the hosted Silverlight plug-in instance. </summary>
    </member>
    <member name="M:System.Windows.Interop.Settings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.Settings" /> object.</summary>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableAutoZoom">
      <summary>Gets or sets a value that indicates whether the Silverlight plug-in will resize its content based on the current browser zoom setting. </summary>
      <returns>true if Silverlight responds to the browser zoom setting; otherwise, false. The default is true if there is no handler for the <see cref="E:System.Windows.Interop.Content.Zoomed" /> event; otherwise, the default is false. </returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableCacheVisualization">
      <summary>Gets or sets a value that indicates whether to use a non-production analysis visualization mode, which shows areas of a page that are not being GPU accelerated with a colored overlay. Do not use in production code.</summary>
      <returns>true if cache visualization is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableFrameRateCounter">
      <summary>Gets or sets a value that indicates whether to display the current frame rate in the hosting browser's status bar. (Microsoft Internet Explorer only.)</summary>
      <returns>true if the frames-per-second (fps) of the current rendered Silverlight content will be displayed in the hosting browser's status bar; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableGPUAcceleration">
      <summary>Gets a value that indicates whether to use graphics processor unit (GPU) hardware acceleration for cached compositions, which potentially results in graphics optimization. </summary>
      <returns>true if hardware acceleration is enabled; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableHTMLAccess">
      <summary>Gets a value that indicates whether the Silverlight plug-in allows hosted content or its runtime to access the HTML DOM.</summary>
      <returns>true if hosted content can access the browser DOM; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableRedrawRegions">
      <summary>Gets or sets a value that indicates whether to show the areas of the Silverlight plug-in that are being redrawn each frame.</summary>
      <returns>true if the areas of the plug-in that are being redrawn each frame are shown; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.MaxFrameRate">
      <summary>Gets or sets the maximum number of frames to render per second.</summary>
      <returns>An integer value that specifies the maximum number of frames to render per second. The default value is 60.</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.Windowless">
      <summary>Gets a value that indicates whether the Silverlight plug-in displays as a windowless plug-in. (Applies to Windows versions of Silverlight only.)</summary>
      <returns>true if the Silverlight plug-in displays as a windowless plug-in; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Interop.SilverlightHost">
      <summary>Reports details about the Silverlight-based application's instantiation settings, and exposes some of the HTML DOM values for the hosted Silverlight plug-in instance.</summary>
    </member>
    <member name="M:System.Windows.Interop.SilverlightHost.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.SilverlightHost" /> class.</summary>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Background">
      <summary>Gets the background color value that was applied to the Silverlight plug-in as part of instantiation settings.</summary>
      <returns>The background color for the Silverlight plug-in.</returns>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Content">
      <summary>Gets the "Content" sub-object of this <see cref="T:System.Windows.Interop.SilverlightHost" />.</summary>
      <returns>The "Content" sub-object.</returns>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.InitParams">
      <summary>Gets the initialization parameters that were passed as part of HTML initialization of a Silverlight plug-in.</summary>
      <returns>The set of initialization parameters, as a dictionary with key strings and value strings.</returns>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.IsLoaded">
      <summary>Gets a value that indicates whether the hosted Silverlight plug-in has finished loading.</summary>
      <returns>true if the plug-in has finished loading; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Interop.SilverlightHost.IsVersionSupported(System.String)">
      <summary>Returns a value that indicates whether the installed Silverlight plug-in supports the specified version. </summary>
      <returns>true if the version can be supported by the installation; otherwise, false.</returns>
      <param name="versionStr">The version to check, in the form of major.minor.build.revision See Remarks for more information about the string form.</param>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.NavigationState">
      <summary>Gets or sets a URI fragment that represents the current navigation state.</summary>
      <returns>A URI fragment that represents the current navigation state.</returns>
      <exception cref="T:System.ArgumentNullException">When setting this property, the specified value is null.</exception>
    </member>
    <member name="E:System.Windows.Interop.SilverlightHost.NavigationStateChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Interop.SilverlightHost.NavigationState" /> property changes value.</summary>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Settings">
      <summary>Gets the "Settings" sub-object of this <see cref="T:System.Windows.Interop.SilverlightHost" />.</summary>
      <returns>The "Settings" sub-object.</returns>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Source">
      <summary>Gets the URI of the package or XAML file that specifies the XAML content to render.</summary>
      <returns>The URI of the package, XAML file, or XAML scripting tag that contains the content to load into the Silverlight plug-in.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary>Specifies which property of a class can be interpreted to be the content property when the class is parsed by a XAML processor.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> class, using the specified content property name.</summary>
      <param name="name">The content property name.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary>Gets the name of the property that is the declared content property.</summary>
      <returns>A string that contains the name of the property that is the content property.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlParseException">
      <summary>The exception that is thrown when a XAML parsing exception occurs.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LineNumber">
      <summary>Gets the line number where the exception occurred.</summary>
      <returns>The number of the line on which the XAML parsing exception occurred.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LinePosition">
      <summary>Gets the position in the line where the exception occurred.</summary>
      <returns>The position on the line where the XAML parsing exception occurred.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlReader">
      <summary>Provides a XAML processor engine for parsing XAML and creating corresponding Silverlight object trees.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.String)">
      <summary>Parses a well-formed XAML fragment and creates a corresponding Silverlight object tree, and returns the root of the object tree.</summary>
      <returns>The root object of the Silverlight object tree.</returns>
      <param name="xaml">A string that contains a valid XAML fragment.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadWithInitialTemplateValidation(System.String)">
      <summary>[SECURITY CRITICAL] Cannot be called.</summary>
      <returns>Cannot be called.</returns>
      <param name="xaml">Cannot be called.</param>
    </member>
    <member name="T:System.Windows.Markup.XmlLanguage">
      <summary>Represents culture information for use in XML and XAML markup.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.Equals(System.Object)">
      <summary>Checks for equality of an object to the current object.</summary>
      <returns>true if the objects are the same object; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare to the calling object.</param>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Windows.Markup.XmlLanguage" /> class.</summary>
      <returns>An integer hash value.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)">
      <summary>Returns a <see cref="T:System.Windows.Markup.XmlLanguage" /> instance, based on a string representing the language per RFC 3066.</summary>
      <returns>A new <see cref="T:System.Windows.Markup.XmlLanguage" /> with the provided string as its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value.</returns>
      <param name="ietfLanguageTag">An RFC 3066 language string, or an empty string ("").</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ietfLanguageTag" /> cannot be processed as a valid IETF language.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag">
      <summary>Gets the string representation of the language tag.</summary>
      <returns>A string that represents the language tag.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.op_Equality(System.Windows.Markup.XmlLanguage,System.Windows.Markup.XmlLanguage)">
      <summary>Determines whether two specified <see cref="T:System.Windows.Markup.XmlLanguage" /> objects have the same value. </summary>
      <returns>true if the value of <paramref name="xmlLanguage1" /> is the same as the value of <paramref name="xmlLanguage2" />; otherwise, false.</returns>
      <param name="xmlLanguage1">The first <see cref="T:System.Windows.Markup.XmlLanguage" /> to compare.</param>
      <param name="xmlLanguage2">The second <see cref="T:System.Windows.Markup.XmlLanguage" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.op_Inequality(System.Windows.Markup.XmlLanguage,System.Windows.Markup.XmlLanguage)">
      <summary>Determines whether two specified <see cref="T:System.Windows.Markup.XmlLanguage" /> objects have a different value. </summary>
      <returns>true if the value of <paramref name="xmlLanguage1" /> is different from the value of <paramref name="xmlLanguage2" />; otherwise, false.</returns>
      <param name="xmlLanguage1">The first <see cref="T:System.Windows.Markup.XmlLanguage" /> to compare.</param>
      <param name="xmlLanguage2">The second <see cref="T:System.Windows.Markup.XmlLanguage" /> to compare.</param>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary>Specifies a mapping in an assembly between an XML namespace identifier and a CLR namespace within that assembly.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> class.</summary>
      <param name="xmlNamespace">Specifies the <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace" />  value.</param>
      <param name="clrNamespace">Specifies the <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace" /> value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> or <paramref name="clrNamespace" /> are null.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary>Gets or sets the name of the assembly that contains the <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace" />.</summary>
      <returns>The name of the assembly that contains the <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary>Gets the CLR namespace that is mapped to <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace" /> by the attribute. </summary>
      <returns>The CLR namespace that is mapped to <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace" /> by the attribute. </returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary>Gets the XML namespace (xmlns) that is mapped to <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace" /> by the attribute.</summary>
      <returns>The XML namespace (xmlns) that is mapped to <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace" /> by the attribute.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary>Specifies a recommended prefix to associate with an XML namespace when writing elements and attributes in a XAML file.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /> class.</summary>
      <param name="xmlNamespace">The identifier of the relevant XML namespace (use a string, not a true <see cref="T:System.Uri" /> type).</param>
      <param name="prefix">The recommended prefix to use when mapping the XML namespace.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> or <paramref name="prefix" /> are null.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary>Gets the recommended prefix to associate with the XML namespace.</summary>
      <returns>A string that provides the recommended prefix to use when mapping the <see cref="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace" /> namespace.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary>Gets the XML namespace identifier.</summary>
      <returns>A string that provides the identifier for the relevant XML namespace. By convention, this is often a URI string.</returns>
    </member>
    <member name="T:System.Windows.Media.AcquireLicenseCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Media.LicenseAcquirer.AcquireLicenseCompleted" /> event. </summary>
    </member>
    <member name="P:System.Windows.Media.AcquireLicenseCompletedEventArgs.ResponseCustomData">
      <summary>Gets any custom data returned from the server in the license response.</summary>
      <returns>Any custom data returned from the server in the license response. If there is no custom data to return, you get an empty string. </returns>
      <exception cref="T:System.InvalidOperationException">If accessing this property when the license acquisition was canceled or if an error occurred.</exception>
    </member>
    <member name="T:System.Windows.Media.AlignmentX">
      <summary>Describes how content is positioned horizontally in a container. </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Left">
      <summary>The contents align toward the left of the container. </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Center">
      <summary>The contents align toward the center of the container. </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Right">
      <summary>The contents align toward the right of the container. </summary>
    </member>
    <member name="T:System.Windows.Media.AlignmentY">
      <summary>Describes how content is positioned vertically in a container. </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Top">
      <summary>The contents align toward the upper edge of the container. </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Center">
      <summary>The contents align toward the center of the container.</summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Bottom">
      <summary>The contents align toward the lower edge of the container. </summary>
    </member>
    <member name="T:System.Windows.Media.ArcSegment">
      <summary>Represents an elliptical arc between two points. </summary>
    </member>
    <member name="M:System.Windows.Media.ArcSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ArcSegment" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.IsLargeArc">
      <summary>Gets or sets a value that indicates whether the arc should be greater than 180 degrees.</summary>
      <returns>true if the arc should be greater than 180 degrees; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.IsLargeArcProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.Point">
      <summary>Gets or sets the endpoint of the elliptical arc.</summary>
      <returns>The point to which the arc is drawn. The default is a <see cref="T:System.Windows.Point" /> with value 0,0. </returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.PointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ArcSegment.Point" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ArcSegment.Point" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.RotationAngle">
      <summary>Gets or sets the amount (in degrees) by which the ellipse is rotated about the x-axis.  </summary>
      <returns>The amount (in degrees) by which the ellipse is rotated about the x-axis. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.RotationAngleProperty">
      <summary>Identifies the  <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.Size">
      <summary>Gets or sets the x- and y-radius of the arc as a <see cref="T:System.Windows.Size" /> structure. </summary>
      <returns>A <see cref="T:System.Windows.Size" /> structure that describes the x- and y-radius of the elliptical arc. The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the arc's x-radius; its <see cref="P:System.Windows.Size.Height" /> property specifies the arc's y-radius. The default is a <see cref="T:System.Windows.Size" /> with value 0,0.</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.SizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ArcSegment.Size" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ArcSegment.Size" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.SweepDirection">
      <summary>Gets or sets a value that specifies whether the arc is drawn in the <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> or <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> direction.</summary>
      <returns>One of the enumeration values that specifies the direction in which the arc is drawn. The default is <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.SweepDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" /> dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.AudioCaptureDevice">
      <summary>Describes either the desired or supported formats for an audio capture device, such as a microphone.</summary>
    </member>
    <member name="P:System.Windows.Media.AudioCaptureDevice.AudioFrameSize">
      <summary>Gets or sets the intended audio frame size.</summary>
      <returns>The audio frame size, in milliseconds. The default is 1000. See Remarks.</returns>
    </member>
    <member name="F:System.Windows.Media.AudioCaptureDevice.AudioFrameSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.AudioCaptureDevice.AudioFrameSize" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.AudioCaptureDevice.AudioFrameSize" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.AudioCaptureDevice.DesiredFormat">
      <summary>Gets or sets the desired audio format to be used by this audio capture device.</summary>
      <returns>The desired audio format, as an <see cref="T:System.Windows.Media.AudioFormat" /> object, that is used by this audio capture device. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Media.AudioCaptureDevice.SupportedFormats">
      <summary>Gets a generic collection of supported audio formats for this audio capture device.</summary>
      <returns>A generic collection of <see cref="T:System.Windows.Media.AudioFormat" /> objects that represents the supported audio formats for this audio capture device.</returns>
    </member>
    <member name="T:System.Windows.Media.AudioCaptureDeviceCollection">
      <summary>Specifies a collection of <see cref="T:System.Windows.Media.AudioCaptureDevice" /> objects.</summary>
    </member>
    <member name="T:System.Windows.Media.AudioFormat">
      <summary>Provides specific technical information about an audio format that is used by audio capture devices.</summary>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.BitsPerSample">
      <summary>Gets the number of bits that are used to store the audio information for a single sample of an audio format.</summary>
      <returns>The number of bits that are used to store the audio information for a single sample of an audio format.</returns>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.Channels">
      <summary>Gets the number of channels that are provided by the audio format.</summary>
      <returns>The number of channels that are provided by the audio format.</returns>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.SamplesPerSecond">
      <summary>Gets the number of samples per second that are provided by the audio format.</summary>
      <returns>The number of samples per second that are provided by the audio format.</returns>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.WaveFormat">
      <summary>Gets the encoding format of the audio format as a <see cref="T:System.Windows.Media.WaveFormatType" /> value.</summary>
      <returns>The encoding format of the audio format.</returns>
    </member>
    <member name="T:System.Windows.Media.AudioSink">
      <summary>Exposes the capture graph for audio devices. Derive from this class to receive audio information and to obtain the capture graph through <see cref="P:System.Windows.Media.AudioSink.CaptureSource" />.</summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.AudioSink" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.AudioSink.CaptureSource">
      <summary>Gets or sets a capture source that is associated with this <see cref="T:System.Windows.Media.AudioSink" />.</summary>
      <returns>A capture source that is associated with this <see cref="T:System.Windows.Media.AudioSink" />.</returns>
    </member>
    <member name="M:System.Windows.Media.AudioSink.Finalize">
      <summary>Frees the resources that are used by the <see cref="T:System.Windows.Media.AudioSink" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnCaptureStarted">
      <summary>When overridden in a derived class, is invoked when an audio device starts capturing audio data. </summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnCaptureStopped">
      <summary>When overridden in a derived class, is invoked when an audio device stops capturing audio data. </summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnFormatChange(System.Windows.Media.AudioFormat)">
      <summary>When overridden in a derived class, is invoked when an audio device reports an audio format change. </summary>
      <param name="audioFormat">The new audio format.</param>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnSamples(System.Int64,System.Int64,System.Byte[])">
      <summary>When overridden in a derived class, is invoked when an audio device captures a complete audio sample. </summary>
      <param name="sampleTimeInHundredNanoseconds">The time, in 100-nanosecond units, when the sample was captured.</param>
      <param name="sampleDurationInHundredNanoseconds">The duration of the sample, in 100-nanosecond units.</param>
      <param name="sampleData">A byte stream that contains audio data, to be interpreted per the relevant audio format information.</param>
    </member>
    <member name="T:System.Windows.Media.BezierSegment">
      <summary>Represents a cubic Bezier curve drawn between two points. </summary>
    </member>
    <member name="M:System.Windows.Media.BezierSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point1">
      <summary>Gets or sets the first control point of the curve. </summary>
      <returns>The first control point of the curve. The default is a <see cref="T:System.Windows.Point" /> with value 0,0.</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point1Property">
      <summary>Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point2">
      <summary>Gets or sets the second control point of the curve.</summary>
      <returns>The second control point of the curve.</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point2Property">
      <summary>Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point3">
      <summary>Gets or sets the end point of the curve.</summary>
      <returns>The end point of the curve.</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point3Property">
      <summary>Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.BitmapCache">
      <summary>Represents the behavior of caching a visual element or tree of elements as bitmap surfaces. This can yield significant performance improvements for some scenarios.</summary>
    </member>
    <member name="M:System.Windows.Media.BitmapCache.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.BitmapCache" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.BitmapCache.RenderAtScale">
      <summary>Gets or sets the scale at which the object is rendered on the cached bitmap surface. Use this property for cached objects that are scaled to improve performance. </summary>
      <returns>The scale at which the object is rendered as a cached bitmap. If you specify a negative number, an error will be thrown. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.BitmapCache.RenderAtScaleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Brush">
      <summary>Defines objects used to paint graphical objects. Classes that derive from <see cref="T:System.Windows.Media.Brush" /> describe how the area is painted.</summary>
    </member>
    <member name="M:System.Windows.Media.Brush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Brush" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Brush.Opacity">
      <summary>Gets or sets the degree of opacity of a <see cref="T:System.Windows.Media.Brush" />.  </summary>
      <returns>The value of the <see cref="P:System.Windows.Media.Brush.Opacity" /> property is expressed as a value between 0 and 1.0. The default value is 1.0. </returns>
    </member>
    <member name="F:System.Windows.Media.Brush.OpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Brush.Opacity" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.Brush.Opacity" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.Brush.RelativeTransform">
      <summary>Gets or sets the transformation that is applied to the brush using relative coordinates. </summary>
      <returns>The transformation that is applied to the brush using relative coordinates. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Brush.RelativeTransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Brush.RelativeTransform" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.Brush.RelativeTransform" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.Brush.Transform">
      <summary>Gets or sets the transformation that is applied to the brush.</summary>
      <returns>The transformation to apply to the brush.</returns>
    </member>
    <member name="F:System.Windows.Media.Brush.TransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Brush.Transform" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.Brush.Transform" /> dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.BrushMappingMode">
      <summary>Specifies the coordinate system used by a <see cref="T:System.Windows.Media.Brush" />. </summary>
    </member>
    <member name="F:System.Windows.Media.BrushMappingMode.Absolute">
      <summary>The coordinate system is not relative to a bounding box. Values are interpreted directly in local space.  </summary>
    </member>
    <member name="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox">
      <summary>The coordinate system is relative to a bounding box: 0 indicates 0 percent of the bounding box, and 1 indicates 100 percent of the bounding box. For example, (0.5, 0.5) describes a point in the middle of the bounding box, and (1, 1) describes a point at the bottom right of the bounding box. </summary>
    </member>
    <member name="T:System.Windows.Media.CacheMode">
      <summary>Represents cached content. </summary>
    </member>
    <member name="M:System.Windows.Media.CacheMode.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CacheMode" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.CaptureDevice">
      <summary>Provides common properties for <see cref="T:System.Windows.Media.AudioCaptureDevice" /> and <see cref="T:System.Windows.Media.VideoCaptureDevice" />.</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureDevice.FriendlyName">
      <summary>Gets the UI display name for the capture device.</summary>
      <returns>The UI display name for the capture device.</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureDevice.FriendlyNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CaptureDevice.FriendlyName" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CaptureDevice.FriendlyName" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CaptureDevice.IsDefaultDevice">
      <summary>Gets a value that declares whether the capture device is the default device for its type (audio or video).</summary>
      <returns>true if this <see cref="T:System.Windows.Media.CaptureDevice" /> represents the default device for its type; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureDevice.IsDefaultDeviceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CaptureDevice.IsDefaultDevice" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CaptureDevice.IsDefaultDevice" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureDeviceConfiguration">
      <summary>Represents a helper class for obtaining information about available capture devices (audio or video) and requesting client user permission to access the captures from available devices.</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureDeviceConfiguration.AllowedDeviceAccess">
      <summary>Gets a value that reports whether a user has previously granted device access based on their stored response to the device access UI prompt.</summary>
      <returns>true if the user has previously granted device access based on their response to the access request dialog box prompt, or if the request is automatically granted in some circumstances. false if the user does not grant access or if the request is denied by other factors. See Remarks.</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetAvailableAudioCaptureDevices">
      <summary>Returns a collection of <see cref="T:System.Windows.Media.AudioCaptureDevice" /> objects that represent the available audio capture devices on the client system.</summary>
      <returns>A generic read-only collection of <see cref="T:System.Windows.Media.AudioCaptureDevice" /> objects that represent the available audio capture devices on the client system.</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetAvailableVideoCaptureDevices">
      <summary>Returns a collection of <see cref="T:System.Windows.Media.VideoCaptureDevice" /> objects that represent the available video capture devices on the client system.</summary>
      <returns>A generic read-only collection of <see cref="T:System.Windows.Media.VideoCaptureDevice" /> objects that represent the available video capture devices on the client system.</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultAudioCaptureDevice">
      <summary>Returns the <see cref="T:System.Windows.Media.AudioCaptureDevice" /> object that represent the default audio capture devices on the client system.</summary>
      <returns>The <see cref="T:System.Windows.Media.AudioCaptureDevice" /> object that represent the default audio capture devices on the client system.On Mac OSX, if an application calls <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultAudioCaptureDevice" /> or <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultVideoCaptureDevice" /> and the default audio and video devices have not previously been set by the user, Silverlight will return the first device found. If a physical device is not connected to this <see cref="T:System.Windows.Media.CaptureDevice" />, an <see cref="T:System.InvalidOperationException" /> will be thrown when <see cref="M:System.Windows.Media.CaptureSource.Start" /> is called. This expectation should be caught by the application and the user can then be notified to manually set their default devices in the "Webcam/Mic" section of the Configuration Settings dialog.</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultVideoCaptureDevice">
      <summary>Returns the <see cref="T:System.Windows.Media.VideoCaptureDevice" /> object that represent the default video capture devices on the client system.</summary>
      <returns>The <see cref="T:System.Windows.Media.VideoCaptureDevice" /> object that represent the default video capture devices on the client system.On Mac OSX, if an application calls <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultAudioCaptureDevice" /> or <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultVideoCaptureDevice" /> and the default audio and video devices have not previously been set by the user, Silverlight will return the first device found. If a physical device is not connected to this <see cref="T:System.Windows.Media.CaptureDevice" />, an <see cref="T:System.InvalidOperationException" /> will be thrown when <see cref="M:System.Windows.Media.CaptureSource.Start" /> is called. This expectation should be caught by the application and the user can then be notified to manually set their default devices in the "Webcam/Mic" section of the Configuration Settings dialog.</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.RequestDeviceAccess">
      <summary>Requests access for all possible capture devices (audio or video) that are available on the client system.</summary>
      <returns>true if the user grants device access based on their response to the access request dialog prompt, or if the request is automatically granted in some circumstances. false if the user does not grant access or if the request is denied by other factors. See Remarks.</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureImageCompletedEventArgs">
      <summary>Provides event data for the <see cref="E:System.Windows.Media.CaptureSource.CaptureImageCompleted" /> event of the <see cref="T:System.Windows.Media.CaptureSource" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureImageCompletedEventArgs.#ctor(System.Windows.Media.Imaging.WriteableBitmap)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CaptureImageCompletedEventArgs" /> using an image source to report in event data.</summary>
      <param name="image">The image source to report.</param>
    </member>
    <member name="P:System.Windows.Media.CaptureImageCompletedEventArgs.Result">
      <summary>Gets the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> image source to report in event data.</summary>
      <returns>The image source that is returned asynchronously through this event data, as a result of a <see cref="M:System.Windows.Media.CaptureSource.CaptureImageAsync" /> call.</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureSource">
      <summary>Provides methods that work with specific audio or video captures from the associated capture device.</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CaptureSource" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureSource.AudioCaptureDevice">
      <summary>Gets or sets the associated audio capture device that is relevant to this capture.</summary>
      <returns>The associated audio capture device that is relevant to this capture.</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureSource.AudioCaptureDeviceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CaptureSource.AudioCaptureDevice" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CaptureSource.AudioCaptureDevice" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Media.CaptureSource.CaptureFailed">
      <summary>Occurs when a requested capture operation does not generate a captured sample.</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.CaptureImageAsync">
      <summary>Initiates an asynchronous image capture request. Retrieve the returned image by handling the <see cref="E:System.Windows.Media.CaptureSource.CaptureImageCompleted" /> event on this <see cref="T:System.Windows.Media.CaptureSource" />.</summary>
    </member>
    <member name="E:System.Windows.Media.CaptureSource.CaptureImageCompleted">
      <summary>Occurs when an asynchronous image capture request has returned a captured image.</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.Start">
      <summary>Initiates capture from all capture devices that are relevant to this <see cref="T:System.Windows.Media.CaptureSource" />.</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureSource.State">
      <summary>Gets the <see cref="T:System.Windows.Media.CaptureState" /> of this capture. State might indicate that the capture is still ongoing or has failed.</summary>
      <returns>The <see cref="T:System.Windows.Media.CaptureState" /> of this capture. </returns>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.Stop">
      <summary>Stops capture from all capture devices that are relevant to this <see cref="T:System.Windows.Media.CaptureSource" />.</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureSource.VideoCaptureDevice">
      <summary>Gets or sets the associated video capture device that is relevant to this capture.</summary>
      <returns>The associated video capture device that is relevant to this capture.</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureSource.VideoCaptureDeviceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CaptureSource.VideoCaptureDevice" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CaptureSource.VideoCaptureDevice" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureState">
      <summary>Describes the current operation state for device capture and a capture source.</summary>
    </member>
    <member name="F:System.Windows.Media.CaptureState.Stopped">
      <summary>
        <see cref="M:System.Windows.Media.CaptureSource.Stop" /> has been called and the capture is complete.</summary>
    </member>
    <member name="F:System.Windows.Media.CaptureState.Started">
      <summary>
        <see cref="M:System.Windows.Media.CaptureSource.Start" /> has been called and the capture is still active.</summary>
    </member>
    <member name="F:System.Windows.Media.CaptureState.Failed">
      <summary>The capture failed, or no operation has yet been attempted.</summary>
    </member>
    <member name="T:System.Windows.Media.Color">
      <summary>Describes a color in terms of alpha, red, green, and blue channels. </summary>
    </member>
    <member name="P:System.Windows.Media.Color.A">
      <summary>Gets or sets the sRGB alpha channel value of the color. </summary>
      <returns>The sRGB alpha channel value of the color, as a value between 0 and 255.</returns>
    </member>
    <member name="P:System.Windows.Media.Color.B">
      <summary>Gets or sets the sRGB blue channel value of the color. </summary>
      <returns>The sRGB blue channel value, as a value between 0 and 255.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.Equals(System.Object)">
      <summary>Tests whether the specified object is a <see cref="T:System.Windows.Media.Color" /> structure and is equivalent to the current color. </summary>
      <returns>true if the specified object is a <see cref="T:System.Windows.Media.Color" /> structure and is identical to the current <see cref="T:System.Windows.Media.Color" /> structure; otherwise, false.</returns>
      <param name="o">The object to compare to the current <see cref="T:System.Windows.Media.Color" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Color.Equals(System.Windows.Media.Color)">
      <summary>Tests whether the specified <see cref="T:System.Windows.Media.Color" /> structure is identical to the current color.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Media.Color" /> structure is identical to the current <see cref="T:System.Windows.Media.Color" /> structure; otherwise, false.</returns>
      <param name="color">The <see cref="T:System.Windows.Media.Color" /> structure to compare to the current <see cref="T:System.Windows.Media.Color" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified sRGB alpha channel and color channel values. </summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values.</returns>
      <param name="a">The alpha channel, <see cref="P:System.Windows.Media.Color.A" />, of the new color. The value must be between 0 and 255.</param>
      <param name="r">The red channel, <see cref="P:System.Windows.Media.Color.R" />, of the new color. The value must be between 0 and 255.</param>
      <param name="g">The green channel, <see cref="P:System.Windows.Media.Color.G" />, of the new color. The value must be between 0 and 255.</param>
      <param name="b">The blue channel, <see cref="P:System.Windows.Media.Color.B" />, of the new color. The value must be between 0 and 255.</param>
    </member>
    <member name="P:System.Windows.Media.Color.G">
      <summary>Gets or sets the sRGB green channel value of the color. </summary>
      <returns>The sRGB green channel value, as a value between 0 and 255.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.GetHashCode">
      <summary>Gets a hash code for the current <see cref="T:System.Windows.Media.Color" /> structure. </summary>
      <returns>A hash code for the current <see cref="T:System.Windows.Media.Color" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Tests whether two <see cref="T:System.Windows.Media.Color" /> structures are identical. </summary>
      <returns>true if <paramref name="color1" /> and <paramref name="color2" /> are exactly identical; otherwise, false.</returns>
      <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
      <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Tests whether two <see cref="T:System.Windows.Media.Color" /> structures are not identical. </summary>
      <returns>true if <paramref name="color1" /> and <paramref name="color2" /> are not equal; otherwise, false.</returns>
      <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
      <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
    </member>
    <member name="P:System.Windows.Media.Color.R">
      <summary>Gets or sets the sRGB red channel value of the color. </summary>
      <returns>The sRGB red channel value, as a value between 0 and 255.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A string containing the value of the current instance in the specified format.</returns>
      <param name="format">The string specifying the format to use. -or- null to use the default format defined for the type of the IFormattable implementation. </param>
      <param name="provider">The IFormatProvider to use to format the value. -or- null to obtain the numeric format information from the current locale setting of the operating system. </param>
    </member>
    <member name="M:System.Windows.Media.Color.ToString">
      <summary>Creates a string representation of the color using the ARGB channels in hex notation. </summary>
      <returns>The string representation of the color.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of the color by using the ARGB channels and the specified format provider. </summary>
      <returns>The string representation of the color.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.ColorInterpolationMode">
      <summary>Determines how the colors in a gradient are interpolated. </summary>
    </member>
    <member name="F:System.Windows.Media.ColorInterpolationMode.ScRgbLinearInterpolation">
      <summary>Colors are interpolated in the scRGB color space </summary>
    </member>
    <member name="F:System.Windows.Media.ColorInterpolationMode.SRgbLinearInterpolation">
      <summary>Colors are interpolated in the sRGB color space </summary>
    </member>
    <member name="T:System.Windows.Media.Colors">
      <summary>Implements a set of predefined colors. </summary>
    </member>
    <member name="P:System.Windows.Media.Colors.Black">
      <summary>Gets the system-defined color that has the ARGB value of #FF000000. </summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has an ARGB value of #FF000000. </returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Blue">
      <summary>Gets the system-defined color that has the ARGB value of #FF0000FF.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FF0000FF.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Brown">
      <summary>Gets the system-defined color that has the ARGB value of #FFA52A2A.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FFA52A2A.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Cyan">
      <summary>Gets the system-defined color that has the ARGB value of #FF00FFFF.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FF00FFFF.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkGray">
      <summary>Gets the system-defined color that has the ARGB value of #FFA9A9A9.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FFA9A9A9.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Gray">
      <summary>Gets the system-defined color that has the ARGB value of #FF808080.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FF808080.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Green">
      <summary>Gets the system-defined color that has the ARGB value of #FF008000.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FF008000.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightGray">
      <summary>Gets the system-defined color that has the ARGB value of #FFD3D3D3.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FFD3D3D3.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Magenta">
      <summary>Gets the system-defined color that has the ARGB value of #FFFF00FF.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FFFF00FF.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Orange">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFA500.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FFFFA500.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Purple">
      <summary>Gets the system-defined color that has the ARGB value of #FF800080.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FF800080.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Red">
      <summary>Gets the system-defined color that has the ARGB value of #FFFF0000.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FFFF0000.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Transparent">
      <summary>Gets the system-defined color that has the ARGB value of #00FFFFFF.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #00FFFFFF.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.White">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFFFFF.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FFFFFFFF.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Yellow">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFFF00.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that has the ARGB value of #FFFFFF00.</returns>
    </member>
    <member name="T:System.Windows.Media.CompositeTransform">
      <summary>This class lets you apply multiple different transforms to an object. </summary>
    </member>
    <member name="M:System.Windows.Media.CompositeTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CompositeTransform" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the center point for all transforms specified by the <see cref="T:System.Windows.Media.CompositeTransform" />. </summary>
      <returns>The x-coordinate of the center point for all transforms specified by the <see cref="T:System.Windows.Media.CompositeTransform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.CenterXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CompositeTransform.CenterX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CompositeTransform.CenterX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the center point for all transforms specified by the <see cref="T:System.Windows.Media.CompositeTransform" />. </summary>
      <returns>The y-coordinate of the center point for all transforms specified by the <see cref="T:System.Windows.Media.CompositeTransform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.CenterYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CompositeTransform.CenterY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CompositeTransform.CenterY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.Rotation">
      <summary>Gets or sets the angle, in degrees, of clockwise rotation.</summary>
      <returns>The angle, in degrees, of clockwise rotation. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.RotationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CompositeTransform.Rotation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CompositeTransform.Rotation" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.ScaleX">
      <summary>Gets or sets the x-axis scale factor. You can use this property to stretch or shrink an object horizontally.</summary>
      <returns>The scale factor along the x-axis. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.ScaleXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CompositeTransform.ScaleX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CompositeTransform.ScaleX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.ScaleY">
      <summary>Gets or sets the y-axis scale factor. You can use this property to stretch or shrink an object vertically.</summary>
      <returns>The scale factor along the y-axis. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.ScaleYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CompositeTransform.ScaleY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CompositeTransform.ScaleY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.SkewX">
      <summary>Gets or sets the x-axis skew angle, which is measured in degrees counterclockwise from the y-axis. A skew transform can be useful for creating the illusion of three-dimensional depth in a two-dimensional object.</summary>
      <returns>The skew angle, which is measured in degrees counterclockwise from the y-axis. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.SkewXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CompositeTransform.SkewX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CompositeTransform.SkewX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.SkewY">
      <summary>Gets or sets the y-axis skew angle, which is measured in degrees counterclockwise from the x-axis. A skew transform can be useful for creating the illusion of three-dimensional depth in a two-dimensional object.</summary>
      <returns>The skew angle, which is measured in degrees counterclockwise from the x-axis. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.SkewYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CompositeTransform.SkewY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CompositeTransform.SkewY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.TranslateX">
      <summary>Gets or sets the distance to translate along the x-axis.</summary>
      <returns>The distance to translate (move) an object along the x-axis, in pixels. This property is read/write. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.TranslateXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CompositeTransform.TranslateX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CompositeTransform.TranslateX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.TranslateY">
      <summary>Gets or sets the distance to translate (move) an object along the y-axis.</summary>
      <returns>The distance to translate (move) an object along the y-axis, in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.TranslateYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CompositeTransform.TranslateY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CompositeTransform.TranslateY" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.CompositionTarget">
      <summary>Represents the display surface of a Silverlight-based application.</summary>
    </member>
    <member name="E:System.Windows.Media.CompositionTarget.Rendering">
      <summary>Occurs when the core Silverlight rendering process renders a frame.</summary>
    </member>
    <member name="T:System.Windows.Media.ContentKeyType">
      <summary>Represents the content key type.</summary>
    </member>
    <member name="F:System.Windows.Media.ContentKeyType.Aes128Bit">
      <summary>Content key type used for Root licenses (AES-ECB).</summary>
    </member>
    <member name="F:System.Windows.Media.ContentKeyType.Cocktail">
      <summary>Content key type used for Cocktail in the PlayReady ecosystem.</summary>
    </member>
    <member name="T:System.Windows.Media.DeepZoomImageTileSource">
      <summary>Used to specify the source of a <see cref="T:System.Windows.Controls.MultiScaleImage" />. </summary>
    </member>
    <member name="M:System.Windows.Media.DeepZoomImageTileSource.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.DeepZoomImageTileSource" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.DeepZoomImageTileSource.#ctor(System.Uri)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.DeepZoomImageTileSource" /> class with the specified source Uri.</summary>
      <param name="sourceUri">The source Uri.</param>
    </member>
    <member name="P:System.Windows.Media.DeepZoomImageTileSource.UriSource">
      <summary>Gets or sets the source Uri of the <see cref="T:System.Windows.Media.DeepZoomImageTileSource" />.</summary>
      <returns>The source Uri of the <see cref="T:System.Windows.Media.DeepZoomImageTileSource" />.</returns>
    </member>
    <member name="F:System.Windows.Media.DeepZoomImageTileSource.UriSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DeepZoomImageTileSource.UriSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DeepZoomImageTileSource.UriSource" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.DomainAcquirer">
      <summary>Handles Join Domain requests.</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DomainAcquirer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.CancelAsync">
      <summary>Called to cancel an ongoing domain operation.</summary>
      <exception cref="T:System.InvalidOperationException">If no domain operation is in progress.</exception>
    </member>
    <member name="P:System.Windows.Media.DomainAcquirer.ChallengeCustomData">
      <summary>Gets or sets a string containing service specific data to be conveyed to the domain server without implementing manual domain join/leave. </summary>
      <returns>A string containing service specific data to be conveyed to the domain server without implementing manual domain join/leave. The default value is null.</returns>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.JoinDomainAsync(System.Guid,System.Guid,System.Uri,System.String)">
      <summary>Starts an asynchronous join domain operation.</summary>
      <param name="serviceId">The service identifier for this domain.</param>
      <param name="accountId">The account identifier for this domain.</param>
      <param name="domainServerUrl">URL to the domain controller server which is used to manage domains.</param>
      <param name="friendlyName">The friendly name for the account that can be shown to the user during domain certificate enumeration on the client application.</param>
    </member>
    <member name="E:System.Windows.Media.DomainAcquirer.JoinDomainCompleted">
      <summary>Occurs when the join domain operation completes.</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.LeaveDomainAsync(System.Guid,System.Guid,System.Uri)">
      <summary>Method used to start an asynchronous leave domain operation.</summary>
      <param name="serviceId">The service identifier for this domain.</param>
      <param name="accountId">The account identifier for this domain.</param>
      <param name="domainServerUrl">URL to the domain controller server which is used to manage domains.</param>
    </member>
    <member name="E:System.Windows.Media.DomainAcquirer.LeaveDomainCompleted">
      <summary>Occurs when the leave domain operation completes.</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.OnCancel">
      <summary>Overridden in a derived class to implement cancellation during manual domain operations.  </summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.OnJoinDomain(System.IO.Stream,System.Uri)">
      <summary>Overridden in a derived class to implement manual join domain operations.  </summary>
      <param name="joinChallenge">The custom authentication information you wish to add to the join domain operation.</param>
      <param name="domainServerUri">URI to the domain controller server which is used to manage domains.</param>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.OnLeaveDomain(System.IO.Stream,System.Uri)">
      <summary>Overridden in a derived class to implement manual leave domain operations.  </summary>
      <param name="leaveChallenge">The custom authentication information you wish to add to the leave domain operation.</param>
      <param name="domainServerUri">URI to the domain controller server which is used to manage domains.</param>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.SetJoinDomainResponse(System.IO.Stream)">
      <summary>Used to set the join domain operation response during a manual join domain operation in a derived <see cref="T:System.Windows.Media.DomainAcquirer" />.</summary>
      <param name="domainResponse">The join domain operation response sent back to the client by the domain controller server.</param>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.SetLeaveDomainResponse(System.IO.Stream)">
      <summary>Used to set the Leave domain operation response during a manual leave domain operation in a derived <see cref="T:System.Windows.Media.DomainAcquirer" />.</summary>
      <param name="domainResponse">The leave domain operation response sent back to the client by the domain controller server.</param>
    </member>
    <member name="T:System.Windows.Media.DomainOperationCompletedEventArgs">
      <summary>Provides data for join and leave domain events.</summary>
    </member>
    <member name="P:System.Windows.Media.DomainOperationCompletedEventArgs.AccountId">
      <summary>Gets the account identifier for this domain.</summary>
      <returns>The account identifier for this domain.</returns>
    </member>
    <member name="P:System.Windows.Media.DomainOperationCompletedEventArgs.ResponseCustomData">
      <summary>Gets the custom data string that is returned from the domain operation.</summary>
      <returns>The custom data string that is returned from the domain operation.</returns>
    </member>
    <member name="P:System.Windows.Media.DomainOperationCompletedEventArgs.ServiceId">
      <summary>Gets the service identifier for this domain.</summary>
      <returns>The service identifier for this domain.</returns>
    </member>
    <member name="T:System.Windows.Media.DoubleCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Double" /> values.</summary>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DoubleCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.EllipseGeometry">
      <summary>Represents the geometry of a circle or ellipse. </summary>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.EllipseGeometry" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.Center">
      <summary>Gets or sets the center point of the <see cref="T:System.Windows.Media.EllipseGeometry" />. </summary>
      <returns>The center point of the <see cref="T:System.Windows.Media.EllipseGeometry" />.</returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.CenterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.EllipseGeometry.Center" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.EllipseGeometry.Center" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.RadiusX">
      <summary>Gets or sets the x-radius value of the <see cref="T:System.Windows.Media.EllipseGeometry" />.  </summary>
      <returns>The x-radius value of the <see cref="T:System.Windows.Media.EllipseGeometry" />. </returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.RadiusXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.EllipseGeometry.RadiusX" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.EllipseGeometry.RadiusX" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.RadiusY">
      <summary>Gets or sets the y-radius value of the <see cref="T:System.Windows.Media.EllipseGeometry" />. </summary>
      <returns>The y-radius value of the <see cref="T:System.Windows.Media.EllipseGeometry" />.</returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.RadiusYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.EllipseGeometry.RadiusY" /> dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.EllipseGeometry.RadiusY" /> dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.FillRule">
      <summary>Specifies how the intersecting areas of <see cref="T:System.Windows.Media.PathFigure" /> objects contained in a <see cref="T:System.Windows.Media.Geometry" /> are combined to form the area of the <see cref="T:System.Windows.Media.Geometry" />.</summary>
    </member>
    <member name="F:System.Windows.Media.FillRule.EvenOdd">
      <summary>Rule that determines whether a point is in the fill region by drawing a ray from that point to infinity in any direction and counting the number of path segments within the given shape that the ray crosses. If this number is odd, the point is inside; if even, the point is outside.</summary>
    </member>
    <member name="F:System.Windows.Media.FillRule.Nonzero">
      <summary>Rule that determines whether a point is in the fill region of the path by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray. Starting with a count of 0, add one each time a segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left. After counting the crossings, if the result is 0 then the point is outside the path. Otherwise, it is inside.</summary>
    </member>
    <member name="T:System.Windows.Media.FontFamily">
      <summary>Represents a family of related fonts.</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamily.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class from the specified font family string.</summary>
      <param name="familyName">The family name or names that comprise the new <see cref="T:System.Windows.Media.FontFamily" />. See "Font Family Grammar" in Remarks.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamily.Equals(System.Object)">
      <summary>Gets a value that indicates whether the current font family object and the specified font family object are the same.</summary>
      <returns>true if <paramref name="o" /> is equal to the current <see cref="T:System.Windows.Media.FontFamily" /> object; otherwise, false. If <paramref name="o" /> is not a <see cref="T:System.Windows.Media.FontFamily" /> object, false is returned.</returns>
      <param name="o">The object to compare.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamily.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:System.Windows.Media.FontFamily" />.</summary>
      <returns>An integer hash value.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamily.Source">
      <summary>Gets the font family name that is used to construct the <see cref="T:System.Windows.Media.FontFamily" /> object.</summary>
      <returns>The font family name of the <see cref="T:System.Windows.Media.FontFamily" /> object.</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamily.ToString">
      <summary>Returns a string representation of this <see cref="T:System.Windows.Media.FontFamily" />.</summary>
      <returns>The input font family string.</returns>
    </member>
    <member name="T:System.Windows.Media.Fonts">
      <summary>Provides enumeration support for <see cref="T:System.Windows.Media.FontFamily" /> and <see cref="T:System.Windows.Media.Typeface" /> objects.</summary>
    </member>
    <member name="P:System.Windows.Media.Fonts.SystemTypefaces">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.Typeface" /> objects from the default system font location.</summary>
      <returns>An collection of <see cref="T:System.Windows.Media.Typeface" /> objects that represent the fonts in the system fonts collection.</returns>
    </member>
    <member name="T:System.Windows.Media.GeneralTransform">
      <summary>Provides generalized transformation support for objects, such as points and rectangles.</summary>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeneralTransform" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.GeneralTransform.Inverse">
      <summary>Gets the inverse transformation of this <see cref="T:System.Windows.Media.GeneralTransform" />, if possible.</summary>
      <returns>An inverse of this instance, if possible; otherwise null.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)">
      <summary>Transforms the specified point and returns the result.</summary>
      <returns>The result of transforming <paramref name="point" />.</returns>
      <param name="point">The point to transform.</param>
      <exception cref="T:System.InvalidOperationException">The transform did not succeed.</exception>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.TransformBounds(System.Windows.Rect)">
      <summary>When overridden in a derived class, transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.</summary>
      <returns>The smallest axis-aligned bounding box possible that contains the transformed <paramref name="rect" />.</returns>
      <param name="rect">The bounding box to transform.</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.TryTransform(System.Windows.Point,System.Windows.Point@)">
      <summary>When overridden in a derived class, attempts to transform the specified point and returns a value that indicates whether the transformation was successful.</summary>
      <returns>true if <paramref name="inPoint" /> was transformed; otherwise, false.</returns>
      <param name="inPoint">The point to transform.</param>
      <param name="outPoint">The result of transforming <paramref name="inPoint" />.</param>
    </member>
    <member name="T:System.Windows.Media.Geometry">
      <summary>Provides a base class for objects that define geometric shapes. <see cref="T:System.Windows.Media.Geometry" /> objects can be used for clipping regions and as geometry definitions for rendering two-dimensional graphic data as a <see cref="T:System.Windows.Shapes.Path" />.</summary>
    </member>
    <member name="P:System.Windows.Media.Geometry.Bounds">
      <summary>Gets a <see cref="T:System.Windows.Rect" /> that specifies the axis-aligned bounding box of the <see cref="T:System.Windows.Media.Geometry" />.</summary>
      <returns>The axis-aligned bounding box of the <see cref="T:System.Windows.Media.Geometry" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Geometry.Empty">
      <summary>Gets an empty geometry object.</summary>
      <returns>The empty geometry object.</returns>
    </member>
    <member name="P:System.Windows.Media.Geometry.StandardFlatteningTolerance">
      <summary>Gets the standard tolerance used for polygonal approximation.</summary>
      <returns>The standard tolerance. The default value is 0.25.</returns>
    </member>
    <member name="P:System.Windows.Media.Geometry.Transform">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Transform" /> object applied to a <see cref="T:System.Windows.Media.Geometry" />. </summary>
      <returns>The transformation applied to the <see cref="T:System.Windows.Media.Geometry" />. Note that this value may be a single <see cref="T:System.Windows.Media.Transform" /> or a <see cref="T:System.Windows.Media.TransformCollection" /> cast as a <see cref="T:System.Windows.Media.Transform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Geometry.TransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Geometry.Transform" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Geometry.Transform" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.GeometryCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Geometry" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.GeometryGroup">
      <summary>Represents a composite geometry, composed of other <see cref="T:System.Windows.Media.Geometry" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.GeometryGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryGroup" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.GeometryGroup.Children">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.GeometryCollection" /> that contains the objects that define this <see cref="T:System.Windows.Media.GeometryGroup" />.  </summary>
      <returns>A collection containing the children of this <see cref="T:System.Windows.Media.GeometryGroup" />.</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GeometryGroup.Children" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GeometryGroup.Children" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.GeometryGroup.FillRule">
      <summary>Gets or sets how the intersecting areas of the objects contained in this <see cref="T:System.Windows.Media.GeometryGroup" /> are combined.  </summary>
      <returns>One of the enumeration values that specifies how the intersecting areas are combined to form the resulting area. The default is <see cref="F:System.Windows.Media.FillRule.EvenOdd" />.</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryGroup.FillRuleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GeometryGroup.FillRule" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GeometryGroup.FillRule" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.GlyphTypeface">
      <summary>Specifies a physical font face that corresponds to a font file on the disk.</summary>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.FontFileName">
      <summary>Gets or sets the font file name for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>The font file name for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Version">
      <summary>Gets the font face version interpreted from the font's 'NAME' table.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the version.</returns>
    </member>
    <member name="T:System.Windows.Media.GradientBrush">
      <summary>An abstract class that describes a gradient, composed of gradient stops. Classes that derive from <see cref="T:System.Windows.Media.GradientBrush" /> describe different ways of interpreting gradient stops. </summary>
    </member>
    <member name="M:System.Windows.Media.GradientBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GradientBrush" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.ColorInterpolationMode">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.ColorInterpolationMode" /> enumeration value that specifies how the gradient's colors are interpolated.  </summary>
      <returns>Specifies how the colors in a gradient are interpolated. The default is <see cref="F:System.Windows.Media.ColorInterpolationMode.SRgbLinearInterpolation" />. </returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.ColorInterpolationModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GradientBrush.ColorInterpolationMode" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GradientBrush.ColorInterpolationMode" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.GradientStops">
      <summary>Gets or sets the brush's gradient stops. </summary>
      <returns>A collection of the <see cref="T:System.Windows.Media.GradientStop" /> objects associated with the brush, each of which specifies a color and an offset along the brush's gradient axis. The default is an empty <see cref="T:System.Windows.Media.GradientStopCollection" />. </returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.GradientStopsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GradientBrush.GradientStops" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GradientBrush.GradientStops" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.MappingMode">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.BrushMappingMode" /> enumeration value that specifies whether the positioning coordinates of the gradient brush are absolute or relative to the output area.</summary>
      <returns>A <see cref="T:System.Windows.Media.BrushMappingMode" /> value that specifies how to interpret the gradient brush's positioning coordinates. The default is <see cref="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox" />.</returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.MappingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GradientBrush.MappingMode" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GradientBrush.MappingMode" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.SpreadMethod">
      <summary>Gets or sets the type of spread method that specifies how to draw a gradient that starts or ends inside the bounds of the object to be painted. </summary>
      <returns>The type of spread method used to paint the gradient. The default is <see cref="F:System.Windows.Media.GradientSpreadMethod.Pad" />.</returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.SpreadMethodProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GradientBrush.SpreadMethod" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GradientBrush.SpreadMethod" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.GradientSpreadMethod">
      <summary>Specifies how to draw the gradient outside a gradient brush's gradient vector or space.  </summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Pad">
      <summary>The color values at the ends of the gradient vector fill the remaining space. </summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Reflect">
      <summary>The gradient is repeated in the reverse direction until the space is filled. </summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Repeat">
      <summary>The gradient is repeated in the original direction until the space is filled. </summary>
    </member>
    <member name="T:System.Windows.Media.GradientStop">
      <summary>Describes the location and color of a transition point in a gradient. </summary>
    </member>
    <member name="M:System.Windows.Media.GradientStop.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GradientStop" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.GradientStop.Color">
      <summary>Gets or sets the color of the gradient stop. </summary>
      <returns>The color of the gradient stop. The default is <see cref="P:System.Windows.Media.Colors.Transparent" />.</returns>
    </member>
    <member name="F:System.Windows.Media.GradientStop.ColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GradientStop.Color" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GradientStop.Color" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientStop.Offset">
      <summary>Gets the location of the gradient stop within the gradient vector. </summary>
      <returns>The relative location of this gradient stop along the gradient vector. The default is 0. </returns>
    </member>
    <member name="F:System.Windows.Media.GradientStop.OffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GradientStop.Offset" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GradientStop.Offset" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.GradientStopCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.GradientStop" /> objects that can be individually accessed by index. </summary>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GradientStopCollection" /> class. </summary>
    </member>
    <member name="T:System.Windows.Media.ImageBrush">
      <summary>Paints an area with an image. </summary>
    </member>
    <member name="M:System.Windows.Media.ImageBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ImageBrush" /> class. </summary>
    </member>
    <member name="E:System.Windows.Media.ImageBrush.ImageFailed">
      <summary>Occurs when there is an error associated with image retrieval or format.</summary>
    </member>
    <member name="E:System.Windows.Media.ImageBrush.ImageOpened">
      <summary>Occurs when the image source is downloaded and decoded with no failure. You can use this event to determine the size of an image before rendering it.</summary>
    </member>
    <member name="P:System.Windows.Media.ImageBrush.ImageSource">
      <summary>Gets or sets the image displayed by this <see cref="T:System.Windows.Media.ImageBrush" />.</summary>
      <returns>The image displayed by this <see cref="T:System.Windows.Media.ImageBrush" />.</returns>
    </member>
    <member name="F:System.Windows.Media.ImageBrush.ImageSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ImageBrush.ImageSource" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ImageBrush.ImageSource" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.ImageSource">
      <summary>Provides an object source type for <see cref="P:System.Windows.Controls.Image.Source" />, <see cref="P:System.Windows.Controls.MultiScaleImage.Source" />, and <see cref="P:System.Windows.Media.ImageBrush.ImageSource" />.</summary>
    </member>
    <member name="T:System.Windows.Media.ImageSourceConverter">
      <summary>Converts a <see cref="T:System.Windows.Media.ImageSource" /> to and from other data types.</summary>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ImageSourceConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the converter can convert an object of the given type to an instance of <see cref="T:System.Windows.Media.ImageSource" />.</summary>
      <returns>true if the converter can convert the provided type to an instance of <see cref="T:System.Windows.Media.ImageSource" />; otherwise, false.</returns>
      <param name="context">Type context information used to evaluate conversion.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert a specified object to an instance of <see cref="T:System.Windows.Media.ImageSource" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.ImageSource" />.</returns>
      <param name="context">Type context information used for conversion.</param>
      <param name="culture">Cultural information that is respected during conversion.</param>
      <param name="value">The object being converted.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or is an invalid type.</exception>
    </member>
    <member name="T:System.Windows.Media.ImplicitInputBrush">
      <summary>Represents the input bitmap to a shader.</summary>
    </member>
    <member name="M:System.Windows.Media.ImplicitInputBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ImplicitInputBrush" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.JoinDomainCompletedEventArgs">
      <summary>Provides data for the <see cref="T:System.Windows.Media.DomainAcquirer.JoinDomainCompleted" /> event.</summary>
    </member>
    <member name="T:System.Windows.Media.LeaveDomainCompletedEventArgs">
      <summary>Provides data for the <see cref="T:System.Windows.Media.DomainAcquirer.LeaveDomainCompleted" /> event.</summary>
    </member>
    <member name="T:System.Windows.Media.LicenseAcquirer">
      <summary>This class handles acquiring licenses for DRM encrypted content.</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LicenseAcquirer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.AcquireLicenseAsync(System.Byte[])">
      <summary>Starts the license acquisition process.</summary>
      <param name="mediaHeader">The header that is used for the license acquisition.</param>
      <exception cref="T:System.InvalidOperationException">If this method is called when an existing license acquisition attempt is already in progress on that instance of the class.</exception>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.AcquireLicenseAsync(System.Guid,System.Windows.Media.ContentKeyType,System.Guid)">
      <summary>Starts the license acquisition process.</summary>
      <param name="keyId">The key identifier of the file you are attempting to get the license for.</param>
      <param name="keyType">The type of encryption standard that is used by the key identifier.</param>
      <param name="serviceId">The service ID. This parameter is required only if you want to obtain a domain-bound license.</param>
      <exception cref="T:System.InvalidOperationException">If this method is called when an existing license acquisition attempt is already in progress on that instance of the class.</exception>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.AcquireLicenseAsync(System.IO.Stream)">
      <summary>Starts the license acquisition process by specifying a MediaStream.</summary>
      <param name="mediaStream">The stream that is used for the license acquisition.</param>
      <exception cref="T:System.InvalidOperationException">If this method is called when an existing license acquisition attempt is already in progress on that instance of the class.</exception>
    </member>
    <member name="E:System.Windows.Media.LicenseAcquirer.AcquireLicenseCompleted">
      <summary>Occurs when the license acquisition completes.</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.CancelAsync">
      <summary>Cancels a license acquisition.</summary>
      <exception cref="T:System.InvalidOperationException">If no license acquisition is in progress.</exception>
    </member>
    <member name="P:System.Windows.Media.LicenseAcquirer.ChallengeCustomData">
      <summary>Gets or sets a string that contains service-specific data to be conveyed to the license server without implementing manual license acquisition.</summary>
      <returns>A string that contains service-specific data to be conveyed to the license server without implementing manual license acquisition. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Media.LicenseAcquirer.DomainAcquirer">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.DomainAcquirer" /> to handle Join Domain requests that are triggered from License Server exceptions (DomainRequired or RenewDomain).</summary>
      <returns>A <see cref="T:System.Windows.Media.DomainAcquirer" /> to handle Join Domain requests that are triggered from License Server exceptions (DomainRequired or RenewDomain).</returns>
    </member>
    <member name="P:System.Windows.Media.LicenseAcquirer.LicenseServerUriOverride">
      <summary>Gets or sets a Uniform Resource Identifier (URI) value that overrides whatever the license server URI is in the content header.</summary>
      <returns>The URI that overrides the URI that is provided in the content header (if any). If this value is null, the system uses whatever license server URI is in the content header. The default value is null. </returns>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.OnAcquireLicense(System.IO.Stream,System.Uri)">
      <summary>The default implementation of this method calls into the <see cref="T:System.Windows.Controls.MediaElement" /> to acquire a license. Developers should override this method if they want to handle the license acquisition themselves.</summary>
      <param name="licenseChallenge">The SOAP license challenge.</param>
      <param name="licenseServerUri">The URI of the License Server. In the case of PlayReady content with a license server, this value is the value in the PlayReady header. In the case of WMDRM content and PlayReady content without a license server specified in the header, this value is null unless the <see cref="P:System.Windows.Media.LicenseAcquirer.LicenseServerUriOverride" /> property has been set. If the <see cref="P:System.Windows.Media.LicenseAcquirer.LicenseServerUriOverride" /> property is set, its value is passed in as the <paramref name="licenseServerUri" />.</param>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.OnCancel">
      <summary>This method is overridden in a derived class to provide a standard way of doing cancellation during manual license acquisition.</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.SetLicenseResponse(System.IO.Stream)">
      <summary>Sets the license response by passing  the SOAP body from the HTTP response to the license challenge. </summary>
      <param name="licenseResponse">The SOAP body from the HTTP response to the license challenge. The SOAP body is passed in as a stream and contains the entire SOAP response.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="licenseResponse" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The specified <paramref name="licenseResponse" /> is invalid.</exception>
    </member>
    <member name="T:System.Windows.Media.LicenseManagement">
      <summary>A static class that is used to return licenses from the persistent license store.</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseManagement.SelectLicenses(System.Guid)">
      <summary>Returns licenses from the persistent license store on the client based on the provided key identifier.</summary>
      <returns>The licenses from the persistent license store on the client based on the provided key identifier. If no IBX is present on the system, it is assumed the user has no licenses, and an empty enumerator is returned from this method call.</returns>
      <param name="keyId">The key ID for the license to return.</param>
    </member>
    <member name="M:System.Windows.Media.LicenseManagement.SelectLicenses(System.IO.Stream)">
      <summary>Returns licenses from the persistent license store on the client based on a media stream, which contains a content header.</summary>
      <returns>The licenses from the persistent license store on the client based on a media stream, which contains a content header. If no IBX is present on the system, it is assumed the user has no licenses and an empty enumerator is returned from this method call.</returns>
      <param name="mediaStream">The stream for the license to return.</param>
    </member>
    <member name="P:System.Windows.Media.LicenseManagement.VideoOutputConnectors">
      <summary>Gets all the data about connector types from the graphics card, and also gets the output protection schemes for which Silverlight can engage each video output. </summary>
      <returns>The data on connector types and the output protection schemes that Silverlight can engage for each video output. Each capture device that is returned in this list may have multiple configurations.</returns>
    </member>
    <member name="T:System.Windows.Media.LinearGradientBrush">
      <summary>Paints an area with a linear gradient. </summary>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LinearGradientBrush" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor(System.Windows.Media.GradientStopCollection,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LinearGradientBrush" /> class that has the specified <see cref="T:System.Windows.Media.GradientStopCollection" /> and angle.</summary>
      <param name="gradientStopCollection">The <see cref="P:System.Windows.Media.GradientBrush.GradientStops" /> to set on this brush.</param>
      <param name="angle">A <see cref="T:System.Double" /> that represents the angle, in degrees, of the gradient. A value of 0 creates a horizontal gradient, and a value of 90 creates a vertical gradient. Negative values are permitted, as are values over 360 (are treated as mod 360).</param>
    </member>
    <member name="P:System.Windows.Media.LinearGradientBrush.EndPoint">
      <summary>Gets or sets the ending two-dimensional coordinates of the linear gradient. </summary>
      <returns>The ending two-dimensional coordinates of the linear gradient. The default is a <see cref="T:System.Windows.Point" /> with value 1,1.  </returns>
    </member>
    <member name="F:System.Windows.Media.LinearGradientBrush.EndPointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint" /> dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.LinearGradientBrush.StartPoint">
      <summary>Gets or sets the starting two-dimensional coordinates of the linear gradient. </summary>
      <returns>The starting two-dimensional coordinates for the linear gradient. The default is a <see cref="T:System.Windows.Point" /> with value 0,0.</returns>
    </member>
    <member name="F:System.Windows.Media.LinearGradientBrush.StartPointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.LineGeometry">
      <summary>Represents the geometry of a line. </summary>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LineGeometry" /> class that has no length. </summary>
    </member>
    <member name="P:System.Windows.Media.LineGeometry.EndPoint">
      <summary>Gets or sets the end point of a line. </summary>
      <returns>The end point of the line. The default is a <see cref="T:System.Windows.Point" /> with value 0,0. </returns>
    </member>
    <member name="F:System.Windows.Media.LineGeometry.EndPointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.LineGeometry.EndPoint" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.LineGeometry.EndPoint" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.LineGeometry.StartPoint">
      <summary>Gets or sets the start point of the line. </summary>
      <returns>The start point of the line. The default is a <see cref="T:System.Windows.Point" /> with value 0,0.</returns>
    </member>
    <member name="F:System.Windows.Media.LineGeometry.StartPointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.LineGeometry.StartPoint" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.LineGeometry.StartPoint" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.LineSegment">
      <summary>Represents a line drawn between two points, which can be part of a <see cref="T:System.Windows.Media.PathFigure" /> within <see cref="T:System.Windows.Shapes.Path" /> data.</summary>
    </member>
    <member name="M:System.Windows.Media.LineSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LineSegment" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.LineSegment.Point">
      <summary>Gets or sets the end point of the line segment. </summary>
      <returns>The end point of the line segment. The default is a <see cref="T:System.Windows.Point" /> with value 0,0.</returns>
    </member>
    <member name="F:System.Windows.Media.LineSegment.PointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.LineSegment.Point" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.LineSegment.Point" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.LogReadyRoutedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.MediaElement.LogReady" /> event.</summary>
    </member>
    <member name="M:System.Windows.Media.LogReadyRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LogReadyRoutedEventArgs" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.LogReadyRoutedEventArgs.Log">
      <summary>Gets an XML string in the Windows Media Log format that contains the fields listed in the LogFields section.</summary>
      <returns>The XML string in the Windows Media Log format that contains the fields listed in the LogFields section.</returns>
    </member>
    <member name="P:System.Windows.Media.LogReadyRoutedEventArgs.LogSource">
      <summary>Gets a value that indicates why the log was generated.</summary>
      <returns>One of the enumeration values that indicates why the log was generated.</returns>
    </member>
    <member name="T:System.Windows.Media.LogReadyRoutedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.MediaElement.LogReady" /> event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data. </param>
    </member>
    <member name="T:System.Windows.Media.LogSource">
      <summary>Indicates the reason that a media log was generated.</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.RequestLog">
      <summary>The <see cref="M:System.Windows.Controls.MediaElement.RequestLog" /> method was called.</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.Stop">
      <summary>The media stopped.</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.Seek">
      <summary>A seek operation occurred on the media; that is, playback was moved forward or backward.</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.Pause">
      <summary>The media paused.</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.SourceChanged">
      <summary>The source of the media changed.</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.EndOfStream">
      <summary>The media reached the end of its stream.</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.MediaElementShutdown">
      <summary>The runtime shut down.</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.RuntimeShutdown">
      <summary>The runtime shut down.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary> Represents a 3x3 affine transformation matrix used for transformations in two-dimensional space. </summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a <see cref="T:System.Windows.Media.Matrix" /> structure. </summary>
      <param name="m11">The <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M11" /> coefficient.</param>
      <param name="m12">The <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M12" /> coefficient.</param>
      <param name="m21">The <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M21" /> coefficient.</param>
      <param name="m22">The <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M22" /> coefficient.</param>
      <param name="offsetX">The <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetX" /> coefficient.</param>
      <param name="offsetY">The <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetY" /> coefficient.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>true if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" /> structure; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Object" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Media.Matrix" /> structure is identical to this instance. </summary>
      <returns>true if instances are equal; otherwise, false. </returns>
      <param name="value">The instance of <see cref="T:System.Windows.Media.Matrix" /> to compare to this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Media.Matrix" /> structure. </summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary>Gets an identity <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>An identity matrix.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix. </summary>
      <returns>true if the <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary>Gets or sets the value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure. </summary>
      <returns>The value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" />. The default value is 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary>Gets or sets the value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure. </summary>
      <returns>The value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" />. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary>Gets or sets the value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</summary>
      <returns>The value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" />. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary>Gets or sets the value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure. </summary>
      <returns>The value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure. The default value is 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary>Gets or sets the value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.  </summary>
      <returns>The value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary>Gets or sets the value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure. </summary>
      <returns>The value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure. The default value is 0.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</summary>
      <returns>true if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, false.</returns>
      <param name="matrix1">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</param>
      <param name="matrix2">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are not identical.</summary>
      <returns>true if <paramref name="matrix1" /> and <paramref name="matrix2" /> are not identical; otherwise, false.</returns>
      <param name="matrix1">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</param>
      <param name="matrix2">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A string containing the value of the current instance in the specified format.</returns>
      <param name="format">The string specifying the format to use. -or- null to use the default format defined for the type of the IFormattable implementation. </param>
      <param name="provider">The IFormatProvider to use to format the value. -or- null to obtain the numeric format information from the current locale setting of the operating system. </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure. </summary>
      <returns>A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure with culture-specific formatting information. </summary>
      <returns>A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <param name="provider">The culture-specific formatting information.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary>Transforms the specified point by the <see cref="T:System.Windows.Media.Matrix" /> and returns the result.</summary>
      <returns>The result of transforming <paramref name="point" /> by this <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <param name="point">The point to transform.</param>
    </member>
    <member name="T:System.Windows.Media.Matrix3DProjection">
      <summary>Enables you to apply a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> to an object.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix3DProjection.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Media.Matrix3DProjection" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Matrix3DProjection.ProjectionMatrix">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that is used for the projection that is applied to the object.</summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that is used for the projection that is applied to the object.</returns>
    </member>
    <member name="F:System.Windows.Media.Matrix3DProjection.ProjectionMatrixProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Matrix3DProjection.ProjectionMatrix" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Matrix3DProjection.ProjectionMatrix" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.MatrixTransform">
      <summary>Creates an arbitrary affine matrix transformation that is used to manipulate objects or coordinate systems in a two-dimensional plane.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MatrixTransform" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.MatrixTransform.Matrix">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Matrix" /> that defines this transformation. </summary>
      <returns>The <see cref="T:System.Windows.Media.Matrix" /> structure that defines this transformation. The default is an identity <see cref="T:System.Windows.Media.Matrix" />. An identity matrix has a value of 1 in coefficients [1,1], [2,2], and [3,3]; and a value of 0 in the rest of the coefficients.</returns>
    </member>
    <member name="F:System.Windows.Media.MatrixTransform.MatrixProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.MatrixTransform.Matrix" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.MatrixTransform.Matrix" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.MediaElementState">
      <summary>Defines the potential states of a <see cref="T:System.Windows.Controls.MediaElement" /> object.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Closed">
      <summary>The <see cref="T:System.Windows.Controls.MediaElement" /> contains no media. The <see cref="T:System.Windows.Controls.MediaElement" /> displays a transparent frame.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Opening">
      <summary>The <see cref="T:System.Windows.Controls.MediaElement" /> is validating and attempting to open the Uniform Resource Identifier (URI) specified by its <see cref="P:System.Windows.Controls.MediaElement.Source" /> property. While in this state, the <see cref="T:System.Windows.Controls.MediaElement" /> queues any <see cref="M:System.Windows.Controls.MediaElement.Play" />, <see cref="M:System.Windows.Controls.MediaElement.Pause" />, or <see cref="M:System.Windows.Controls.MediaElement.Stop" /> commands it receives and processes them if the media is successfully opened.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Individualizing">
      <summary>The <see cref="T:System.Windows.Controls.MediaElement" /> is in the process of ensuring that proper individualization components (only applicable when playing DRM protected content) are installed on the user's computer. See Digital Rights Management (DRM) for more information.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.AcquiringLicense">
      <summary>The <see cref="T:System.Windows.Controls.MediaElement" /> is acquiring a license required to play DRM protected content. Once <see cref="M:System.Windows.Media.LicenseAcquirer.OnAcquireLicense(System.IO.Stream,System.Uri)" /> has been called, the <see cref="T:System.Windows.Controls.MediaElement" /> will remain in this state until <see cref="M:System.Windows.Media.LicenseAcquirer.SetLicenseResponse(System.IO.Stream)" /> has been called.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Buffering">
      <summary>The <see cref="T:System.Windows.Controls.MediaElement" /> is loading the media for playback. Its <see cref="P:System.Windows.Controls.MediaElement.Position" /> does not advance during this state. If the <see cref="T:System.Windows.Controls.MediaElement" /> was already playing video, it continues to display the last displayed frame.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Playing">
      <summary>The <see cref="T:System.Windows.Controls.MediaElement" /> is playing the media specified by its source property. Its <see cref="P:System.Windows.Controls.MediaElement.Position" /> advances forward.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Paused">
      <summary>The <see cref="T:System.Windows.Controls.MediaElement" /> does not advance its <see cref="P:System.Windows.Controls.MediaElement.Position" />. If the <see cref="T:System.Windows.Controls.MediaElement" /> was playing video, it continues to display the current frame.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Stopped">
      <summary>The <see cref="T:System.Windows.Controls.MediaElement" /> contains media but is not playing or paused. Its <see cref="P:System.Windows.Controls.MediaElement.Position" /> is 0 and does not advance. If the loaded media is video, the <see cref="T:System.Windows.Controls.MediaElement" /> displays the first frame.</summary>
    </member>
    <member name="T:System.Windows.Media.MediaLicense">
      <summary>An instance of the license class representing a logical license.  </summary>
    </member>
    <member name="P:System.Windows.Media.MediaLicense.ExpirationDate">
      <summary>Gets the expiration date of the <see cref="T:System.Windows.Media.MediaLicense" /> class instance.</summary>
      <returns>The expiration date of the <see cref="T:System.Windows.Media.MediaLicense" /> class instance. </returns>
    </member>
    <member name="P:System.Windows.Media.MediaLicense.KeyId">
      <summary>Gets the content key identifier of the <see cref="T:System.Windows.Media.MediaLicense" />. </summary>
      <returns>The content key identifier of the <see cref="T:System.Windows.Media.MediaLicense" />. If the <see cref="T:System.Windows.Media.MediaLicense" /> instance represents a license, then this property returns the content key identifier of the license itself.  If the class instance represents a license chain, then it is the content key identifier of the leaf license. For more information about license chains and leaf licenses, see Digital Rights Management (DRM). Since content also contains the key identifier for the key needed to decrypt the content, this value is used to pair a license with the content for decryption.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaLicense.UplinkKeyId">
      <summary>Gets the uplink key identifier of the highest license in the chain with an uplink key identifier.</summary>
      <returns>The uplink key identifier of the highest license in the chain with an uplink key identifier. If the <see cref="T:System.Windows.Media.MediaLicense" /> class contains a root license or a simple license, then this property returns Guid.Empty.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaLicense.Usable">
      <summary>Gets a value that indicates whether the license or license chain is usable for playback.</summary>
      <returns>The value that indicates whether the license or license chain is usable for playback.</returns>
    </member>
    <member name="T:System.Windows.Media.MediaSampleAttributeKeys">
      <summary>Describes the media sample.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.KeyFrameFlag">
      <summary>Indicates if the video frame is a keyframe.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.DRMInitializationVector">
      <summary> Provides data about the media sample that is needed to decrypt it.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.FrameWidth">
      <summary>The Width of the video frame.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.FrameHeight">
      <summary>The Height of the video frame.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.DRMSubSampleMapping">
      <summary> Describes the length of encrypted data and clear data (not encrypted data) in an H264 media sample.</summary>
    </member>
    <member name="T:System.Windows.Media.MediaSourceAttributesKeys">
      <summary>Describes the media source.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSourceAttributesKeys.CanSeek">
      <summary>A Boolean value that describes whether this source can seek.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSourceAttributesKeys.Duration">
      <summary>The length of playback time of this source as an integer in 100-nanosecond increments.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSourceAttributesKeys.DRMHeader">
      <summary>DRM data that the pipeline needs to initialize and decrypt correctly. This is the DRM header represented as a string.</summary>
    </member>
    <member name="T:System.Windows.Media.MediaStreamAttributeKeys">
      <summary>Specifies an attribute name that describes the media stream.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.CodecPrivateData">
      <summary>Codec data that the pipeline needs to initialize and render correctly.  For video, this is other header information. For audio, this is the base16-encoded WaveFormatEx structure.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.VideoFourCC">
      <summary>Data needed to instantiate a video codec. This is the four-character value also known as a FourCC.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.Width">
      <summary>The integer width a video frame is to be rendered at.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.Height">
      <summary>The integer height a video frame is to be rendered at.</summary>
    </member>
    <member name="T:System.Windows.Media.MediaStreamDescription">
      <summary>This class describes a media stream in enough detail to initialize the <see cref="T:System.Windows.Controls.MediaElement" /> and the underlying media pipeline.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamDescription.#ctor(System.Windows.Media.MediaStreamType,System.Collections.Generic.IDictionary{System.Windows.Media.MediaStreamAttributeKeys,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MediaStreamDescription" /> class with the specified values.</summary>
      <param name="type">A value from the enumeration, which is either audio or video.</param>
      <param name="mediaStreamAttributes">A collection of pairs describing other attributes of the overall Media Stream.</param>
      <exception cref="T:System.InvalidOperationException">The specified <paramref name="type" /> is not audio or video.</exception>
    </member>
    <member name="P:System.Windows.Media.MediaStreamDescription.MediaAttributes">
      <summary>Gets a collection of attributes about the media stream. This collection only contains attributes that are used to initialize the media pipeline and the <see cref="T:System.Windows.Controls.MediaElement" />.</summary>
      <returns>A collection of attributes about the media stream. The default value is Empty IDictionary&lt;MediaStreamAttributeKeys, string&gt;.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamDescription.StreamId">
      <summary>Gets the stream ID of the stream being described.</summary>
      <returns>The stream ID of the stream being described.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamDescription.Type">
      <summary>Gets the type of stream that is being described which is either <see cref="F:System.Windows.Media.MediaStreamType.Audio" /> or <see cref="F:System.Windows.Media.MediaStreamType.Video" />.</summary>
      <returns>The type of stream that is being described which is either <see cref="F:System.Windows.Media.MediaStreamType.Audio" /> or <see cref="F:System.Windows.Media.MediaStreamType.Video" />. The default value is <see cref="F:System.Windows.Media.MediaStreamType.Video" />.</returns>
    </member>
    <member name="T:System.Windows.Media.MediaStreamSample">
      <summary>This class describes a media sample in enough detail to allow the <see cref="T:System.Windows.Controls.MediaElement" /> and underlying pipeline to render the sample.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSample.#ctor(System.Windows.Media.MediaStreamDescription,System.IO.Stream,System.Int64,System.Int64,System.Int64,System.Collections.Generic.IDictionary{System.Windows.Media.MediaSampleAttributeKeys,System.String})">
      <summary>Instantiates a new instance of the <see cref="T:System.Windows.Media.MediaStreamSample" /> class.</summary>
      <param name="mediaStreamDescription">A description of the stream this sample was pulled from.</param>
      <param name="stream">A stream containing the desired media sample.</param>
      <param name="offset">The offset into the stream where the actual sample data begins.</param>
      <param name="count">The number of bytes that comprises the sample data.</param>
      <param name="timestamp">The time from the beginning of the media file at which this sample should be rendered as expressed using 100 nanosecond increments.</param>
      <param name="attributes">A collection of pairs describing other attributes of the media sample.</param>
      <exception cref="T:System.InvalidOperationException">One or more parameters are invalid.</exception>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSample.#ctor(System.Windows.Media.MediaStreamDescription,System.IO.Stream,System.Int64,System.Int64,System.Int64,System.Int64,System.Collections.Generic.IDictionary{System.Windows.Media.MediaSampleAttributeKeys,System.String})">
      <summary>Instantiates a new instance of the <see cref="T:System.Windows.Media.MediaStreamSample" /> class.</summary>
      <param name="mediaStreamDescription">A description of the stream this sample was pulled from.</param>
      <param name="stream">A stream containing the desired media sample.</param>
      <param name="offset">The offset into the stream where the actual sample data begins.</param>
      <param name="count">The number of bytes that comprises the sample data.</param>
      <param name="timestamp">The time from the beginning of the media file at which this sample should be rendered as expressed using 100 nanosecond increments.</param>
      <param name="duration">The duration of the sample.</param>
      <param name="attributes">A collection of pairs describing other attributes of the media sample.</param>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Attributes">
      <summary>Gets a collection of attributes describing to the <see cref="T:System.Windows.Controls.MediaElement" /> and media pipeline how to render this sample.</summary>
      <returns>A collection of attributes describing to the <see cref="T:System.Windows.Controls.MediaElement" /> and media pipeline how to render this sample. The default value is Empty IDictionary&lt;MediaSampleAttributeKeys, string&gt;</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Count">
      <summary>Gets the number of bytes into the stream where the sample ends.</summary>
      <returns>The number of bytes into the stream where the sample ends. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Duration">
      <summary>Gets the duration of the sample.</summary>
      <returns>The duration of the sample.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.MediaStreamDescription">
      <summary>Gets the description of the stream that this sample came from.</summary>
      <returns>The description of the stream that this sample came from. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Offset">
      <summary>Gets the byte offset into the stream where the sample comes from. For sample streams that contain a header as well, this is set to where the actual sample begins.</summary>
      <returns>The byte offset into the stream where the sample comes from. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Stream">
      <summary>Gets the stream of data representing the sample. </summary>
      <returns>The stream of data representing the sample. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Timestamp">
      <summary>Gets the time at which a sample should be rendered as measured in 100 nanosecond increments.</summary>
      <returns>The time at which a sample should be rendered as measured in 100 nanosecond increments. The default value is 0.</returns>
    </member>
    <member name="T:System.Windows.Media.MediaStreamSource">
      <summary>Enables <see cref="T:System.Windows.Controls.MediaElement" /> to use a container format other than ASF.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MediaStreamSource" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSource.AudioBufferLength">
      <summary>Gets or sets the length of the audio buffer.</summary>
      <returns>The length of the audio buffer.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.CloseMedia">
      <summary>Closes down the open media streams and otherwise cleans up the <see cref="T:System.Windows.Media.MediaStreamSource" />. The <see cref="T:System.Windows.Controls.MediaElement" /> can call this method when going through normal shutdown or as a result of an error.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ErrorOccurred(System.String)">
      <summary>Developers call this method whenever an unrecoverable error has occurred in the <see cref="T:System.Windows.Media.MediaStreamSource" />. This will cause the <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" /> event to be raised.</summary>
      <param name="errorDescription">A string describing the error.</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.GetDiagnosticAsync(System.Windows.Media.MediaStreamSourceDiagnosticKind)">
      <summary>Gathers the diagnostic information requested.</summary>
      <param name="diagnosticKind">A member of the <see cref="T:System.Windows.Media.MediaStreamSourceDiagnosticKind" /> enumeration describing what type of information is desired. </param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.GetSampleAsync(System.Windows.Media.MediaStreamType)">
      <summary>Causes the <see cref="T:System.Windows.Media.MediaStreamSource" /> to prepare a <see cref="T:System.Windows.Media.MediaStreamSample" /> describing the next media sample to be rendered by the media pipeline. This method can be responded to by both <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetSampleCompleted(System.Windows.Media.MediaStreamSample)" /> and <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetSampleProgress(System.Double)" />.</summary>
      <param name="mediaStreamType">The description of the stream that the next sample should come from which will be either <see cref="F:System.Windows.Media.MediaStreamType.Audio" /> or <see cref="F:System.Windows.Media.MediaStreamType.Video" />.</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.OpenMediaAsync">
      <summary>Collects the metadata required to instantiate a collection of <see cref="T:System.Windows.Media.MediaStreamDescription" /> objects and then instantiates it.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportGetDiagnosticCompleted(System.Windows.Media.MediaStreamSourceDiagnosticKind,System.Int64)">
      <summary>Developers call this method to pass the requested diagnostic information to the <see cref="T:System.Windows.Controls.MediaElement" />.</summary>
      <param name="diagnosticKind">The type of diagnostic that you are returning a value for.</param>
      <param name="diagnosticValue">If a request was made for DownloadProgress, then the percentage downloaded should be passed in as a value in the range [0:1].</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportGetSampleCompleted(System.Windows.Media.MediaStreamSample)">
      <summary>Developers call this method to give the <see cref="T:System.Windows.Controls.MediaElement" /> a media sample to be rendered.</summary>
      <param name="mediaStreamSample">The description of the media stream that this sample came from. Passing null<see cref="T:System.Windows.Media.MediaStreamSample" /> object indicates that the stream has ended. </param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportGetSampleProgress(System.Double)">
      <summary>Developers call this method to inform the <see cref="T:System.Windows.Controls.MediaElement" /> that it will not return a sample right now because it has dipped below its requested buffering level.</summary>
      <param name="bufferingProgress">A value between 0 and 1 indicating what percentage of the buffer is filled.</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportOpenMediaCompleted(System.Collections.Generic.IDictionary{System.Windows.Media.MediaSourceAttributesKeys,System.String},System.Collections.Generic.IEnumerable{System.Windows.Media.MediaStreamDescription})">
      <summary>Call this method to report to a <see cref="T:System.Windows.Controls.MediaElement" /> that a <see cref="T:System.Windows.Media.MediaStreamSource" /> is attached to that the media has been opened and that the <see cref="T:System.Windows.Media.MediaStreamSource" /> has descriptions for the streams of content it contains.</summary>
      <param name="mediaStreamAttributes">A collection of attributes describing features of the entire media stream. Currently supported attributes are listed in Remarks.</param>
      <param name="availableMediaStreams">A description of each audio and video stream contained within the content.</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportSeekCompleted(System.Int64)">
      <summary>Call this method to report to a <see cref="T:System.Windows.Controls.MediaElement" /> that a <see cref="T:System.Windows.Media.MediaStreamSource" /> is attached to that the requested Seek has now been handled.</summary>
      <param name="timeSeekedTo">The number of ticks (nanoseconds) into the file where the actual seek took place.</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportSwitchMediaStreamCompleted(System.Windows.Media.MediaStreamDescription)">
      <summary>Call this method to report to a <see cref="T:System.Windows.Controls.MediaElement" /> that a <see cref="T:System.Windows.Media.MediaStreamSource" /> is attached to the requested stream switch which has now been completed and that samples returned will now be from the requested stream instead of the original stream. (Note: This is meant for the multiple audio stream case (language tracks) and not the adaptive streaming case)</summary>
      <param name="mediaStreamDescription">The description of the stream actually switched to. This should be the same stream as what was requested by <see cref="M:System.Windows.Media.MediaStreamSource.SwitchMediaStreamAsync(System.Windows.Media.MediaStreamDescription)" />.</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.SeekAsync(System.Int64)">
      <summary>Takes the given offset and ensures that future calls to <see cref="M:System.Windows.Media.MediaStreamSource.GetSampleAsync(System.Windows.Media.MediaStreamType)" /> will be returned samples starting at that point.</summary>
      <param name="seekToTime">The time as represented by 100 nanosecond increments since the beginning of the media file to seek to.</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.SwitchMediaStreamAsync(System.Windows.Media.MediaStreamDescription)">
      <summary>Called when a stream switch is requested on the <see cref="T:System.Windows.Controls.MediaElement" />.</summary>
      <param name="mediaStreamDescription">The stream switched to.</param>
    </member>
    <member name="T:System.Windows.Media.MediaStreamSourceDiagnosticKind">
      <summary>Describes the type of diagnostic information used by the media.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamSourceDiagnosticKind.BufferLevelInMilliseconds">
      <summary>Represents a download buffer in milliseconds.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamSourceDiagnosticKind.BufferLevelInBytes">
      <summary>Represents a download buffer in bytes.</summary>
    </member>
    <member name="T:System.Windows.Media.MediaStreamType">
      <summary>Enumeration that specifies the type of stream.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamType.Audio">
      <summary>The stream is an audio stream.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamType.Video">
      <summary>The stream is a video stream.</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamType.Script">
      <summary>The stream is a script stream. Note: Currently script commands are not supported in <see cref="T:System.Windows.Media.MediaStreamSource" />.</summary>
    </member>
    <member name="T:System.Windows.Media.MultiScaleTileSource">
      <summary>Used to specify the source of Deep Zoom images. </summary>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.MultiScaleTileSource" /> class with the specified parameters.</summary>
      <param name="imageWidth">The width of the Deep Zoom image.</param>
      <param name="imageHeight">The height of the Deep Zoom image.</param>
      <param name="tileWidth">The width of the tiles in the Deep Zoom image.</param>
      <param name="tileHeight">The height of the tiles in the Deep Zoom image.</param>
      <param name="tileOverlap">How much the tiles in the Deep Zoom image overlap.</param>
      <exception cref="T:System.ArgumentException">One or more arguments are invalid.</exception>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.#ctor(System.Int64,System.Int64,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.MultiScaleTileSource" /> class with the specified parameters.</summary>
      <param name="imageWidth">The width of the Deep Zoom image.</param>
      <param name="imageHeight">The height of the Deep Zoom image.</param>
      <param name="tileWidth">The width of the tiles in the Deep Zoom image.</param>
      <param name="tileHeight">The height of the tiles in the Deep Zoom image.</param>
      <param name="tileOverlap">How much the tiles in the Deep Zoom image overlap.</param>
      <exception cref="T:System.ArgumentException">One or more arguments are invalid.</exception>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.GetTileLayers(System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{System.Object})">
      <summary>Gets a collection of the URIs that comprise the Deep Zoom image.</summary>
      <param name="tileLevel">Level of the tile.</param>
      <param name="tilePositionX">X-coordinate position of the tile.</param>
      <param name="tilePositionY">Y-coordinate position of the tile.</param>
      <param name="tileImageLayerSources">Source of the tile image layer, which is a collection of URIs.</param>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.InvalidateTileLayer(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Invalidates specified tile layers.</summary>
      <param name="level">Tile level.</param>
      <param name="tilePositionX">X position of the tile.</param>
      <param name="tilePositionY">Y position of the tile.</param>
      <param name="tileLayer">Layer of the tile.</param>
    </member>
    <member name="P:System.Windows.Media.MultiScaleTileSource.TileBlendTime">
      <summary>Gets or sets the amount of time to blend a new level of detail when a tile becomes available.</summary>
      <returns>The amount of time to blend a new level of detail when a tile becomes available.</returns>
    </member>
    <member name="T:System.Windows.Media.PathFigure">
      <summary>Represents a subsection of a geometry, a single connected series of two-dimensional geometric segments. </summary>
    </member>
    <member name="M:System.Windows.Media.PathFigure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathFigure" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.PathFigure.IsClosed">
      <summary>Gets or sets a value that indicates whether this figure's first and last segments are connected.</summary>
      <returns>true if the first and last segments of the figure are connected; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.IsClosedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PathFigure.IsClosed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PathFigure.IsClosed" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.IsFilled">
      <summary>Gets or sets a value that indicates whether the contained area of this <see cref="T:System.Windows.Media.PathFigure" /> is to be used for hit-testing, rendering, and clipping.  </summary>
      <returns>true if the contained area of this <see cref="T:System.Windows.Media.PathFigure" /> is to be used for hit-testing, rendering, and clipping; otherwise, false.  The default is true.</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.IsFilledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PathFigure.IsFilled" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PathFigure.IsFilled" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.Segments">
      <summary>Gets or sets the collection of segments that define the shape of this <see cref="T:System.Windows.Media.PathFigure" /> object. </summary>
      <returns>The collection of segments that define the shape of this <see cref="T:System.Windows.Media.PathFigure" /> object. The default is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.SegmentsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PathFigure.Segments" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PathFigure.Segments" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.StartPoint">
      <summary>Gets or sets the <see cref="T:System.Windows.Point" /> where the <see cref="T:System.Windows.Media.PathFigure" /> begins. </summary>
      <returns>The <see cref="T:System.Windows.Point" /> where the <see cref="T:System.Windows.Media.PathFigure" /> begins. The default is a <see cref="T:System.Windows.Point" /> with value 0,0.</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.StartPointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PathFigure.StartPoint" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PathFigure.StartPoint" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.PathFigureCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.PathFigure" /> objects that collectively make up the geometry of a <see cref="T:System.Windows.Media.PathGeometry" />. </summary>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathFigureCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.PathGeometry">
      <summary>Represents a complex shape that may be composed of arcs, curves, ellipses, lines, and rectangles. </summary>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathGeometry" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.PathGeometry.Figures">
      <summary>Gets or sets the collection of <see cref="T:System.Windows.Media.PathFigure" /> objects that describe the contents of a path. </summary>
      <returns>A collection of <see cref="T:System.Windows.Media.PathFigure" /> objects that describe the contents of a path. Each individual <see cref="T:System.Windows.Media.PathFigure" /> describes a shape.</returns>
    </member>
    <member name="F:System.Windows.Media.PathGeometry.FiguresProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PathGeometry.Figures" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PathGeometry.Figures" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PathGeometry.FillRule">
      <summary>Gets or sets a value that determines how the intersecting areas contained in the <see cref="T:System.Windows.Media.PathGeometry" /> are combined. </summary>
      <returns>A <see cref="T:System.Windows.Media.FillRule" /> enumeration value that indicates how the intersecting areas of the <see cref="T:System.Windows.Media.PathGeometry" /> are combined. The default is <see cref="F:System.Windows.Media.FillRule.EvenOdd" />.</returns>
    </member>
    <member name="F:System.Windows.Media.PathGeometry.FillRuleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PathGeometry.FillRule" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PathGeometry.FillRule" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.ToString">
      <summary>Returns a string representation of this <see cref="T:System.Windows.Media.PathGeometry" />.</summary>
      <returns>A string representation of this <see cref="T:System.Windows.Media.PathGeometry" />.</returns>
    </member>
    <member name="T:System.Windows.Media.PathSegment">
      <summary>Represents a segment of a <see cref="T:System.Windows.Media.PathFigure" /> object.</summary>
    </member>
    <member name="T:System.Windows.Media.PathSegmentCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.PathSegment" /> objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathSegmentCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.PenLineCap">
      <summary>Describes the shape at the end of a line or segment. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Flat">
      <summary>A cap that does not extend past the last point of the line. Comparable to no line cap.</summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Square">
      <summary>A rectangle that has a height equal to the line thickness and a length equal to half the line thickness. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Round">
      <summary>A semicircle that has a diameter equal to the line thickness. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Triangle">
      <summary>An isosceles right triangle whose base length is equal to the thickness of the line. </summary>
    </member>
    <member name="T:System.Windows.Media.PenLineJoin">
      <summary>Describes the shape that joins two lines or segments. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Miter">
      <summary>Line joins use regular angular vertices. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Bevel">
      <summary>Line joins use beveled vertices. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Round">
      <summary>Line joins use rounded vertices. </summary>
    </member>
    <member name="T:System.Windows.Media.PixelFormatType">
      <summary>Describes format information that reports the graphics format of individual pixels of the video format.</summary>
    </member>
    <member name="F:System.Windows.Media.PixelFormatType.Unknown">
      <summary>The format is unknown.</summary>
    </member>
    <member name="F:System.Windows.Media.PixelFormatType.Format32bppArgb">
      <summary>The format uses 32 bits of color information per pixel and reports color information by using alpha, red, blue, and green channels.</summary>
    </member>
    <member name="T:System.Windows.Media.PlaneProjection">
      <summary>Represents a perspective transform (a 3-D-like effect) on an object.</summary>
    </member>
    <member name="M:System.Windows.Media.PlaneProjection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PlaneProjection" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.CenterOfRotationX">
      <summary>Gets or sets the x-coordinate of the center of rotation of the object you rotate. </summary>
      <returns>The x-coordinate of the center of rotation of the object you rotate. Typical values are between 0 and 1 with a value of 0 corresponding to one edge of the object and 1 to the opposite edge. Values outside this range are allowed and move the center of rotation accordingly. The default is 0.5 (the center of object). </returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.CenterOfRotationXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.CenterOfRotationY">
      <summary>Gets or sets the y-coordinate of the center of rotation of the object you rotate.</summary>
      <returns>The y-coordinate of the center of rotation of the object you rotate. Typical values are between 0 and 1 with a value of 0 corresponding to one edge of the object and 1 to the opposite edge. Values outside this range are allowed and move the center of rotation accordingly. The default is 0.5 (the center of object).</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.CenterOfRotationYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.CenterOfRotationZ">
      <summary>Gets or sets the z-coordinate of the center of rotation of the object you rotate.</summary>
      <returns>The z-coordinate of the center of rotation of the object you rotate. The default is 0. Values greater than 0 correspond to coordinates out from the plane of the object, and negative values correspond to coordinates behind the plane of the object.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.CenterOfRotationZProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationZ" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationZ" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.GlobalOffsetX">
      <summary>Gets or sets the distance the object is translated along the x-axis of the screen. </summary>
      <returns>The distance the object is translated along the x-axis of the screen.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.GlobalOffsetXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.GlobalOffsetY">
      <summary>Gets or sets the distance the object is translated along the y-axis of the screen. </summary>
      <returns>The distance the object is translated along the y-axis of the screen.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.GlobalOffsetYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.GlobalOffsetZ">
      <summary>Gets or sets the distance the object is translated along the z-axis of the screen.</summary>
      <returns>The distance the object is translated along the z-axis of the screen.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.GlobalOffsetZProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetZ" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetZ" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.LocalOffsetX">
      <summary>Gets or sets the distance the object is translated along the x-axis of the plane of the object. </summary>
      <returns>The distance the object is translated along the x-axis of the plane of the object.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.LocalOffsetXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.LocalOffsetY">
      <summary>Gets or sets the distance the object is translated along the y-axis of the plane of the object.</summary>
      <returns>The distance the object is translated along the y-axis of the plane of the object.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.LocalOffsetYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.LocalOffsetZ">
      <summary>Gets or sets the distance the object is translated along the z-axis of the plane of the object.</summary>
      <returns>The distance the object is translated along the z-axis of the plane of the object.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.LocalOffsetZProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetZ" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetZ" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.ProjectionMatrix">
      <summary>Gets the projection matrix on the <see cref="T:System.Windows.Media.PlaneProjection" />.</summary>
      <returns>The projection matrix of the <see cref="T:System.Windows.Media.PlaneProjection" />. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.ProjectionMatrixProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.ProjectionMatrix" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.ProjectionMatrix" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.RotationX">
      <summary>Gets or sets the number of degrees to rotate the object around the x-axis of rotation.</summary>
      <returns>The number of degrees to rotate the object around the x-axis of rotation. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.RotationXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.RotationX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.RotationX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.RotationY">
      <summary>Gets or sets the number of degrees to rotate the object around the y-axis of rotation.</summary>
      <returns>The number of degrees to rotate the object around the y-axis of rotation. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.RotationYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.RotationY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.RotationY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.RotationZ">
      <summary>Gets or sets the number of degrees to rotate the object around the z-axis of rotation.</summary>
      <returns>The number of degrees to rotate the object around the z-axis of rotation. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.RotationZProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PlaneProjection.RotationZ" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PlaneProjection.RotationZ" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.PointCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Point" /> values that can be individually accessed by index.</summary>
    </member>
    <member name="M:System.Windows.Media.PointCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PointCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.PolyBezierSegment">
      <summary>Represents one or more cubic Bezier curves.</summary>
    </member>
    <member name="M:System.Windows.Media.PolyBezierSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PolyBezierSegment" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.PolyBezierSegment.Points">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.PointCollection" /> that defines this <see cref="T:System.Windows.Media.PolyBezierSegment" /> object.  </summary>
      <returns>The collection of points that defines this <see cref="T:System.Windows.Media.PolyBezierSegment" /> object.</returns>
    </member>
    <member name="F:System.Windows.Media.PolyBezierSegment.PointsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PolyBezierSegment.Points" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PolyBezierSegment.Points" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.PolyLineSegment">
      <summary>Represents a set of line segments defined by a <see cref="T:System.Windows.Media.PointCollection" /> with each <see cref="T:System.Windows.Point" /> specifying the end point of a line segment. </summary>
    </member>
    <member name="M:System.Windows.Media.PolyLineSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PolyLineSegment" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.PolyLineSegment.Points">
      <summary>Gets or sets the collection of <see cref="T:System.Windows.Point" /> values that defines this <see cref="T:System.Windows.Media.PolyLineSegment" /> object. </summary>
      <returns>The points that define this <see cref="T:System.Windows.Media.PolyLineSegment" /> object.</returns>
    </member>
    <member name="F:System.Windows.Media.PolyLineSegment.PointsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PolyLineSegment.Points" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PolyLineSegment.Points" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.PolyQuadraticBezierSegment">
      <summary>Represents a set of quadratic Bezier segments. </summary>
    </member>
    <member name="M:System.Windows.Media.PolyQuadraticBezierSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.PolyQuadraticBezierSegment.Points">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.PointCollection" /> that defines this <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> object. </summary>
      <returns>A collection of points that defines the shape of this <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> object. The default value is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Media.PolyQuadraticBezierSegment.PointsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PolyQuadraticBezierSegment.Points" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PolyQuadraticBezierSegment.Points" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Projection">
      <summary>Provides a base class for projections, which describe how to transform an object in 3-D space using perspective transforms.</summary>
    </member>
    <member name="M:System.Windows.Media.Projection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Projection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.QuadraticBezierSegment">
      <summary>Creates a quadratic Bezier curve between two points in a <see cref="T:System.Windows.Media.PathFigure" />. </summary>
    </member>
    <member name="M:System.Windows.Media.QuadraticBezierSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.QuadraticBezierSegment" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.QuadraticBezierSegment.Point1">
      <summary>Gets or sets the control point of the curve. </summary>
      <returns>The control point of this <see cref="T:System.Windows.Media.QuadraticBezierSegment" />. The default value is a <see cref="T:System.Windows.Point" /> with value 0,0.</returns>
    </member>
    <member name="F:System.Windows.Media.QuadraticBezierSegment.Point1Property">
      <summary>Identifies the <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point1" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point1" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.QuadraticBezierSegment.Point2">
      <summary>Gets or sets the end <see cref="T:System.Windows.Point" /> of this <see cref="T:System.Windows.Media.QuadraticBezierSegment" />. </summary>
      <returns>The end point of this <see cref="T:System.Windows.Media.QuadraticBezierSegment" />. The default value is a <see cref="T:System.Windows.Point" /> with value 0,0.</returns>
    </member>
    <member name="F:System.Windows.Media.QuadraticBezierSegment.Point2Property">
      <summary>Identifies the <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point2" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point2" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.RadialGradientBrush">
      <summary>Paints an area with a radial gradient. A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient. </summary>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.RadialGradientBrush" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.RadialGradientBrush" /> class with the specified start and stop colors. </summary>
      <param name="startColor">Color value at the focus (<see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin" />) of the radial gradient.</param>
      <param name="endColor">Color value at the outer edge of the radial gradient.</param>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor(System.Windows.Media.GradientStopCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.RadialGradientBrush" /> class that has the specified gradient stops. </summary>
      <param name="gradientStopCollection">The gradient stops to set on this brush.</param>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.Center">
      <summary>Gets or sets the center of the outer circle of the radial gradient. </summary>
      <returns>The two-dimensional point located at the center of the radial gradient. The default value is a <see cref="T:System.Windows.Point" /> with value 0.5,0.5.</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.CenterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RadialGradientBrush.Center" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RadialGradientBrush.Center" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.GradientOrigin">
      <summary>Gets or sets the location of the focal point that defines the beginning of the gradient. </summary>
      <returns>The two-dimensional point located at the center of the radial gradient. The default value is a <see cref="T:System.Windows.Point" /> with value 0.5,0.5.</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.GradientOriginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.RadiusX">
      <summary>Gets or sets the horizontal radius of the outer circle of the radial gradient. </summary>
      <returns>The horizontal radius of the outermost circle of the radial gradient. The default value is 0.5.</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.RadiusXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusX" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.RadiusY">
      <summary>Gets or sets the vertical radius of the outer circle of a radial gradient. </summary>
      <returns>The vertical radius of the outer circle of a radial gradient. The default is 0.5.</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.RadiusYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusY" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusY" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.RectangleGeometry">
      <summary>Describes a two-dimensional rectangular geometry. </summary>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.RectangleGeometry" /> class, and creates a rectangle with zero area. </summary>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.RadiusX">
      <summary>Gets or sets the x-radius of the ellipse that is used to round the corners of the rectangle.</summary>
      <returns>The x-radius of the ellipse used to round the corners of the rectangle geometry. The default is 0. </returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RadiusXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RectangleGeometry.RadiusX" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RectangleGeometry.RadiusX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.RadiusY">
      <summary>Gets or sets the y-radius of the ellipse that is used to round the corners of the rectangle.  </summary>
      <returns>The y-radius of the ellipse used to round the corners of the rectangle geometry. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RadiusYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RectangleGeometry.RadiusY" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RectangleGeometry.RadiusY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.Rect">
      <summary>Gets or sets the dimensions of the rectangle. </summary>
      <returns>The <see cref="T:System.Windows.Rect" /> structure that describes the position and size of the rectangle. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RectProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RectangleGeometry.Rect" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RectangleGeometry.Rect" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.RenderingEventArgs">
      <summary>Provides event data for the <see cref="E:System.Windows.Media.CompositionTarget.Rendering" /> event.</summary>
    </member>
    <member name="P:System.Windows.Media.RenderingEventArgs.RenderingTime">
      <summary>Gets a date/time when the frame rendered.</summary>
      <returns>The date/time when the frame rendered.</returns>
    </member>
    <member name="T:System.Windows.Media.RotateTransform">
      <summary>Rotates an object clockwise about a specified point in a two-dimensional x-y coordinate system. </summary>
    </member>
    <member name="M:System.Windows.Media.RotateTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.RotateTransform" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.Angle">
      <summary>Gets or sets the angle, in degrees, of clockwise rotation.</summary>
      <returns>The angle, in degrees, of clockwise rotation. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.AngleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RotateTransform.Angle" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RotateTransform.Angle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the rotation center point.</summary>
      <returns>The x-coordinate of the center of rotation. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.CenterXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RotateTransform.CenterX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RotateTransform.CenterX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the rotation center point. </summary>
      <returns>The y-coordinate of the center of rotation. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.CenterYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RotateTransform.CenterY" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.ScaleTransform">
      <summary>Scales an object in the two-dimensional x-y coordinate system. </summary>
    </member>
    <member name="M:System.Windows.Media.ScaleTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ScaleTransform" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the center point of this <see cref="T:System.Windows.Media.ScaleTransform" />. </summary>
      <returns>The x-coordinate of the center point of this <see cref="T:System.Windows.Media.ScaleTransform" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.CenterXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ScaleTransform.CenterX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ScaleTransform.CenterX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the center point of this <see cref="T:System.Windows.Media.ScaleTransform" />.</summary>
      <returns>The y-coordinate of the center point of this <see cref="T:System.Windows.Media.ScaleTransform" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.CenterYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ScaleTransform.CenterY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ScaleTransform.CenterY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.ScaleX">
      <summary>Gets or sets the x-axis scale factor.</summary>
      <returns>The scale factor along the x-axis. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.ScaleXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ScaleTransform.ScaleX" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ScaleTransform.ScaleX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.ScaleY">
      <summary>Gets or sets the y-axis scale factor.</summary>
      <returns>The scale factor along the y-axis. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.ScaleYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ScaleTransform.ScaleY" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ScaleTransform.ScaleY" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.SkewTransform">
      <summary>Represents a two-dimensional skew. </summary>
    </member>
    <member name="M:System.Windows.Media.SkewTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.SkewTransform" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.AngleX">
      <summary>Gets or sets the x-axis skew angle, which is measured in degrees counterclockwise from the y-axis. </summary>
      <returns>The skew angle, which is measured in degrees counterclockwise from the y-axis. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.AngleXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.SkewTransform.AngleX" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.SkewTransform.AngleX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.AngleY">
      <summary>Gets or sets the y-axis skew angle, which is measured in degrees counterclockwise from the x-axis.</summary>
      <returns>The skew angle, which is measured in degrees counterclockwise from the x-axis. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.AngleYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.SkewTransform.AngleY" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.SkewTransform.AngleY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the transform center. </summary>
      <returns>The x-coordinate of the transform center. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.CenterXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.SkewTransform.CenterX" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.SkewTransform.CenterX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the transform center.</summary>
      <returns>The y-coordinate of the transform center. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.CenterYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.SkewTransform.CenterY" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.SkewTransform.CenterY" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.SolidColorBrush">
      <summary>Paints an area with a solid color. </summary>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.SolidColorBrush" /> class with no color. </summary>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.#ctor(System.Windows.Media.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.SolidColorBrush" /> class with the specified <see cref="T:System.Windows.Media.Color" />. </summary>
      <param name="color">The color to apply to the brush.</param>
    </member>
    <member name="P:System.Windows.Media.SolidColorBrush.Color">
      <summary>Gets or sets the color of this <see cref="T:System.Windows.Media.SolidColorBrush" />.</summary>
      <returns>The brush's color. The default value is <see cref="P:System.Windows.Media.Colors.Transparent" />.</returns>
    </member>
    <member name="F:System.Windows.Media.SolidColorBrush.ColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Stretch">
      <summary>Describes how content is resized to fill its allocated space.</summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.None">
      <summary>The content preserves its original size. </summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.Fill">
      <summary>The content is resized to fill the destination dimensions. The aspect ratio is not preserved. </summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.Uniform">
      <summary>The content is resized to fit in the destination dimensions while it preserves its native aspect ratio. </summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.UniformToFill">
      <summary>The content is resized to fill the destination dimensions while it preserves its native aspect ratio. If the aspect ratio of the destination rectangle differs from the source, the source content is clipped to fit in the destination dimensions.</summary>
    </member>
    <member name="T:System.Windows.Media.StyleSimulations">
      <summary>Describes the simulation style of a font.</summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.None">
      <summary>No font style simulation. </summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.BoldSimulation">
      <summary>Bold style simulation. </summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.ItalicSimulation">
      <summary>Italic style simulation. </summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.BoldItalicSimulation">
      <summary>Bold and Italic style simulation. </summary>
    </member>
    <member name="T:System.Windows.Media.SweepDirection">
      <summary>Specifies the direction an elliptical arc is drawn.</summary>
    </member>
    <member name="F:System.Windows.Media.SweepDirection.Counterclockwise">
      <summary>Aarcs are drawn in a counterclockwise (negative-angle) direction.</summary>
    </member>
    <member name="F:System.Windows.Media.SweepDirection.Clockwise">
      <summary>Arcs are drawn in a clockwise (positive-angle) direction.</summary>
    </member>
    <member name="T:System.Windows.Media.TextHintingMode">
      <summary>Specifies whether text rendering is optimized for readability or for dynamic presentation.</summary>
    </member>
    <member name="F:System.Windows.Media.TextHintingMode.Fixed">
      <summary>The default text render mode.</summary>
    </member>
    <member name="F:System.Windows.Media.TextHintingMode.Animated">
      <summary>Turns off text rendering optimizations.</summary>
    </member>
    <member name="T:System.Windows.Media.TextOptions">
      <summary>Provides options for controlling the rendering behavior of text, which can be set through an attached property usage on a wide range of Silverlight types.</summary>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextHintingMode(System.Windows.FrameworkElement)">
      <summary>Gets the <see cref="T:System.Windows.Media.TextHintingMode" /> for this <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextHintingMode" /> for this <see cref="T:System.Windows.FrameworkElement" />.</returns>
      <param name="target">The <see cref="T:System.Windows.FrameworkElement" /> to get this property on.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextHintingMode(System.Windows.FrameworkElement,System.Windows.Media.TextHintingMode)">
      <summary>Sets the <see cref="T:System.Windows.Media.TextHintingMode" /> for this <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <param name="target">The <see cref="T:System.Windows.FrameworkElement" /> to set this property on.</param>
      <param name="textHintingMode">The <see cref="T:System.Windows.Media.TextHintingMode" /> to set the <see cref="T:System.Windows.FrameworkElement" /> to.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextHintingMode">
      <summary>Gets or sets a value that indicates whether text rendering is optimized for readability or animation.</summary>
      <returns>A value that indicates whether text rendering is optimized for readability or animation.</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextHintingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Media.TileBrush">
      <summary>Base class that describes a way to paint a region. </summary>
    </member>
    <member name="M:System.Windows.Media.TileBrush.#ctor">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.  </summary>
    </member>
    <member name="P:System.Windows.Media.TileBrush.AlignmentX">
      <summary>Gets or sets the horizontal alignment of content in the <see cref="T:System.Windows.Media.TileBrush" /> base tile. </summary>
      <returns>A value that specifies the horizontal position of <see cref="T:System.Windows.Media.TileBrush" /> content in its base tile. The default value is <see cref="F:System.Windows.Media.AlignmentX.Center" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.AlignmentXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.AlignmentX" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.AlignmentX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.AlignmentY">
      <summary>Gets or sets the vertical alignment of content in the <see cref="T:System.Windows.Media.TileBrush" /> base tile. </summary>
      <returns>A value that specifies the vertical position of <see cref="T:System.Windows.Media.TileBrush" /> content in its base tile. The default value is <see cref="F:System.Windows.Media.AlignmentY.Center" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.AlignmentYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.AlignmentY" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.AlignmentY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.Stretch">
      <summary>Gets or sets a value that specifies how the content of this <see cref="T:System.Windows.Media.TileBrush" /> stretches to fit its tiles.</summary>
      <returns>A value that specifies how this <see cref="T:System.Windows.Media.TileBrush" /> content is projected onto its base tile. The default value is <see cref="F:System.Windows.Media.Stretch.Fill" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.Stretch" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.Stretch" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.TimelineMarker">
      <summary>Represents metadata associated with a specific point in a media file.</summary>
    </member>
    <member name="M:System.Windows.Media.TimelineMarker.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TimelineMarker" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TimelineMarker.Text">
      <summary>Gets or sets the text value of a <see cref="T:System.Windows.Media.TimelineMarker" />.</summary>
      <returns>The text value of the <see cref="T:System.Windows.Media.TimelineMarker" />. The default value is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Media.TimelineMarker.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TimelineMarker.Text" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TimelineMarker.Text" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TimelineMarker.Time">
      <summary>Gets or sets the time at which a <see cref="T:System.Windows.Media.TimelineMarker" /> is reached.</summary>
      <returns>The time at which the TimelineMarker is reached. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.TimelineMarker.TimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TimelineMarker.Time" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TimelineMarker.Time" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TimelineMarker.Type">
      <summary>Gets or sets the marker type of a <see cref="T:System.Windows.Media.TimelineMarker" />.</summary>
      <returns>A string that describes the type of this TimelineMarker. The default value is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Media.TimelineMarker.TypeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TimelineMarker.Type" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TimelineMarker.Type" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.TimelineMarkerCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.TimelineMarker" /> objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:System.Windows.Media.TimelineMarkerCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TimelineMarkerCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.TimelineMarkerRoutedEventArgs">
      <summary>Provides event data for the <see cref="E:System.Windows.Controls.MediaElement.MarkerReached" /> event.</summary>
    </member>
    <member name="M:System.Windows.Media.TimelineMarkerRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TimelineMarkerRoutedEventArgs" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TimelineMarkerRoutedEventArgs.Marker">
      <summary>Gets the <see cref="T:System.Windows.Media.TimelineMarker" /> that triggered this event.</summary>
      <returns>The <see cref="T:System.Windows.Media.TimelineMarker" /> that triggered this event.</returns>
    </member>
    <member name="T:System.Windows.Media.TimelineMarkerRoutedEventHandler">
      <summary>Represents methods that will handle various routed events related to timeline markers.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data. </param>
    </member>
    <member name="T:System.Windows.Media.Transform">
      <summary>Defines functionality that enables transformations in a two-dimensional plane. </summary>
    </member>
    <member name="P:System.Windows.Media.Transform.Inverse">
      <summary>Gets the inverse of this transform, if it exists.</summary>
      <returns>The inverse of this transform, if it exists; otherwise, null.</returns>
    </member>
    <member name="M:System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)">
      <summary>Transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.</summary>
      <returns>The smallest axis-aligned bounding box that can contain the transformed <paramref name="rect" />.</returns>
      <param name="rect">The bounding box to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)">
      <summary>Attempts to transform the specified point and returns a value that indicates whether the transformation was successful.</summary>
      <returns>true if <paramref name="inPoint" /> was transformed; otherwise, false.</returns>
      <param name="inPoint">The point to transform.</param>
      <param name="outPoint">The result of transforming <paramref name="inPoint" />.</param>
    </member>
    <member name="T:System.Windows.Media.TransformCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Transform" /> objects that can be individually accessed by index. </summary>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TransformCollection" /> class. </summary>
    </member>
    <member name="T:System.Windows.Media.TransformGroup">
      <summary>Represents a composite <see cref="T:System.Windows.Media.Transform" /> composed of other <see cref="T:System.Windows.Media.Transform" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.TransformGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TransformGroup" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TransformGroup.Children">
      <summary>Gets or sets the collection of child <see cref="T:System.Windows.Media.Transform" /> objects.</summary>
      <returns>The collection of child <see cref="T:System.Windows.Media.Transform" /> objects. The default is an empty collection. </returns>
    </member>
    <member name="F:System.Windows.Media.TransformGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TransformGroup.Children" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TransformGroup.Children" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TransformGroup.Value">
      <summary>Gets the <see cref="T:System.Windows.Media.Matrix" /> structure that describes the transformation represented by this <see cref="T:System.Windows.Media.TransformGroup" />.</summary>
      <returns>A composite of the <see cref="T:System.Windows.Media.Transform" /> objects in this <see cref="T:System.Windows.Media.TransformGroup" />.</returns>
    </member>
    <member name="T:System.Windows.Media.TranslateTransform">
      <summary>Translates (moves) an object in the two-dimensional x-y coordinate system. </summary>
    </member>
    <member name="M:System.Windows.Media.TranslateTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TranslateTransform" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.TranslateTransform.X">
      <summary>Gets or sets the distance to translate along the x-axis.</summary>
      <returns>The distance to translate (move) an object along the x-axis, in pixels. This property is read/write. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.TranslateTransform.XProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TranslateTransform.X" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TranslateTransform.X" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TranslateTransform.Y">
      <summary>Gets or sets the distance to translate (move) an object along the y-axis.</summary>
      <returns>The distance to translate (move) an object along the y-axis, in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.TranslateTransform.YProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TranslateTransform.Y" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TranslateTransform.Y" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Typeface">
      <summary>Represents a combination of the <see cref="T:System.Windows.Media.FontFamily" />, <see cref="T:System.Windows.FontWeight" />, <see cref="T:System.Windows.FontStyle" />, and <see cref="T:System.Windows.FontStretch" /> classes.</summary>
    </member>
    <member name="M:System.Windows.Media.Typeface.TryGetGlyphTypeface(System.Windows.Media.GlyphTypeface@)">
      <summary>Retrieves the <see cref="T:System.Windows.Media.GlyphTypeface" /> that corresponds to the <see cref="T:System.Windows.Media.Typeface" />.</summary>
      <returns>true if the out parameter is set to a <see cref="T:System.Windows.Media.GlyphTypeface" /> object; otherwise, false.</returns>
      <param name="glyphTypeface">A <see cref="T:System.Windows.Media.GlyphTypeface" /> object that corresponds to this typeface, or a null reference (Nothing in Visual Basic) if the typeface was constructed from a composite font.</param>
    </member>
    <member name="T:System.Windows.Media.VideoBrush">
      <summary>Paints an area with video content.</summary>
    </member>
    <member name="M:System.Windows.Media.VideoBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.VideoBrush" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.VideoBrush.SetSource(System.Windows.Controls.MediaElement)">
      <summary>Sets the source of the <see cref="T:System.Windows.Media.VideoBrush" /> using a media file source from an intermediary <see cref="T:System.Windows.Controls.MediaElement" /> control.</summary>
      <param name="source">The intermediary <see cref="T:System.Windows.Controls.MediaElement" /> control used as the source for the <see cref="T:System.Windows.Media.VideoBrush" />.</param>
    </member>
    <member name="M:System.Windows.Media.VideoBrush.SetSource(System.Windows.Media.CaptureSource)">
      <summary>Sets the source of the <see cref="T:System.Windows.Media.VideoBrush" /> using a video capture source </summary>
      <param name="source">A <see cref="T:System.Windows.Media.CaptureSource" /> as obtained from video capture out of a <see cref="T:System.Windows.Media.VideoSink" />.</param>
    </member>
    <member name="P:System.Windows.Media.VideoBrush.SourceName">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.Controls.MediaElement" /> to use as the source of the <see cref="T:System.Windows.Media.VideoBrush" />.</summary>
      <returns>The name of the <see cref="T:System.Windows.Controls.MediaElement" /> to use as the source of the <see cref="T:System.Windows.Media.VideoBrush" />.</returns>
    </member>
    <member name="F:System.Windows.Media.VideoBrush.SourceNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.VideoBrush.SourceName" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.VideoCaptureDevice">
      <summary>Describes desired and supported video format information for a video capture device, such as a webcam.</summary>
    </member>
    <member name="P:System.Windows.Media.VideoCaptureDevice.DesiredFormat">
      <summary>Gets or sets the desired video format to be used by this video capture device.</summary>
      <returns>The desired video format to be used by this video capture device, as a <see cref="T:System.Windows.Media.VideoFormat" /> object. The default is null.On Mac OSX, the <see cref="P:System.Windows.Media.VideoCaptureDevice.SupportedFormats" /> is always empty.  To set the <see cref="P:System.Windows.Media.VideoCaptureDevice.DesiredFormat" />, you can insatiate a new <see cref="T:System.Windows.Media.VideoFormat" /> object with a <see cref="T:System.Windows.Media.PixelFormat" /> of <see cref="F:System.Windows.Media.PixelFormatType.Unknown" />.</returns>
    </member>
    <member name="P:System.Windows.Media.VideoCaptureDevice.SupportedFormats">
      <summary>Gets a generic collection of supported video formats for this video capture device.</summary>
      <returns>A generic collection of <see cref="T:System.Windows.Media.VideoFormat" /> objects that represents the supported video formats for this video capture device.On Mac OSX, the <see cref="P:System.Windows.Media.VideoCaptureDevice.SupportedFormats" /> is always empty.  To set the <see cref="P:System.Windows.Media.VideoCaptureDevice.DesiredFormat" />, you can insatiate a new <see cref="T:System.Windows.Media.VideoFormat" /> object with a <see cref="T:System.Windows.Media.PixelFormat" /> of <see cref="F:System.Windows.Media.PixelFormatType.Unknown" />.</returns>
    </member>
    <member name="T:System.Windows.Media.VideoCaptureDeviceCollection">
      <summary>Specifies a collection of <see cref="T:System.Windows.Media.VideoCaptureDevice" /> objects.</summary>
    </member>
    <member name="T:System.Windows.Media.VideoFormat">
      <summary>Provides specific technical information about a video format that is used by a video capture device.</summary>
    </member>
    <member name="M:System.Windows.Media.VideoFormat.#ctor(System.Windows.Media.PixelFormatType,System.Int32,System.Int32,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.VideoFormat" /> class. </summary>
      <param name="pixelFormat">The initial <see cref="P:System.Windows.Media.VideoFormat.PixelFormat" /> value.</param>
      <param name="width">The initial <see cref="P:System.Windows.Media.VideoFormat.PixelWidth" /> value.</param>
      <param name="height">The initial <see cref="P:System.Windows.Media.VideoFormat.PixelHeight" /> value.</param>
      <param name="framesPerSecond">The initial <see cref="P:System.Windows.Media.VideoFormat.FramesPerSecond" /> value.</param>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.FramesPerSecond">
      <summary>Gets the number of frames per second for the represented video format.</summary>
      <returns>The number of frames per second for the represented video format.</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.PixelFormat">
      <summary>Gets the graphics format information for individual pixels of the video format.</summary>
      <returns>A <see cref="T:System.Windows.Media.PixelFormatType" /> value that reports the format of individual pixels of the video format.</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.PixelHeight">
      <summary>Gets the height of the camera-framing area for the represented video format.</summary>
      <returns>The height, in pixels, of the camera-framing area for the represented video format.</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.PixelWidth">
      <summary>Gets the width of the camera-framing area for the represented video format.</summary>
      <returns>The width, in pixels, of the camera-framing area for the represented video format.</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.Stride">
      <summary>Gets the array stride that is used in the video format.</summary>
      <returns>The array stride that is used in the video format.</returns>
    </member>
    <member name="T:System.Windows.Media.VideoOutputConnector">
      <summary>Provides the actual data about connector types and specifies the output protection schemes in which Silverlight can engage. </summary>
    </member>
    <member name="P:System.Windows.Media.VideoOutputConnector.CanEnableCgmsa">
      <summary>Gets a value that indicates whether this connector supports the Copy Generation Management System—Analog, which is an analog copy management system.</summary>
      <returns>A value that indicates whether this connector supports the Copy Generation Management System—Analog, which is an analog copy management system. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.VideoOutputConnector.CanEnableHdcp">
      <summary>Gets a value that indicates whether this connector can engage the High-Bandwidth Digital Content Protection output protection scheme. </summary>
      <returns>A value that indicates whether this connector can engage the High-Bandwidth Digital Content Protection output protection scheme. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.VideoOutputConnector.ConnectorType">
      <summary>Gets the connector type with which the output device is connected to the graphics card. </summary>
      <returns>The connector type with which the output device is connected to the graphics card. The default value is <see cref="F:System.Windows.Media.VideoOutputConnectorType.Other" />.</returns>
    </member>
    <member name="T:System.Windows.Media.VideoOutputConnectorType">
      <summary>Defines all the output connector types that are typically available.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Other">
      <summary>An unknown connector type.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Vga">
      <summary>Video graphics array (VGA) connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.SVideo">
      <summary>S-Video connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.CompositeVideo">
      <summary>Composite video connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.ComponentVideo">
      <summary>Component video connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Dvi">
      <summary>Digital video interface (DVI) connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Hdmi">
      <summary>High-definition multimedia interface (HDMI) connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Llvds">
      <summary>Low-voltage differential signaling (LVDS) connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Tmds">
      <summary>TMDS connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.JapaneseDConnector">
      <summary>Japanese D connector, a connector that conforms to the Electronic Industries Association of Japan (EIAJ) RC-5237 standard.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Sdi">
      <summary>SDI (serial digital image) connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.DisplayPortExternal">
      <summary>External DisplayPort connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.DisplayPortInternal">
      <summary>Embedded DisplayPort connector.</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.UdiExternal">
      <summary>External Unified Display Interface (UDI).</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.UdiInternal">
      <summary>Embedded Unified Display Interface (UDI).</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Internal">
      <summary>Internal connector. The connection between the graphics adapter and the display device is permanent and not available to the user.</summary>
    </member>
    <member name="T:System.Windows.Media.VideoSink">
      <summary>Exposes the capture graph for video devices. Derive from this class to receive video information and to obtain the capture graph through <see cref="P:System.Windows.Media.VideoSink.CaptureSource" />.</summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.VideoSink" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.VideoSink.CaptureSource">
      <summary>Gets or sets a capture source that is associated with this <see cref="T:System.Windows.Media.VideoSink" />.</summary>
      <returns>A capture source that is associated with this <see cref="T:System.Windows.Media.VideoSink" />.</returns>
    </member>
    <member name="M:System.Windows.Media.VideoSink.Finalize">
      <summary>Frees resources that are used by the <see cref="T:System.Windows.Media.VideoSink" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnCaptureStarted">
      <summary>When overridden in a derived class, is invoked when a video device starts capturing video data. </summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnCaptureStopped">
      <summary>When overridden in a derived class, is invoked when a video device stops capturing video data. </summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnFormatChange(System.Windows.Media.VideoFormat)">
      <summary>When overridden in a derived class, is invoked when a video device reports a video format change. </summary>
      <param name="videoFormat">The new video format.</param>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnSample(System.Int64,System.Int64,System.Byte[])">
      <summary>When overridden in a derived class, is invoked when a video device captures a complete video sample. </summary>
      <param name="sampleTimeInHundredNanoseconds">The time, in 100-nanosecond units, when the sample was captured.</param>
      <param name="frameDurationInHundredNanoseconds">The duration of the sample, in 100-nanosecond units.</param>
      <param name="sampleData">A byte stream that contains video data. The byte stream should be processed into samples according to the relevant video format information.</param>
    </member>
    <member name="T:System.Windows.Media.VisualTreeHelper">
      <summary>Provides utility methods that can used to traverse object relationships (along child object or parent object axes) in the Silverlight visual tree.</summary>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.FindElementsInHostCoordinates(System.Windows.Point,System.Windows.UIElement)">
      <summary>Retrieves a set of objects that are located within a specified point of an object's coordinate space.</summary>
      <returns>An enumerable set of <see cref="T:System.Windows.UIElement" /> objects that are determined to be located in the visual tree composition at the specified point and within the specified subtee.</returns>
      <param name="intersectingPoint">The point to use as the determination point.</param>
      <param name="subtree">The object to search within. </param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.FindElementsInHostCoordinates(System.Windows.Rect,System.Windows.UIElement)">
      <summary>Retrieves a set of objects that are located within a specified <see cref="T:System.Windows.Rect" /> of an object's coordinate space.</summary>
      <returns>An enumerable set of <see cref="T:System.Windows.UIElement" /> objects that are determined to be located in the visual tree composition at the specified point and within the specified subtee.</returns>
      <param name="intersectingRect">The <see cref="T:System.Windows.Rect" /> to use as the determination area.</param>
      <param name="subtree">The object to search within.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
      <summary>Using the provided index, obtains a specific child object of the provided object by examining the visual tree.</summary>
      <returns>The child object as referenced by <paramref name="childIndex" />.</returns>
      <param name="reference">The object that holds the child collection.</param>
      <param name="childIndex">The index of the requested child object in the <paramref name="reference" /> child collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Specified an invalid child index.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="reference" /> is null, or is not a valid <see cref="T:System.Windows.UIElement" />.</exception>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
      <summary>Returns the number of children that exists in an object's child collection in the visual tree.</summary>
      <returns>The number of visual children for the provided source visual.</returns>
      <param name="reference">The source visual.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="reference" /> is null, or is not a valid <see cref="T:System.Windows.UIElement" />.</exception>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetOpenPopups"></member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
      <summary>Returns an object's parent object in the visual tree.</summary>
      <returns>The parent object of the <paramref name="reference" /> object in the visual tree.</returns>
      <param name="reference">The object to get the parent object for.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="reference" /> is null, or is not a valid <see cref="T:System.Windows.UIElement" />.</exception>
    </member>
    <member name="T:System.Windows.Media.WaveFormatType">
      <summary>Reports the digital signal encoding format of an audio format.</summary>
    </member>
    <member name="F:System.Windows.Media.WaveFormatType.Pcm">
      <summary>Audio format uses pulse code modulation (PCM) encoding.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.BackEase">
      <summary>Represents an easing function that retracts the motion of an animation slightly before it begins to animate in the path indicated.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BackEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BackEase" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BackEase.Amplitude">
      <summary>Gets or sets the amplitude of retraction associated with a <see cref="T:System.Windows.Media.Animation.BackEase" /> animation.</summary>
      <returns>The amplitude of retraction associated with a <see cref="T:System.Windows.Media.Animation.BackEase" /> animation. This value must be greater than or equal to 0. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BackEase.AmplitudeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BackEase.Amplitude" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.BackEase.Amplitude" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.BeginStoryboard">
      <summary>A trigger action that begins a <see cref="T:System.Windows.Media.Animation.Storyboard" /> and distributes its animations to their targeted objects and properties.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BeginStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Storyboard" /> that this <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> starts. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Storyboard" /> that the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> starts. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BounceEase">
      <summary>Represents an easing function that creates an animated bouncing effect.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BounceEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BounceEase" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BounceEase.Bounces">
      <summary>Gets or sets the number of bounces.</summary>
      <returns>The number of bounces. The value must be greater or equal to zero. Negative values will resolve to zero. The default is 3. </returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BounceEase.BouncesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BounceEase.Bounces" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BounceEase.Bounciness">
      <summary>Gets or sets a value that specifies how bouncy the bounce animation is. Low values of this property result in bounces with little lose of height between bounces (more bouncy) while high values result in dampened bounces (less bouncy).</summary>
      <returns>The value that specifies how bouncy the bounce animation is. This value must be positive. The default value is 2.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BounceEase.BouncinessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BounceEase.Bounciness" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BounceEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.CircleEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using a circular function.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CircleEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CircleEase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CircleEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.ClockState">
      <summary>Describes the potential states of an animation.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Active">
      <summary>The current animation changes in direct relation to that of its parent.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Filling">
      <summary>The animation continues and does not change in relation to that of its parent.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Stopped">
      <summary>The animation is stopped.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorAnimation">
      <summary>Animates the value of a  <see cref="T:System.Windows.Media.Color" /> property between two target values using linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.By">
      <summary>Gets or sets the total amount by which the animation changes its starting value.</summary>
      <returns>The total amount by which the animation changes its starting value. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.ByProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ColorAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorAnimation.By" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.From">
      <summary>Gets or sets the animation's starting value. </summary>
      <returns>The starting value of the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.FromProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ColorAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorAnimation.From" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.To">
      <summary>Gets or sets the animation's ending value. </summary>
      <returns>The ending value of the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.ToProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ColorAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames">
      <summary>Animates the value of a <see cref="T:System.Windows.Media.Color" /> property along a set of <see cref="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames" /> over a specified <see cref="T:System.Windows.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> objects that define the animation. The default is an empty collection.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorKeyFrame">
      <summary>Provides a base class for specific animation key-frame techniques that define an animation segment with a <see cref="T:System.Windows.Media.Color" /> target value. Derived classes each provide a different key-frame interpolation method for a <see cref="T:System.Windows.Media.Color" /> value that is provided for a <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> animation. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> should be reached. </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> property. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrame.Value">
      <summary>Gets or sets the key frame's target value. </summary>
      <returns>The key frame's target value, which is the value at its specified <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" />. The default is a <see cref="T:System.Windows.Media.Color" /> with an ARGB value of #00000000.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> objects that can be individually accessed by index. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.CubicEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t3.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CubicEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CubicEase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteColorKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Color" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> using discrete values.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteColorKeyFrame" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame">
      <summary>Animates from the <see cref="T:System.Double" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> using discrete values.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame">
      <summary>Animates from the <see cref="T:System.Object" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> using discrete values.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteObjectKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscretePointKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Point" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> using discrete frames.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscretePointKeyFrame" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleAnimation">
      <summary>Animates the value of a  <see cref="T:System.Double" /> property between two target values using linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimation" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.By">
      <summary>Gets or sets the total amount by which the animation changes its starting value.</summary>
      <returns>The total amount by which the animation changes its starting value. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.ByProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.By" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.From">
      <summary>Gets or sets the animation's starting value.</summary>
      <returns>The starting value of the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.FromProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.From" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.To">
      <summary>Gets or sets the animation's ending value.</summary>
      <returns>The ending value of the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.ToProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames">
      <summary>Animates the value of a <see cref="T:System.Double" /> property along a set of <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects that define the animation. The default is an empty collection.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleKeyFrame">
      <summary>An abstract class that defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> should be reached.</summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> property. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrame.Value">
      <summary>Gets or sets the key frame's target value. </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects that can be individually accessed by index. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingColorKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingColorKeyFrame" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function that is applied to the key frame.</summary>
      <returns>The easing function that is applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingDoubleKeyFrame">
      <summary>Defines a property that enables you to associate an easing function with a <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> key-frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingDoubleKeyFrame" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function that is applied to the key frame.</summary>
      <returns>The easing function that is applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingFunctionBase">
      <summary>Provides the base class for all the easing functions. You can create your own custom easing functions by inheriting from this class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingFunctionBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)">
      <summary>Transforms normalized time to control the pace of an animation.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function. </summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode">
      <summary>Gets or sets a value that specifies how the animation interpolates.</summary>
      <returns>One of the enumeration values that specifies how the animation interpolates. The default is <see cref="F:System.Windows.Media.Animation.EasingMode.EaseOut" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingMode">
      <summary>Specifies how the animation associated with an easing function interpolates.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseOut">
      <summary>Interpolation follows 100% interpolation minus the output of the formula associated with the easing function.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseIn">
      <summary>Interpolation follows the mathematical formula associated with the easing function.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseInOut">
      <summary>Interpolation uses <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> for the first half of the animation and <see cref="F:System.Windows.Media.Animation.EasingMode.EaseOut" /> for the second half.    </summary>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingPointKeyFrame">
      <summary>Defines a property that enables you to associate an easing function with a <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> key-frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingPointKeyFrame" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function that is applied to the key frame.</summary>
      <returns>The easing function that is applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ElasticEase">
      <summary>Represents an easing function that creates an animation that resembles a spring oscillating back and forth until it comes to rest.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ElasticEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ElasticEase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ElasticEase.Oscillations">
      <summary>Gets or sets the number of times the target slides back and forth over the animation destination.</summary>
      <returns>The number of times the target slides back and forth over the animation destination. This value must be greater than or equal to 0. The default is 3.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ElasticEase.OscillationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ElasticEase.Springiness">
      <summary>Gets or sets the stiffness of the spring. The smaller the Springiness value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.</summary>
      <returns>A positive number that specifies the stiffness of the spring. The default value is 3.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ElasticEase.SpringinessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ExponentialEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using an exponential formula (see remarks).</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ExponentialEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ExponentialEase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ExponentialEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ExponentialEase.Exponent">
      <summary>Gets or sets the exponent used to determine the interpolation of the animation.</summary>
      <returns>The exponent used to determine the interpolation of the animation. The default is 2.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ExponentialEase.ExponentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ExponentialEase.Exponent" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ExponentialEase.Exponent" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.FillBehavior">
      <summary>Specifies how a <see cref="T:System.Windows.Media.Animation.Timeline" /> behaves when it is outside its active period but its parent is inside its active or hold period. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.FillBehavior.HoldEnd">
      <summary>After it reaches the end of its active period, the timeline holds its progress until the end of its parent's active and hold periods. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.FillBehavior.Stop">
      <summary>The timeline stops if it is outside its active period while its parent is inside its active period.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.IEasingFunction">
      <summary>Defines the basic functionality of an easing function. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.IEasingFunction.Ease(System.Double)">
      <summary>Transforms normalized time to control the pace of an animation.</summary>
      <returns>The transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.KeySpline">
      <summary>This class is used by a spline key frame to define animation progress. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.KeySpline" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.KeySpline.ControlPoint1">
      <summary>Gets or sets the first control point used to define a Bezier curve that describes a <see cref="T:System.Windows.Media.Animation.KeySpline" />.</summary>
      <returns>The first control point used to define a Bezier curve that describes a <see cref="T:System.Windows.Media.Animation.KeySpline" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeySpline.ControlPoint2">
      <summary>Gets or sets the second control point used to define a Bezier curve that describes a <see cref="T:System.Windows.Media.Animation.KeySpline" />.</summary>
      <returns>The second control point used to define a Bezier curve that describes a <see cref="T:System.Windows.Media.Animation.KeySpline" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.KeyTime">
      <summary>Specifies when a particular key frame should take place during an animation. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Object)">
      <summary>Indicates whether a <see cref="T:System.Windows.Media.Animation.KeyTime" /> is equal to this <see cref="T:System.Windows.Media.Animation.KeyTime" />.</summary>
      <returns>true if <paramref name="value" /> is a <see cref="T:System.Windows.Media.Animation.KeyTime" /> that represents the same length of time as this <see cref="T:System.Windows.Media.Animation.KeyTime" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Animation.KeyTime" /> to compare with this <see cref="T:System.Windows.Media.Animation.KeyTime" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Windows.Media.Animation.KeyTime)">
      <summary>Indicates whether a specified <see cref="T:System.Windows.Media.Animation.KeyTime" /> is equal to this <see cref="T:System.Windows.Media.Animation.KeyTime" />.</summary>
      <returns>true if <paramref name="value" /> is equal to this <see cref="T:System.Windows.Media.Animation.KeyTime" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Animation.KeyTime" />  to compare with this <see cref="T:System.Windows.Media.Animation.KeyTime" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
      <summary>Indicates whether two <see cref="T:System.Windows.Media.Animation.KeyTime" /> values are equal.</summary>
      <returns>true if the values of <paramref name="keyTime1" /> and <paramref name="keyTime2" /> are equal; otherwise, false.</returns>
      <param name="keyTime1">The first value to compare.</param>
      <param name="keyTime2">The second value to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.FromTimeSpan(System.TimeSpan)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Animation.KeyTime" />, using the supplied <see cref="T:System.TimeSpan" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.KeyTime" />, initialized to the value of <paramref name="timeSpan" />.</returns>
      <param name="timeSpan">The value of the new <see cref="T:System.Windows.Media.Animation.KeyTime" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="timeSpan" /> is outside the allowed range.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.GetHashCode">
      <summary>Returns a hash code representing this <see cref="T:System.Windows.Media.Animation.KeyTime" />.</summary>
      <returns>A hash code identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Equality(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
      <summary>Compares two <see cref="T:System.Windows.Media.Animation.KeyTime" /> values for equality.</summary>
      <returns>true if <paramref name="keyTime1" /> and <paramref name="keyTime2" /> are equal; otherwise, false.</returns>
      <param name="keyTime1">The first value to compare.</param>
      <param name="keyTime2">The second value to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Implicit(System.TimeSpan)~System.Windows.Media.Animation.KeyTime">
      <summary>Implicitly converts a <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> to a <see cref="T:System.Windows.Media.Animation.KeyTime" />.</summary>
      <returns>The created <see cref="T:System.Windows.Media.Animation.KeyTime" />.</returns>
      <param name="timeSpan">The <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> value to convert.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Inequality(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
      <summary>Compares two <see cref="T:System.Windows.Media.Animation.KeyTime" /> values for inequality.</summary>
      <returns>true if <paramref name="keyTime1" /> and <paramref name="keyTime2" /> are not equal; otherwise, false. </returns>
      <param name="keyTime1">The first value to compare.</param>
      <param name="keyTime2">The second value to compare.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.TimeSpan">
      <summary>Gets the time when the key frame ends, expressed as a time relative to the beginning of the animation.</summary>
      <returns>A <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> value.</returns>
      <exception cref="T:System.InvalidOperationException">If this instance is not of type <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.ToString">
      <summary>Returns a string representation of this <see cref="T:System.Windows.Media.Animation.KeyTime" />. </summary>
      <returns>A string representation of this <see cref="T:System.Windows.Media.Animation.KeyTime" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.Type">
      <summary>Gets the <see cref="T:System.Windows.Media.Animation.KeyTimeType" /> value this instance represents. </summary>
      <returns>One of the enumeration values.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.Uniform">
      <summary>Gets the <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" /> value which divides the allotted time of the animation evenly between key frames.</summary>
      <returns>A <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" /> value.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.KeyTimeType">
      <summary>Represents the different types that may represent a <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.KeyTimeType.Uniform">
      <summary>The allotted total time for an animation sequence is divided evenly amongst each of the key frames.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.KeyTimeType.TimeSpan">
      <summary>Each <see cref="T:System.Windows.Media.Animation.KeyTime" /> is expressed as a <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> value relative to the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> of an animation sequence. </summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearColorKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Color" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearColorKeyFrame" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearDoubleKeyFrame">
      <summary>Animates from the <see cref="T:System.Double" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> using linear interpolation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearDoubleKeyFrame" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearPointKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Point" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> using linear interpolation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearPointKeyFrame" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames">
      <summary>Animates the value of an <see cref="T:System.Object" /> property along a set of <see cref="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames" /> over a specified <see cref="T:System.Windows.Duration" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> objects that define the animation. The default is an empty collection.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectKeyFrame">
      <summary>Defines an animation segment with its own target value and interpolation method for an <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> should be reached. </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> property. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ObjectKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.Value">
      <summary>Gets or sets the key frame's target value. </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ObjectKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimation">
      <summary>Animates the value of a <see cref="T:System.Windows.Point" /> property between two target values using linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.By">
      <summary>Gets or sets the total amount by which the animation changes its starting value.</summary>
      <returns>The total amount by which the animation changes its starting value.  The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.ByProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.By" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.EasingFunction">
      <summary>Gets or sets the easing function you are applying to the animation.</summary>
      <returns>The easing function you are applying to the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.From">
      <summary>Gets or sets the animation's starting value.</summary>
      <returns>The starting value of the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.FromProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.From" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.To">
      <summary>Gets or sets the animation's ending value.</summary>
      <returns>The ending value of the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.ToProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames">
      <summary>Animates the value of a <see cref="T:System.Windows.Point" /> property along a set of <see cref="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects that define the animation. The default is an empty collection.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointKeyFrame">
      <summary>Defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> should be reached. </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> property. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.</summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects that can be individually accessed by index. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PowerEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = tp where p is equal to the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> property.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PowerEase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PowerEase.Power">
      <summary>Gets or sets the exponential power of the animation interpolation. For example, a value of 7 creates an animation interpolation curve that follows the formula f(t) = t7.</summary>
      <returns>The exponential power of the animation interpolation. This value must be greater or equal to 0. The default is 2.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PowerEase.PowerProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.QuadraticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t2</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuadraticEase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuarticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t4.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuarticEase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuinticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t5.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuinticEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuinticEase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuinticEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.RepeatBehavior">
      <summary>Describes how a <see cref="T:System.Windows.Media.Animation.Timeline" /> repeats its simple duration.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> structure with the specified iteration count. </summary>
      <param name="count">A number greater than or equal to 0 that specifies the number of iterations for an animation. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> evaluates to infinity, a value that is not a number, or is negative.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> structure with the specified repeat duration. </summary>
      <param name="duration">The total length of time that the <see cref="T:System.Windows.Media.Animation.Timeline" /> should play (its active duration). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="duration" /> evaluates to a negative number.</exception>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Count">
      <summary>Gets the number of times a <see cref="T:System.Windows.Media.Animation.Timeline" /> should repeat. </summary>
      <returns>The number of iterations to repeat.</returns>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> describes a repeat duration, not an iteration count.</exception>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Duration">
      <summary>Gets the total length of time a <see cref="T:System.Windows.Media.Animation.Timeline" /> should play. </summary>
      <returns>The total length of time a timeline should play. </returns>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> describes an iteration count, not a repeat duration.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)">
      <summary>Indicates whether the specified object is equal to this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />. </summary>
      <returns>true if <paramref name="value" /> is a <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> that represents the same repeat behavior as this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />; otherwise, false.</returns>
      <param name="value">The object to compare with this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> is equal to this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />. </summary>
      <returns>true if both the type and repeat behavior of <paramref name="repeatBehavior" /> are equal to this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />; otherwise, false.</returns>
      <param name="repeatBehavior">The value to compare to this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Indicates whether the two specified <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> values are equal. </summary>
      <returns>true if both the type and repeat behavior of <paramref name="repeatBehavior1" /> are equal to that of <paramref name="repeatBehavior2" />; otherwise, false.</returns>
      <param name="repeatBehavior1">The first value to compare.</param>
      <param name="repeatBehavior2">The second value to compare.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Forever">
      <summary>Gets a <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> that specifies an infinite number of repetitions.  </summary>
      <returns>A <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> that specifies an infinite number of repetitions.   </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.GetHashCode">
      <summary>Returns the hash code of this instance.</summary>
      <returns>A hash code.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.HasCount">
      <summary>Gets a value that indicates whether the repeat behavior has a specified iteration count.</summary>
      <returns>true if the instance represents an iteration count; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.HasDuration">
      <summary>Gets a value that indicates whether the repeat behavior has a specified repeat duration. </summary>
      <returns>true if the instance represents a repeat duration; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Indicates whether the two specified <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> values are equal. </summary>
      <returns>true if both the type and repeat behavior of <paramref name="repeatBehavior1" /> are equal to that of <paramref name="repeatBehavior2" />; otherwise, false.</returns>
      <param name="repeatBehavior1">The first value to compare.</param>
      <param name="repeatBehavior2">The second value to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Indicates whether the two <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> values are not equal. </summary>
      <returns>true if <paramref name="repeatBehavior1" /> and <paramref name="repeatBehavior2" /> are different types or the repeat behavior properties are not equal; otherwise, false.</returns>
      <param name="repeatBehavior1">The first value to compare.</param>
      <param name="repeatBehavior2">The second value to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A string containing the value of the current instance in the specified format.</returns>
      <param name="format">The string specifying the format to use, or null to use the default format defined for the type of the IFormattable implementation. </param>
      <param name="formatProvider">The IFormatProvider to use to format the value, or null to obtain the numeric format information from the current locale setting of the operating system. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.ToString">
      <summary>Returns a string representation of this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />. </summary>
      <returns>A string representation of this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.ToString(System.IFormatProvider)">
      <summary>Returns a string representation of this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> with the specified format. </summary>
      <returns>A string representation of this <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />.</returns>
      <param name="formatProvider">The format used to construct the return value.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.SineEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using a sine formula (see remarks).</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SineEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SineEase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SineEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineColorKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Color" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> using splined interpolation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineColorKeyFrame" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame. </summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineColorKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineDoubleKeyFrame">
      <summary>Animates from the <see cref="T:System.Double" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineDoubleKeyFrame" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.</summary>
      <returns>The two control points that specify the cubic Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplinePointKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Point" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> using splined interpolation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplinePointKeyFrame" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame. </summary>
      <returns>The two control points that specify the cubic Bezier curve that defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplinePointKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Storyboard">
      <summary>Controls animations with a timeline, and provides object and property targeting information for its child animations. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin">
      <summary>Initiates the set of animations associated with the storyboard.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.Children">
      <summary>Gets the collection of child <see cref="T:System.Windows.Media.Animation.Timeline" /> objects.</summary>
      <returns>The collection of child <see cref="T:System.Windows.Media.Animation.Timeline" /> objects. The default is an empty collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
      <summary>Gets the clock state of the storyboard.</summary>
      <returns>One of the enumeration values: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
      <summary>Gets the current time of the storyboard.</summary>
      <returns>The current time of the storyboard, or null if the storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.Media.Animation.Timeline)">
      <summary>Gets the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> of the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> object.</summary>
      <returns>The string name of the target object.</returns>
      <param name="element">The <see cref="T:System.Windows.Media.Animation.Timeline" /> object to get the target name from.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.Media.Animation.Timeline)">
      <summary>Gets the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> of the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> object. </summary>
      <returns>The property path information for the animated property.</returns>
      <param name="element">The <see cref="T:System.Windows.Media.Animation.Timeline" /> object to get the target property from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause">
      <summary>Pauses the animation clock associated with the storyboard. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume">
      <summary>Resumes the animation clock, or run-time state, associated with the storyboard. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
      <summary>Moves the storyboard to the specified animation position. The storyboard performs the requested seek when the next clock tick occurs. </summary>
      <param name="offset">A positive or negative time value that describes the amount by which the timeline should move forward or backward from the beginning of the animation. By using the <see cref="T:System.TimeSpan" /> Parse behavior, a <see cref="T:System.TimeSpan" /> can be specified as a string in the following format (in this syntax, the [] characters denote optional components of the string, but the quotes, colons, and periods are all a literal part of the syntax):"[days.]hours:minutes:seconds[.fractionalSeconds]"- or -"days"</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
      <summary>Moves the storyboard to the specified animation position immediately (synchronously). </summary>
      <param name="offset">A positive or negative time value that describes the amount by which the timeline should move forward or backward from the beginning of the animation. By using the <see cref="T:System.TimeSpan" /> Parse behavior, a <see cref="T:System.TimeSpan" /> can be specified as a string in the following format (in this syntax, the [] characters denote optional components of the string, but the quotes, colons, and periods are all a literal part of the syntax):"[days.]hours:minutes:seconds[.fractionalSeconds]"- or -"days"</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.Media.Animation.Timeline,System.Windows.DependencyObject)">
      <summary>Causes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> to target the specified object.</summary>
      <param name="timeline">The timeline that targets the specified dependency object.</param>
      <param name="target">The actual instance of the object to target.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the parameters is null.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.Media.Animation.Timeline,System.String)">
      <summary>Causes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> to target the object with the specified name.</summary>
      <param name="element">The timeline that targets the specified dependency object.</param>
      <param name="name">The name of the object to target.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.Media.Animation.Timeline,System.Windows.PropertyPath)">
      <summary>Causes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> to target the specified dependency property.</summary>
      <param name="element">The timeline with which to associate the specified dependency property.</param>
      <param name="path">A path that describe the dependency property to be animated.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the parameters is null.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
      <summary>Advances the current time of the storyboard's clock to the end of its active period.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop">
      <summary>Stops the storyboard.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetName">
      <summary>Gets or sets the name of the object to animate.</summary>
      <returns>The name of the object to animate.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetProperty">
      <summary>Gets or sets the name of the property that should be animated. </summary>
      <returns>The property to animate.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Timeline">
      <summary>Defines a segment of time. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.AutoReverse">
      <summary>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.</summary>
      <returns>true if the timeline plays in reverse at the end of each iteration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.BeginTime">
      <summary>Gets or sets the time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin. </summary>
      <returns>The start time of the time line. The default value is zero.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Media.Animation.Timeline.Completed">
      <summary>Occurs when the <see cref="T:System.Windows.Media.Animation.Storyboard" /> object has completed playing. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.Duration">
      <summary>Gets or sets the length of time for which this timeline plays, not counting repetitions.</summary>
      <returns>The timeline's simple duration: the amount of time this timeline takes to complete a single forward iteration. The default value is <see cref="P:System.Windows.Duration.Automatic" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.DurationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.FillBehavior">
      <summary>Gets or sets a value that specifies how the animation behaves after it reaches the end of its active period.</summary>
      <returns>A value that specifies how the timeline behaves after it reaches the end of its active period but its parent is inside its active or fill period. The default value is <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.RepeatBehavior">
      <summary>Gets or sets the repeating behavior of this timeline. </summary>
      <returns>An iteration <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> that specifies the number of times the timeline should play, a <see cref="T:System.TimeSpan" /> value that specifies the total length of this timeline's active period, or the special value <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />, which specifies that the timeline should repeat indefinitely. The default value is a <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> with a <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> of 1, which indicates that the timeline plays once.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.SpeedRatio">
      <summary>Gets or sets the rate, relative to its parent, at which time progresses for this <see cref="T:System.Windows.Media.Animation.Timeline" />. </summary>
      <returns>A finite value greater than 0 that specifies the rate at which time progresses for this timeline, relative to the speed of the timeline's parent. If this timeline is a root timeline, specifies the default timeline speed. The value is expressed as a factor where 1 represents normal speed, 2 is double speed, 0.5 is half speed, and so on. The default value is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty">
      <summary>Identifies for the <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.TimelineCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.Timeline" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Effects.BlurEffect">
      <summary>Represents an effect that you can apply to an object that simulates looking at the object through an out-of-focus lens.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BlurEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.BlurEffect" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.BlurEffect.Radius">
      <summary>Gets or sets the amount of blurring applied by the <see cref="T:System.Windows.Media.Effects.BlurEffect" />.</summary>
      <returns>The radius used in the blur, as a pixel-based factor. The default is 5.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BlurEffect.RadiusProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.BlurEffect.Radius" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.BlurEffect.Radius" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.DropShadowEffect">
      <summary>Applies a shadow behind a visual object at a slight offset. The offset is determined by mimicking a casting shadow from an imaginary light source.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.DropShadowEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.DropShadowEffect" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius">
      <summary>Gets or sets how defined the edges of the shadow are (how blurry the shadow is).</summary>
      <returns>How blurry the shadow is. The default is 5.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.BlurRadiusProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.Color">
      <summary>Gets or sets the color of the shadow.</summary>
      <returns>The color of the shadow. The default is a color with ARGB value of FF000000 (black).</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.ColorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Color" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Color" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.Direction">
      <summary>Gets or sets the angle at which the shadow is cast.</summary>
      <returns>The angle at which the shadow is cast, where 0 is immediately to the right of the object and positive values move the shadow counterclockwise. The default is 315.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.DirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Direction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Direction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.Opacity">
      <summary>Gets or sets the degree of opacity of the shadow.</summary>
      <returns>The degree of opacity. The valid range of values is from 0 through 1, where 0 is completely transparent and 1 is completely opaque. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.OpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Opacity" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Opacity" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth">
      <summary>Gets or sets the distance between the object and the shadow that it casts.</summary>
      <returns>The distance between the plane of the object casting the shadow and the shadow plane measured in devicepixels. The valid range of values is from 0 through 300. The default is 5.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.ShadowDepthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.Effect">
      <summary>Provides a base class for all bitmap effects.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.Effect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.Effect" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.Effect.EffectMapping">
      <summary>When overridden in a derived class, transforms mouse input and coordinate systems through the effect.</summary>
      <returns>The transform to apply. The default is the identity transform.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.Effect.ImplicitInput">
      <summary>Gets a <see cref="T:System.Windows.Media.Brush" /> that, when it is used as an input for an <see cref="T:System.Windows.Media.Effects.Effect" />, causes the bitmap of the <see cref="T:System.Windows.UIElement" /> that the <see cref="T:System.Windows.Media.Effects.Effect" /> is applied to be that input. </summary>
      <returns>The <see cref="T:System.Windows.Media.Brush" /> that acts as the input.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.PixelShader">
      <summary>Provides a managed wrapper around a High Level Shading Language (HLSL) pixel shader.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.PixelShader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.PixelShader" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.PixelShader.UriSource">
      <summary>Gets or sets a URI reference to HLSL bytecode in the assembly.</summary>
      <returns>The URI reference to HLSL bytecode in the assembly.</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.PixelShader.UriSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.PixelShader.UriSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.PixelShader.UriSource" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.SamplingMode">
      <summary>Specifies how  dependency properties with <see cref="T:System.Windows.Media.Brush" /> values are sampled in a custom shader effect.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.Auto">
      <summary>The system selects the most appropriate sampling mode.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.NearestNeighbor">
      <summary>Use nearest neighbor sampling.</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.Bilinear">
      <summary>Use bilinear sampling.</summary>
    </member>
    <member name="T:System.Windows.Media.Effects.ShaderEffect">
      <summary>Provides a custom bitmap effect by using a <see cref="T:System.Windows.Media.Effects.PixelShader" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex">
      <summary>Gets or sets a value that indicates the shader register to use for the partial derivatives of the texture coordinates with respect to screen space.</summary>
      <returns>The index of the register that contains the partial derivatives. </returns>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingBottom">
      <summary>Gets or sets the amount by which the effect's output texture is larger than its input texture along the bottom edge of the effect.</summary>
      <returns>The padding along the bottom edge of the effect.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingLeft">
      <summary>Gets or sets the amount by which the effect's output texture is larger than its input texture along the left edge.</summary>
      <returns>The padding along the left edge of the effect.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingRight">
      <summary>Gets or sets the amount by which the effect's output texture is larger than its input texture along the right edge.</summary>
      <returns>The padding along the right edge of the effect.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingTop">
      <summary>Gets or sets the amount by which the effect's output texture is larger than its input texture along the top edge.</summary>
      <returns>The padding along the top edge of the effect.</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PixelShader">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Effects.PixelShader" /> to use for the effect.</summary>
      <returns>The <see cref="T:System.Windows.Media.Effects.PixelShader" /> for the effect.</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)">
      <summary>Associates a dependency property value with a pixel shader's float constant register.</summary>
      <returns>A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader constant register specified by <paramref name="register" />.</returns>
      <param name="register">The index of the shader register associated with the dependency property.</param>
    </member>
    <member name="F:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" /> dependency property. </returns>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)">
      <summary>Associates a dependency property value with a pixel shader's sampler register.</summary>
      <returns>A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader sampler register specified by <paramref name="register" />.</returns>
      <param name="register">The index of the shader sampler associated with the dependency property.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)">
      <summary>Associates a dependency property value with a pixel shader's sampler register and a <see cref="T:System.Windows.Media.Effects.SamplingMode" />.</summary>
      <returns>A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader sampler register specified by <paramref name="register" />.</returns>
      <param name="register">The index of the shader sampler associated with the dependency property.</param>
      <param name="samplingMode">The <see cref="T:System.Windows.Media.Effects.SamplingMode" /> for the shader sampler.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)">
      <summary>Associates a dependency property with a shader sampler register.</summary>
      <returns>A dependency property associated with the shader sampler specified by <paramref name="samplerRegisterIndex" />.</returns>
      <param name="dpName">The name of the dependency property.</param>
      <param name="ownerType">The type of the effect that has the dependency property.</param>
      <param name="samplerRegisterIndex">The index of the shader sampler associated with the dependency property.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)">
      <summary>Associates a dependency property with a shader sampler register and a sampling mode.</summary>
      <returns>A dependency property associated with the shader sampler specified by <paramref name="samplerRegisterIndex" />. </returns>
      <param name="dpName">The name of the dependency property.</param>
      <param name="ownerType">The type of the effect that has the dependency property.</param>
      <param name="samplerRegisterIndex">The index of the shader sampler associated with the dependency property.</param>
      <param name="samplingMode">One of the enumeration values that specifies the sampling mode for the shader.</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)">
      <summary>Notifies the effect that the shader constant or sampler corresponding to the specified dependency property should be updated.</summary>
      <param name="dp">The dependency property to be updated.</param>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapCreateOptions">
      <summary>Specifies initialization options for a bitmap image.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.None">
      <summary>No options are specified. This is the NOT the default value for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions" /> property in Silverlight (<see cref="F:System.Windows.Media.Imaging.BitmapCreateOptions.DelayCreation" /> is the default).</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.DelayCreation">
      <summary>Causes a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> object to delay initialization until it is necessary. This is useful when dealing with collections of images. This is the default value of the <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions" /> property in Silverlight.</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.IgnoreImageCache">
      <summary>Loads images without using an existing image cache. This option should only be selected when images in a cache need to be refreshed.</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapImage">
      <summary>Provides the practical object source type for the <see cref="P:System.Windows.Controls.Image.Source" /> and <see cref="P:System.Windows.Media.ImageBrush.ImageSource" /> properties.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> class, using the supplied URI. </summary>
      <param name="uriSource">The URI that references the source graphics file for the image.</param>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> for a <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> used for this <see cref="T:System.Windows.Media.Imaging.BitmapImage" />. The default is <see cref="F:System.Windows.Media.Imaging.BitmapCreateOptions.None" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapImage.DownloadProgress">
      <summary>Occurs when a significant change has occurred in the download progress of the <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> content.</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapImage.ImageFailed">
      <summary>Occurs when there is an error associated with image retrieval or format.</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapImage.ImageOpened">
      <summary>Occurs when the image source is downloaded and decoded with no failure. You can use this event to determine the size of an image before rendering it.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.UriSource">
      <summary>Gets or sets the URI of the graphics source file that generated this <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.</summary>
      <returns>The URI of the graphics source file that generated this <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.UriSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapImage.UriSource" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapSource">
      <summary>Provides a source object for properties that use a bitmap.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight">
      <summary>Gets the height of the bitmap in pixels.</summary>
      <returns>The height of the bitmap in pixels.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapSource.PixelHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth">
      <summary>Gets the width of the bitmap in pixels.</summary>
      <returns>The width of the bitmap in pixels.</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapSource.PixelWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.SetSource(System.IO.Stream)">
      <summary>Sets the source of the <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
      <param name="streamSource">The stream to set the source to.</param>
    </member>
    <member name="T:System.Windows.Media.Imaging.DownloadProgressEventArgs">
      <summary>Provides event data for the <see cref="E:System.Windows.Media.Imaging.BitmapImage.DownloadProgress" /> event.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.DownloadProgressEventArgs.Progress">
      <summary>Gets download progress as a value that is between 0 and 100.</summary>
      <returns>The download progress. A value of 0 indicates no progress; 100 indicates the download is complete. </returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.WriteableBitmap">
      <summary>Provides a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that can be written to and updated.</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> class using the provided dimensions.</summary>
      <param name="pixelWidth">The width of the bitmap.</param>
      <param name="pixelHeight">The height of the bitmap.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pixelWidth" /> or <paramref name="pixelHeight" /> is zero or less.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> class using the provided <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> to use for initialization. </param>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.UIElement,System.Windows.Media.Transform)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> class using the provided element and transform.</summary>
      <param name="element">The desired element to be rendered within the bitmap. </param>
      <param name="transform">The transform the user wants to apply to the element as the last step before drawing into the bitmap. This is particularly interesting for you if you want the bitmap to respect its transform. This value can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The element size is invalid. This happens when the pixel width or pixel height is not greater than zero.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.Invalidate">
      <summary>Requests a draw or redraw of the entire bitmap.</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.WriteableBitmap.Pixels">
      <summary>Gets an array representing the 2-D texture of the bitmap.</summary>
      <returns>An array of integers representing the 2-D texture of the bitmap.</returns>
      <exception cref="T:System.Security.SecurityException">The <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> is created from protected content. The <see cref="P:System.Windows.Media.Imaging.WriteableBitmap.Pixels" /> array is inaccessible in this case.</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.Render(System.Windows.UIElement,System.Windows.Media.Transform)">
      <summary>Renders an element within the bitmap.</summary>
      <param name="element">The element to be rendered within the bitmap.</param>
      <param name="transform">The transform to apply to the element before drawing into the bitmap. If an empty transform is supplied, the bits representing the element show up at the same offset as if they were placed within their parent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Media.Media3D.Matrix3D">
      <summary>Represents a 4 × 4 matrix that is used for transformations in a three-dimensional (3-D) space.</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> class. </summary>
      <param name="m11">The value of the (1,1) field of the new matrix.</param>
      <param name="m12">The value of the (1,2) field of the new matrix.</param>
      <param name="m13">The value of the (1,3) field of the new matrix.</param>
      <param name="m14">The value of the (1,4) field of the new matrix.</param>
      <param name="m21">The value of the (2,1) field of the new matrix.</param>
      <param name="m22">The value of the (2,2) field of the new matrix.</param>
      <param name="m23">The value of the (2,3) field of the new matrix.</param>
      <param name="m24">The value of the (2,4) field of the new matrix.</param>
      <param name="m31">The value of the (3,1) field of the new matrix.</param>
      <param name="m32">The value of the (3,2) field of the new matrix.</param>
      <param name="m33">The value of the (3,3) field of the new matrix.</param>
      <param name="m34">The value of the (3,4) field of the new matrix.</param>
      <param name="offsetX">The value of the X offset field of the new matrix.</param>
      <param name="offsetY">The value of the Y offset field of the new matrix.</param>
      <param name="offsetZ">The value of the Z offset field of the new matrix.</param>
      <param name="m44">The value of the (4,4) field of the new matrix.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Equals(System.Object)">
      <summary>Tests equality between two matrices.</summary>
      <returns>true if the matrices are equal; otherwise, false.</returns>
      <param name="o">The object to test for equality.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Equals(System.Windows.Media.Media3D.Matrix3D)">
      <summary>Tests equality between two matrices.</summary>
      <returns>true if the matrices are equal; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> to compare to.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.GetHashCode">
      <summary>Returns the hash code for this matrix.</summary>
      <returns>An integer that specifies the hash code for this matrix.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.HasInverse">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> is invertible.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> has an inverse; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.Identity">
      <summary>Changes a <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure into an identity <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The identity <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Invert">
      <summary>Inverts this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</summary>
      <exception cref="T:System.InvalidOperationException">The matrix is not invertible.</exception>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.IsIdentity">
      <summary>Determines whether this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure is an identity <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> is an identity <see cref="T:System.Windows.Media.Media3D.Matrix3D" />; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M11">
      <summary>Gets or sets the value of the first row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the first row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M12">
      <summary>Gets or sets the value of the first row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the first row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M13">
      <summary>Gets or sets the value of the first row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the first row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M14">
      <summary>Gets or sets the value of the first row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the first row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M21">
      <summary>Gets or sets the value of the second row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the second row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M22">
      <summary>Gets or sets the value of the second row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the second row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M23">
      <summary>Gets or sets the value of the second row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the second row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M24">
      <summary>Gets or sets the value of the second row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the second row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M31">
      <summary>Gets or sets the value of the third row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the third row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M32">
      <summary>Gets or sets the value of the third row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the third row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M33">
      <summary>Gets or sets the value of the third row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the third row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M34">
      <summary>Gets or sets the value of the third row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the third row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M44">
      <summary>Gets or sets the value of the fourth row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the fourth row and fourth column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetX">
      <summary>Gets or sets the value of the fourth row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the fourth row and first column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetY">
      <summary>Gets or sets the value of the fourth row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the fourth row and second column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetZ">
      <summary>Gets or sets the value of the fourth row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The value of the fourth row and third column of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Equality(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> instances for exact equality.</summary>
      <returns>true if the matrices are equal; otherwise, false.</returns>
      <param name="matrix1">The first matrix to compare.</param>
      <param name="matrix2">The second matrix to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Inequality(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> instances for inequality.</summary>
      <returns>true if the matrices are different; otherwise, false.</returns>
      <param name="matrix1">The first matrix to compare.</param>
      <param name="matrix2">The second matrix to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Multiply(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>Multiplies the specified matrices.</summary>
      <returns>The <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> that is the result of multiplication.</returns>
      <param name="matrix1">The matrix to multiply.</param>
      <param name="matrix2">The matrix by which the first matrix is multiplied.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString" />.</summary>
      <returns>The value of the current instance in the specified format.</returns>
      <param name="format">The format to use.</param>
      <param name="provider">The provider to use.</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ToString">
      <summary>Creates a string representation of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>A string representation of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</summary>
      <returns>The string representation of this <see cref="T:System.Windows.Media.Media3D.Matrix3D" />.</returns>
      <param name="provider">Culture-specified formatting information.</param>
    </member>
    <member name="T:System.Windows.Messaging.ListenFailedException">
      <summary>Represents an exception that occurs when a <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> cannot be registered. </summary>
    </member>
    <member name="T:System.Windows.Messaging.LocalMessageReceiver">
      <summary>Represents the receiving end of a local messaging channel between two Silverlight-based applications. </summary>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageReceiver.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> class and configures it with the specified name.</summary>
      <param name="receiverName">The name of the receiver.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="receiverName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="receiverName" /> is longer than 256 characters.</exception>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageReceiver.#ctor(System.String,System.Windows.Messaging.ReceiverNameScope,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> class and configures it with the specified name, namescope requirement, and allowed sender domains.</summary>
      <param name="receiverName">The name of the receiver, which must be unique either within the global namescope or the receiver's domain, depending on the value of the <paramref name="nameScope" /> parameter. </param>
      <param name="nameScope">A value that indicates whether the <paramref name="receiverName" /> is scoped to the global namescope or to the receiver's specific domain. </param>
      <param name="allowedSenderDomains">The domains that the receiver can receive messages from, or <see cref="F:System.Windows.Messaging.LocalMessageReceiver.AnyDomain" /> to receive from any domain.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="receiverName" /> is null.-or-<paramref name="allowedSenderDomains" /> is null.-or-<paramref name="allowedSenderDomains" /> contains one or more null entries.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="receiverName" /> is longer than 256 characters.-or-<paramref name="allowedSenderDomains" /> contains one or more entries longer than 256 characters.-or-<paramref name="allowedSenderDomains" /> contains one or more entries with invalid characters ("," and ":").</exception>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageReceiver.AllowedSenderDomains">
      <summary>Gets the domains that the receiver can receive messages from.</summary>
      <returns>The domains that the receiver can receive messages from, or <see cref="F:System.Windows.Messaging.LocalMessageReceiver.AnyDomain" /> if the receiver can receive messages from any domain.</returns>
    </member>
    <member name="F:System.Windows.Messaging.LocalMessageReceiver.AnyDomain">
      <summary>A value that represents any domain.</summary>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageReceiver.DisableSenderTrustCheck">
      <summary>Gets or sets a value that indicates whether the receiver can receive messages from a sender with a different Protected Mode setting. </summary>
      <returns>true if the receiver can receive messages regardless of the sender's Protected Mode setting; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">When setting this property, the <see cref="M:System.Windows.Messaging.LocalMessageReceiver.Listen" /> method has already been called.</exception>
      <exception cref="T:System.ObjectDisposedException">When setting this property, the <see cref="M:System.Windows.Messaging.LocalMessageReceiver.Dispose" /> method has already been called.</exception>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageReceiver.Dispose">
      <summary>Stops the receiver from receiving messages and releases all resources used by the receiver. </summary>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageReceiver.Listen">
      <summary>Starts listening for messages from a <see cref="T:System.Windows.Messaging.LocalMessageSender" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Windows.Messaging.LocalMessageReceiver.Listen" /> method has already been called.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="M:System.Windows.Messaging.LocalMessageReceiver.Dispose" /> method has already been called.</exception>
      <exception cref="T:System.Windows.Messaging.ListenFailedException">There is already a receiver registered with the same name and name scope.</exception>
    </member>
    <member name="E:System.Windows.Messaging.LocalMessageReceiver.MessageReceived">
      <summary>Occurs when a message is received from a <see cref="T:System.Windows.Messaging.LocalMessageSender" />.</summary>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageReceiver.NameScope">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName" /> is scoped to the global namescope or to the receiver's specific domain. </summary>
      <returns>A value that indicates whether the <see cref="P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName" /> is scoped to the global namescope or to the receiver's specific domain. </returns>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName">
      <summary>Gets the name of the receiver. </summary>
      <returns>The name of the receiver. </returns>
    </member>
    <member name="T:System.Windows.Messaging.LocalMessageSender">
      <summary>Represents the sending end of a local messaging channel between two Silverlight-based applications.</summary>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageSender.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Messaging.LocalMessageSender" /> class and configures it to send messages to the receiver with the specified name.</summary>
      <param name="receiverName">The <see cref="P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName" /> property value of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that this sender will send messages to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="receiverName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="receiverName" /> is longer than 256 characters.</exception>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageSender.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Messaging.LocalMessageSender" /> class and configures it to send messages to the receiver with the specified name and domain. </summary>
      <param name="receiverName">The <see cref="P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName" /> property value of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that this sender will send messages to.</param>
      <param name="receiverDomain">The domain of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that this sender will send messages to, or <see cref="F:System.Windows.Messaging.LocalMessageSender.Global" /> if the receiver is not scoped to a domain.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="receiverName" /> is null.-or-<paramref name="receiverDomain" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="receiverName" /> is longer than 256 characters.-or-<paramref name="receiverDomain" /> is longer than 256 characters.-or-<paramref name="receiverDomain" /> contains one or more invalid characters ("," and ":").</exception>
    </member>
    <member name="F:System.Windows.Messaging.LocalMessageSender.Global">
      <summary>A value that represents the global domain. </summary>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageSender.ReceiverDomain">
      <summary>Gets the domain of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that this sender will send messages to.</summary>
      <returns>The domain of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that this sender will send messages to, depending on the receiver's <see cref="P:System.Windows.Messaging.LocalMessageReceiver.NameScope" /> property value.</returns>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageSender.ReceiverName">
      <summary>Gets the name of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that this sender will send messages to.</summary>
      <returns>The name of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that this sender will send messages to.</returns>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageSender.SendAsync(System.String)">
      <summary>Sends the specified message to the configured receiver asynchronously.</summary>
      <param name="message">The message to send.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> is longer than 40,960 characters.</exception>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageSender.SendAsync(System.String,System.Object)">
      <summary>Sends the specified messages to the configured receiver asynchronously.</summary>
      <param name="message">The message to send.</param>
      <param name="userState">A unique user-state object that functions as a task ID for the message transfer. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> is longer than 40,960 characters.</exception>
    </member>
    <member name="E:System.Windows.Messaging.LocalMessageSender.SendCompleted">
      <summary>Occurs when the message has been successfully sent. </summary>
    </member>
    <member name="T:System.Windows.Messaging.MessageReceivedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Messaging.LocalMessageReceiver.MessageReceived" /> event.</summary>
    </member>
    <member name="P:System.Windows.Messaging.MessageReceivedEventArgs.Message">
      <summary>Gets the message sent from a <see cref="T:System.Windows.Messaging.LocalMessageSender" /> to a <see cref="T:System.Windows.Messaging.LocalMessageReceiver" />. </summary>
      <returns>The message that was sent. </returns>
    </member>
    <member name="P:System.Windows.Messaging.MessageReceivedEventArgs.NameScope">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> is configured to receive messages from the global namescope or from a specific domain.</summary>
      <returns>A value that indicates whether the receiver is configured for a global or domain namescope.</returns>
    </member>
    <member name="P:System.Windows.Messaging.MessageReceivedEventArgs.ReceiverName">
      <summary>Gets the name of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that received the message.</summary>
      <returns>The name of the message receiver. </returns>
    </member>
    <member name="P:System.Windows.Messaging.MessageReceivedEventArgs.Response">
      <summary>Gets or sets a response message to be sent to the <see cref="T:System.Windows.Messaging.LocalMessageSender" /> that sent the original message.</summary>
      <returns>The response message to be sent to the sender of the original message. </returns>
    </member>
    <member name="P:System.Windows.Messaging.MessageReceivedEventArgs.SenderDomain">
      <summary>Gets the domain of the <see cref="T:System.Windows.Messaging.LocalMessageSender" /> that sent the message.</summary>
      <returns>The domain of the <see cref="T:System.Windows.Messaging.LocalMessageSender" /> that sent the message.</returns>
    </member>
    <member name="T:System.Windows.Messaging.ReceiverNameScope">
      <summary>Defines values that indicate whether a <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> name is scoped to the global domain or to a specific domain. </summary>
    </member>
    <member name="F:System.Windows.Messaging.ReceiverNameScope.Domain">
      <summary>The receiver name is scoped to the domain of the receiver. </summary>
    </member>
    <member name="F:System.Windows.Messaging.ReceiverNameScope.Global">
      <summary>The receiver name is scoped to the global domain.</summary>
    </member>
    <member name="T:System.Windows.Messaging.SendCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Messaging.LocalMessageSender.SendCompleted" /> event.</summary>
    </member>
    <member name="P:System.Windows.Messaging.SendCompletedEventArgs.Message">
      <summary>Gets the message sent from a <see cref="T:System.Windows.Messaging.LocalMessageSender" /> to a <see cref="T:System.Windows.Messaging.LocalMessageReceiver" />. </summary>
      <returns>The message that was sent. </returns>
    </member>
    <member name="P:System.Windows.Messaging.SendCompletedEventArgs.ReceiverDomain">
      <summary>Gets the domain of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that received the message.</summary>
      <returns>The domain of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that received the message.</returns>
    </member>
    <member name="P:System.Windows.Messaging.SendCompletedEventArgs.ReceiverName">
      <summary>Gets the name of the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that received the message.</summary>
      <returns>The name of the message receiver. </returns>
    </member>
    <member name="P:System.Windows.Messaging.SendCompletedEventArgs.Response">
      <summary>Gets the response message sent to the <see cref="T:System.Windows.Messaging.LocalMessageSender" /> from the <see cref="T:System.Windows.Messaging.LocalMessageReceiver" /> that received the original message.</summary>
      <returns>The response message sent to the sender of the original message. </returns>
    </member>
    <member name="T:System.Windows.Messaging.SendFailedException">
      <summary>Represents an exception that can occur when a <see cref="T:System.Windows.Messaging.LocalMessageSender" /> fails to send a message.</summary>
    </member>
    <member name="T:System.Windows.Navigation.LoadCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.WebBrowser.LoadCompleted" /> event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Navigation.NavigationService.Navigated" /> event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
      <summary>Provides data for the <see cref="M:System.Windows.Controls.Page.OnNavigatingFrom(System.Windows.Navigation.NavigatingCancelEventArgs)" /> method and the <see cref="E:System.Windows.Navigation.NavigationService.Navigating" /> event. </summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigatingCancelEventArgs.#ctor(System.Uri,System.Windows.Navigation.NavigationMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" /> class. </summary>
      <param name="uri">The uniform resource identifier (URI) for the content that is being navigated to.</param>
      <param name="mode">A value that indicates the type of navigation that is occurring.</param>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
      <summary>Gets a value that indicates the type of navigation that is occurring.</summary>
      <returns>A value that indicates the type of navigation (<see cref="F:System.Windows.Navigation.NavigationMode.Back" />, <see cref="F:System.Windows.Navigation.NavigationMode.Forward" />, or <see cref="F:System.Windows.Navigation.NavigationMode.New" />) that is occurring.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) for the content that is being navigated to.</summary>
      <returns>A value that represents the URI for the content.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Navigation.NavigationService.Navigating" /> event, which is a cancelable event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationEventArgs">
      <summary>Provides data for navigation methods and event handlers that cannot cancel the navigation request.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationEventArgs.#ctor(System.Object,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> class. </summary>
      <param name="content">Initializes the <see cref="P:System.Windows.Navigation.NavigationEventArgs.Content" /> property.</param>
      <param name="uri">Initializes the <see cref="P:System.Windows.Navigation.NavigationEventArgs.Uri" /> property.</param>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
      <summary>Gets the content of the target being navigated to.</summary>
      <returns>An object that represents the target content.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) of the target.</summary>
      <returns>A value that represents the URI.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationMode">
      <summary>Specifies the type of navigation that is occurring. </summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.New">
      <summary>Navigating to new content. This value is used when the <see cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" /> method is called or when the <see cref="P:System.Windows.Navigation.NavigationService.Source" /> property is set. It is also used for any navigation request that the user initiates from the Web browser (including the back or forward buttons in a Web browser).</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Back">
      <summary>Navigating to the most recent content in the back navigation history. This value is used when the <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> method is called.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Forward">
      <summary>Navigating to the most recent content in the forward navigation history. This value is used when the <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> method is called.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Refresh">
      <summary>Reloading the current content. This value is used when the <see cref="M:System.Windows.Navigation.NavigationService.Refresh" /> method is called.</summary>
    </member>
    <member name="T:System.Windows.Printing.BeginPrintEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Printing.PrintDocument.BeginPrint" /> event.</summary>
    </member>
    <member name="M:System.Windows.Printing.BeginPrintEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Printing.BeginPrintEventArgs" /> class.</summary>
    </member>
    <member name="T:System.Windows.Printing.EndPrintEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Printing.PrintDocument.EndPrint" /> event. </summary>
    </member>
    <member name="M:System.Windows.Printing.EndPrintEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Printing.EndPrintEventArgs" /> class.  </summary>
    </member>
    <member name="P:System.Windows.Printing.EndPrintEventArgs.Error">
      <summary>Gets an exception that indicates what kind of error occurred during printing, if an error occurred. </summary>
      <returns>An exception that indicates what kind of error occurred during printing, if an error occurred. The default is null.</returns>
    </member>
    <member name="T:System.Windows.Printing.PrintDocument">
      <summary>Provides printing capabilities for a Silverlight application.</summary>
    </member>
    <member name="M:System.Windows.Printing.PrintDocument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Printing.PrintDocument" /> class. </summary>
    </member>
    <member name="E:System.Windows.Printing.PrintDocument.BeginPrint">
      <summary>Occurs after the <see cref="M:System.Windows.Printing.PrintDocument.Print" /> method is called and the print dialog box successfully returns, but before the <see cref="E:System.Windows.Printing.PrintDocument.PrintPage" /> event is raised.</summary>
    </member>
    <member name="E:System.Windows.Printing.PrintDocument.EndPrint">
      <summary>Occurs when the printing operation is complete or when the print operation is cancelled by the application author. </summary>
    </member>
    <member name="M:System.Windows.Printing.PrintDocument.Print(System.String)">
      <summary>Starts the printing process for the specified document by opening the print dialog box.</summary>
      <param name="documentName">The name of the document to print.</param>
      <exception cref="T:System.Security.SecurityException">The print operation is not user-initiated.</exception>
    </member>
    <member name="P:System.Windows.Printing.PrintDocument.PrintedPageCount">
      <summary>Gets the number of pages that have printed.</summary>
      <returns>The number of pages that have printed.</returns>
    </member>
    <member name="F:System.Windows.Printing.PrintDocument.PrintedPageCountProperty">
      <summary>Gets the identifier for the <see cref="P:System.Windows.Printing.PrintDocument.PrintedPageCount" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Printing.PrintDocument.PrintedPageCount" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Printing.PrintDocument.PrintPage">
      <summary>Occurs when each page is printing.</summary>
    </member>
    <member name="T:System.Windows.Printing.PrintPageEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Printing.PrintDocument.PrintPage" /> event.</summary>
    </member>
    <member name="M:System.Windows.Printing.PrintPageEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Printing.PrintPageEventArgs" /> class. </summary>
    </member>
    <member name="P:System.Windows.Printing.PrintPageEventArgs.HasMorePages">
      <summary>Gets or sets whether there are more pages to print.</summary>
      <returns>true if there are additional pages to print; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Printing.PrintPageEventArgs.PageMargins">
      <summary>Gets the margins of the page that is currently printing.</summary>
      <returns>The margins of the page that is currently printing.</returns>
    </member>
    <member name="P:System.Windows.Printing.PrintPageEventArgs.PageVisual">
      <summary>Gets or sets the visual element to print.</summary>
      <returns>The visual element to print. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Printing.PrintPageEventArgs.PrintableArea">
      <summary>Gets the size of the printable area.</summary>
      <returns>The size of the printable area in screen pixels. The default is 0.0F.</returns>
    </member>
    <member name="T:System.Windows.Resources.StreamResourceInfo">
      <summary>Provides resource stream information for application resources or other packages obtained through the <see cref="M:System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)" /> method. </summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor(System.IO.Stream,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.StreamResourceInfo" /> class.</summary>
      <param name="stream">The stream to use to create the resource.</param>
      <param name="contentType">The MIME type of the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.ContentType">
      <summary>Gets the MIME type of the content in the stream.</summary>
      <returns>The MIME type of the content in the stream, as a string.</returns>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.Stream">
      <summary>Gets the stream that is contained by the resource.</summary>
      <returns>The stream that is contained by the resource.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Ellipse">
      <summary>Draws an ellipse. </summary>
    </member>
    <member name="M:System.Windows.Shapes.Ellipse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Ellipse" /> class.</summary>
    </member>
    <member name="T:System.Windows.Shapes.Line">
      <summary>Draws a straight line between two points. </summary>
    </member>
    <member name="M:System.Windows.Shapes.Line.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Line" /> class. </summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.X1">
      <summary>Gets or sets the x-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> start point.</summary>
      <returns>The x-coordinate for the start point of the line, in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X1Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.X1" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.X1" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.X2">
      <summary>Gets or sets the x-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> end point.  </summary>
      <returns>The x-coordinate for the end point of the line, in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X2Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.X2" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.X2" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y1">
      <summary>Gets or sets the y-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> start point. </summary>
      <returns>The y-coordinate for the start point of the line, in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y1Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.Y1" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.Y1" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y2">
      <summary>Gets or sets the y-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> end point. </summary>
      <returns>The y-coordinate for the end point of the line, in pixels. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y2Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.Y2" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.Y2" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Path">
      <summary>Draws a series of connected lines and curves. The line and curve dimensions are declared through the <see cref="P:System.Windows.Shapes.Path.Data" /> property, and can be specified either with a Path-specific mini-language, or with an object model.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Path.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Path" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Path.Data">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Geometry" /> that specifies the shape to be drawn.</summary>
      <returns>A description of the shape to be drawn.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Path.DataProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Path.Data" /> dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Path.Data" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Polygon">
      <summary>Draws a polygon, which is a connected series of lines that form a closed shape.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polygon.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Polygon" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.FillRule">
      <summary>Gets or sets a value that specifies how the interior fill of the shape is determined.</summary>
      <returns>A value of the enumeration. The default is <see cref="F:System.Windows.Media.FillRule.EvenOdd" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.FillRuleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.Points">
      <summary>Gets or sets a collection that contains the vertex points of the polygon.</summary>
      <returns>A collection of <see cref="T:System.Windows.Point" /> structures that describes the vertex points of the polygon. The default is null. The value can be expressed as a string as described in "pointSet Grammar" below.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.PointsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polygon.Points" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Polygon.Points" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Polyline">
      <summary>Draws a series of connected straight lines. </summary>
    </member>
    <member name="M:System.Windows.Shapes.Polyline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Polyline" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.FillRule">
      <summary>Gets or sets a value that specifies how the interior fill of the shape is determined.</summary>
      <returns>A value of the enumeration that specifies the fill behavior. The default is <see cref="F:System.Windows.Media.FillRule.EvenOdd" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.FillRuleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.Points">
      <summary>Gets or sets a collection that contains the vertex points of the <see cref="T:System.Windows.Shapes.Polyline" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Point" /> structures that describe the vertex points of the <see cref="T:System.Windows.Shapes.Polyline" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.PointsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polyline.Points" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Polyline.Points" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Rectangle">
      <summary>Draws a rectangle shape, which can have a stroke and a fill.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Rectangle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Rectangle" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusX">
      <summary>Gets or sets the x-axis radius of the ellipse that is used to round the corners of the rectangle.</summary>
      <returns>The x-axis radius of the ellipse that is used to round the corners of the rectangle.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusY">
      <summary>Gets or sets the y-axis radius of the ellipse that is used to round the corners of the rectangle. </summary>
      <returns>The y-axis radius of the ellipse that is used to round the corners of the rectangle. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Shape">
      <summary>Provides a base class for shape elements, such as <see cref="T:System.Windows.Shapes.Ellipse" />, <see cref="T:System.Windows.Shapes.Polygon" />, and <see cref="T:System.Windows.Shapes.Rectangle" />.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Shape" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Fill">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how to paint the interior of the shape.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes how the shape's interior is painted. The default is null. See Remarks.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.FillProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Fill" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.Fill" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.GeometryTransform">
      <summary>Gets a value that represents a <see cref="T:System.Windows.Media.Transform" /> that is applied to the geometry of a <see cref="T:System.Windows.Shapes.Shape" /> prior to when it is drawn.</summary>
      <returns>A <see cref="T:System.Windows.Media.Transform" /> that is applied to the geometry of a <see cref="T:System.Windows.Shapes.Shape" /> prior to when it is drawn.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stretch">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
      <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values. The default value at run time depends on the type of <see cref="T:System.Windows.Shapes.Shape" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Stretch" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.Stretch" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stroke">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashArray">
      <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
      <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashArrayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashCap">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
      <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashCapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashOffset">
      <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeEndLineCap">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
      <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeEndLineCapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeLineJoin">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
      <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. The default value is <see cref="F:System.Windows.Media.PenLineJoin.Miter" />. </returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeLineJoinProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeMiterLimit">
      <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
      <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeMiterLimitProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Stroke" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.Stroke" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeStartLineCap">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
      <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeStartLineCapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeThickness">
      <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
      <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary>Provides services for managing the queue of work items for a thread. </summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Action)">
      <summary>Executes the specified delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</summary>
      <returns>An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that represents the operation that has been posted to the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</returns>
      <param name="a">A delegate to a method that takes no arguments and does not return a value, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary>Executes the specified delegate asynchronously with the specified array of arguments on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</summary>
      <returns>An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that represents the operation that has been posted to the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</returns>
      <param name="d">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</param>
      <param name="args">An array of objects to pass as arguments to the specified method.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary>Determines whether the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
      <returns>true if the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary>Represents an operation that has been posted to the <see cref="T:System.Windows.Threading.Dispatcher" /> queue. </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary>Provides a synchronization context for Silverlight.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> class by using the current <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> class by using the specified <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="dispatcher">The <see cref="T:System.Windows.Threading.Dispatcher" /> to associate this <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary>Creates a copy of this <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns>The copy of this synchronization context.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Invokes the callback in the synchronization context asynchronously.</summary>
      <param name="d">The delegate to call.</param>
      <param name="state">The object passed to the delegate.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Invokes the callback in the synchronization context synchronously. </summary>
      <param name="d">The delegate to call.</param>
      <param name="state">The object passed to the delegate.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary>A timer that is integrated into the <see cref="T:System.Windows.Threading.Dispatcher" /> queue, which is processed at a specified interval of time and at a specified priority. </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class. </summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary>Gets or sets the amount of time between timer ticks. </summary>
      <returns>The amount of time between ticks. The default is 00:00:00.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property represents a negative time interval. </exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary>Gets a value that indicates whether the timer is running. </summary>
      <returns>true if the timer is enabled; otherwise, false.  </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary>Starts the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary>Stops the <see cref="T:System.Windows.Threading.DispatcherTimer" />. </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary>Occurs when the timer interval has elapsed. </summary>
    </member>
  </members>
</doc>